diff --git a/node_modules/termost/.DS_Store b/node_modules/termost/.DS_Store
new file mode 100644
index 0000000..5008ddf
Binary files /dev/null and b/node_modules/termost/.DS_Store differ
diff --git a/node_modules/termost/dist/index.cjs b/node_modules/termost/dist/index.cjs
index b9f3a12..fb19857 100644
--- a/node_modules/termost/dist/index.cjs
+++ b/node_modules/termost/dist/index.cjs
@@ -1,5 +1,5 @@
-"use strict";var U=Object.create;var C=Object.defineProperty;var X=Object.getOwnPropertyDescriptor;var B=Object.getOwnPropertyNames;var W=Object.getPrototypeOf,z=Object.prototype.hasOwnProperty;var Y=(e,t)=>{for(var o in t)C(e,o,{get:t[o],enumerable:!0})},L=(e,t,o,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of B(t))!z.call(e,n)&&n!==o&&C(e,n,{get:()=>t[n],enumerable:!(s=X(t,n))||s.enumerable});return e};var h=(e,t,o)=>(o=e!=null?U(W(e)):{},L(t||!e||!e.__esModule?C(o,"default",{value:e,enumerable:!0}):o,e)),Z=e=>L(C({},"__esModule",{value:!0}),e);var pe={};Y(pe,{helpers:()=>ue,termost:()=>Q});module.exports=Z(pe);var I=require("child_process"),v=async(e,t={hasLiveOutput:!1})=>new Promise((o,s)=>{let n="",l="",[r,...a]=e.split(" "),i=(0,I.spawn)(r,a,{cwd:t.cwd,shell:!0,stdio:t.hasLiveOutput?"inherit":"pipe",env:{...process.env,FORCE_COLOR:"1"}});i.stdout?.on("data",c=>{n+=c}),i.stderr?.on("data",c=>{l+=c}),i.on("close",c=>{if(c!==0){let u=`${l}${n}`;s(u.trim())}else o(n.trim())})});var O=h(require("picocolors")),y=(e,{color:t,modifiers:o}={color:"white",modifiers:[]})=>{let s=[];return s.push(O.default[oe[t??"white"]]),(o??[]).forEach(n=>{n==="uppercase"?e=e.toUpperCase():n==="lowercase"?e=e.toLowerCase():s.push(O.default[ne[n]])}),ee(...s)(e)},ee=(...e)=>e.reduce((t,o)=>s=>t(o(s)),e[0]),M=(e,{label:t,type:o="information"}={})=>{let{color:s,defaultLabel:n,icon:l,method:r}=te[o],a=typeof e=="string"?[e]:e;r(y(`
-${l} ${t??n}`,{color:s,modifiers:["bold"]}));for(let i of a)r(y(`   ${i}`,{color:s}))},te={error:{color:"red",defaultLabel:"Error",icon:"\u274C",method:console.error},information:{color:"blue",defaultLabel:"Information",icon:"\u2139\uFE0F ",method:console.info},success:{color:"green",defaultLabel:"Success",icon:"\u2705",method:console.log},warning:{color:"yellow",defaultLabel:"Warning",icon:"\u26A0\uFE0F ",method:console.warn}},oe={black:"black",blue:"blue",cyan:"cyan",green:"green",grey:"gray",magenta:"magenta",red:"red",white:"white",yellow:"yellow"},ne={bold:"bold",italic:"italic",strikethrough:"strikethrough",underline:"underline"};var P=h(require("fs")),b=h(require("path")),K=e=>{let t=b.default.resolve(e,"package.json");return re(t)?require(t):K(b.default.resolve(e,".."))},re=e=>{try{return P.default.accessSync(e,P.default.constants.F_OK),!0}catch{return!1}},j=()=>{let e=require.main?.filename;if(!e)throw new Error("Termost was unable to retrieve automatically the package name and version. To fix it, use `termost({ name, description, version })` to define them manually.");return K(b.default.dirname(e))};var T=()=>{let e=process.argv.slice(2),t,o=[],s={},n,l=(a,i)=>{i?s[a]=typeof i=="string"?w(i):!0:n=a},r=()=>{n&&(s[n]=!0,n=void 0)};for(let a of e){let i=se.exec(a)?.groups,c=ae.exec(a)?.groups;if(i?.name){r();let u=i.name.split(""),p=u.length-1;u.forEach((f,m)=>{l(f,p===m?void 0:!0)})}else c?.name?(r(),l(c.name,c.value)):n?(s[n]=w(a),n=void 0):t?o.push(a):t=a}return r(),{command:t,operands:o,options:s}},se=/^-(?<name>(?!-).*)$/,ae=/^--(?<name>.*?)(?:=(?<value>.+))?$/,w=e=>{try{return JSON.parse(e)}catch{return e}};var E=()=>{let e=[];return{enqueue(t){e.push(t)},dequeue(){return e.shift()},isEmpty(){return e.length===0}}};var g=e=>{let t=$[e];if(!t)throw new Error(`No controller has been set for the \`${e}\` command.
-Have you run the \`termost\` constructor?`);return t},N=(e,t)=>{let o=E(),s={},n={description:t,options:{"-h, --help":"Display the help center","-v, --version":"Print the version"}},l={addOptionDescription(r,a){n.options[r]=a},addValue(r,a){s[r]=a},addInstruction(r){o.enqueue(r)},async enable(){for(;!o.isEmpty();){let r=o.dequeue();r&&await r()}},getContext(r){return e!==r&&(s={...g(r).getContext(r),...s}),s},getMetadata(r){if(e!==r){let a=g(r).getMetadata(r);n.options={...a.options,...n.options}}return n}};return S[e]=t,$[e]=l,l},R=()=>S,$={},S={};var F=({name:e,description:t},{argv:o,name:s,version:n})=>{let l=e===s,r=o.command===e,a=N(e,t),i=g(s);return setTimeout(()=>{if(l&&!r&&i.enable(),r){let c=Object.keys(o.options);if(c.includes(_[0])||c.includes(_[1])){ie({controller:a,currentCommandName:e,isRootCommand:l,rootCommandName:s});return}if(c.includes(A[0])||c.includes(A[1])){console.info(n);return}a.enable()}},0),e},_=["help","h"],A=["version","v"],ie=({rootCommandName:e,currentCommandName:t,isRootCommand:o,controller:s})=>{let n=s.getMetadata(e),{options:l,description:r}=n,a=R(),i=Object.keys(n.options),c=Object.keys(a),u=i.length>0,p=o&&c.length>1;k("Usage"),x(`${y(`${e}${o?"":` ${String(t)}`}`,{color:"green"})} ${p?"<command> ":""}${u?"[...options]":""}`),r&&(k("Description"),x(r));let f=[...c,...i].reduce((m,d)=>Math.max(m,d.length),0);if(p){k("Commands");for(let m of c){if(m===e)continue;let d=a[m];d&&D(m,d,f)}}if(u){k("Options");for(let m of i)D(m,l[m],f)}},x=(...e)=>{console.log(y(...e))},k=e=>{x(`
-${e}:`,{color:"yellow",modifiers:["bold","underline","uppercase"]})},D=(e,t,o)=>{x(`  ${y(e.padEnd(o+1," "),{color:"green"})} ${t}`)};var G=require("enquirer"),q=e=>{let{key:t,defaultValue:o,label:s,type:n}=e;return async function(r,a){let i={initial:o,message:typeof s=="function"?s(r,a):s,name:t,type:n};if(e.type==="select"||e.type==="multiselect"){let u=e.type==="multiselect",f=e.options.map(m=>({title:m,value:m,...u&&{selected:(o||[]).includes(m)}}));i.choices=f}let c=await(0,G.prompt)(i);return{key:t,value:c[t]}}};var H=(e,{argv:t})=>o=>{let{key:s,name:n,description:l,defaultValue:r}=o,a=typeof n=="string"?[n]:[n.short,n.long],i=a.map((c,u)=>"-".repeat(a.length>1?u+1:2)+c).join(", ");return e.addOptionDescription(i,l),async function(){let u;for(let p of a)if(p in t.options){u=t.options[p];break}return Promise.resolve({key:s,value:u??r})}};var V=require("listr2"),J=e=>{let{key:t,label:o,handler:s}=e,n=o?new V.Listr([],{rendererOptions:{collapseErrors:!1,formatOutput:"wrap",showErrorMessage:!0,timer:V.PRESET_TIMER}}):null;return async function(r,a){let i;return n?(n.add({...o&&{title:typeof o=="function"?o(r,a):o},task:async()=>i=await s(r,a)}),await n.run()):i=await s(r,a),{key:t,value:i}}};function Q(e,t={}){let o=me(e)?e:{description:e},s=j(),n=o.name??s.name,{command:l=n,options:r,operands:a}=T();return le(t),ce({argv:{command:l,options:r,operands:a},description:o.description??s.description,name:n,version:o.version??s.version})}var ce=e=>{let{argv:t,name:o,description:s}=e,n=o,l=n,r=(i,c)=>{let u=i(c),p=g(l);p.addInstruction(async()=>{let{skip:f}=c,m=p.getContext(n);if(f?.(m,t))return;let d=await u(m,t);!d||!d.key||p.addValue(d.key,d.value)})},a={command(i){return l=F(i,e),this},input(i){return r(q,i),this},option(i){return r(H(g(l),e),i),this},task(i){return r(J,i),this}};return a.command({name:o,description:s}),a},le=({onShutdown:e=()=>{},onException:t=()=>{}})=>{process.on("SIGTERM",()=>{e(),process.exit(0)}),process.on("SIGINT",()=>{e(),process.exit(0)}),process.on("uncaughtException",o=>{t(o),process.exit(1)}),process.on("unhandledRejection",o=>{o instanceof Error&&t(o),process.exit(1)})},me=e=>e!==null&&typeof e=="object";var ue={exec:v,format:y,message:M};0&&(module.exports={helpers,termost});
+"use strict";var U=Object.create;var C=Object.defineProperty;var X=Object.getOwnPropertyDescriptor;var B=Object.getOwnPropertyNames;var W=Object.getPrototypeOf,z=Object.prototype.hasOwnProperty;var Y=(e,t)=>{for(var n in t)C(e,n,{get:t[n],enumerable:!0})},L=(e,t,n,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of B(t))!z.call(e,o)&&o!==n&&C(e,o,{get:()=>t[o],enumerable:!(r=X(t,o))||r.enumerable});return e};var h=(e,t,n)=>(n=e!=null?U(W(e)):{},L(t||!e||!e.__esModule?C(n,"default",{value:e,enumerable:!0}):n,e)),Z=e=>L(C({},"__esModule",{value:!0}),e);var pe={};Y(pe,{helpers:()=>ue,termost:()=>Q});module.exports=Z(pe);var I=require("child_process"),v=async(e,t={hasLiveOutput:!1})=>new Promise((n,r)=>{let o="",c="",[s,...i]=e.split(" "),a=(0,I.spawn)(s,i,{cwd:t.cwd,env:{...process.env,FORCE_COLOR:"1"},shell:!0,stdio:t.hasLiveOutput?"inherit":"pipe"});a.stdout?.on("data",l=>{o+=l}),a.stderr?.on("data",l=>{c+=l}),a.on("close",l=>{if(l!==0){let u=`${c}${o}`;r(u.trim())}else n(o.trim())})});var O=h(require("picocolors")),y=(e,{color:t,modifiers:n}={color:"white",modifiers:[]})=>{let r=[];return r.push(O.default[ne[t??"white"]]),(n??[]).forEach(o=>{o==="uppercase"?e=e.toUpperCase():o==="lowercase"?e=e.toLowerCase():r.push(O.default[oe[o]])}),ee(...r)(e)},ee=(...e)=>e.reduce((t,n)=>r=>t(n(r)),e[0]),K=(e,{label:t,type:n="information"}={})=>{let{color:r,defaultLabel:o,icon:c,method:s}=te[n],i=typeof e=="string"?[e]:e;s(y(`
+${c} ${t??o}`,{color:r,modifiers:["bold"]}));for(let a of i)s(y(`   ${a}`,{color:r}))},te={error:{color:"red",defaultLabel:"Error",icon:"\u274C",method:console.error},information:{color:"blue",defaultLabel:"Information",icon:"\u2139\uFE0F ",method:console.info},success:{color:"green",defaultLabel:"Success",icon:"\u2705",method:console.log},warning:{color:"yellow",defaultLabel:"Warning",icon:"\u26A0\uFE0F ",method:console.warn}},ne={black:"black",blue:"blue",cyan:"cyan",green:"green",grey:"gray",magenta:"magenta",red:"red",white:"white",yellow:"yellow"},oe={bold:"bold",italic:"italic",strikethrough:"strikethrough",underline:"underline"};var j=()=>{let e=[];return{dequeue(){return e.shift()},enqueue(t){e.push(t)},isEmpty(){return e.length===0}}};var g=e=>{let t=T[e];if(!t)throw new Error(`No controller has been set for the \`${e}\` command.
+Have you run the \`termost\` constructor?`);return t},M=(e,t)=>{let n=j(),r={},o={description:t,options:{"-h, --help":"Display the help center","-v, --version":"Print the version"}},c={addInstruction(s){n.enqueue(s)},addOptionDescription(s,i){o.options[s]=i},addValue(s,i){r[s]=i},async enable(){for(;!n.isEmpty();){let s=n.dequeue();s&&await s()}},getContext(s){return e!==s&&(r={...g(s).getContext(s),...r}),r},getMetadata(s){if(e!==s){let i=g(s).getMetadata(s);o.options={...i.options,...o.options}}return o}};return E[e]=t,T[e]=c,c},w=()=>E,T={},E={};var S=({name:e,description:t},{name:n,argv:r,version:o})=>{let c=e===n,s=r.command===e,i=M(e,t),a=g(n);return setTimeout(()=>{if(c&&!s&&a.enable(),s){let l=Object.keys(r.options);if(l.includes(N[0])||l.includes(N[1])){re({controller:i,currentCommandName:e,isRootCommand:c,rootCommandName:n});return}if(l.includes(R[0])||l.includes(R[1])){console.info(o);return}i.enable()}},0),e},N=["help","h"],R=["version","v"],re=({controller:e,currentCommandName:t,isRootCommand:n,rootCommandName:r})=>{let o=e.getMetadata(r),{description:c,options:s}=o,i=w(),a=Object.keys(o.options),l=Object.keys(i),u=a.length>0,p=n&&l.length>1;b("Usage"),k(`${y(`${r}${n?"":` ${String(t)}`}`,{color:"green"})} ${p?"<command> ":""}${u?"[...options]":""}`),c&&(b("Description"),k(c));let f=[...l,...a].reduce((m,d)=>Math.max(m,d.length),0);if(p){b("Commands");for(let m of l){if(m===r)continue;let d=i[m];d&&$(m,d,f)}}if(u){b("Options");for(let m of a)$(m,s[m],f)}},k=(...e)=>{console.log(y(...e))},b=e=>{k(`
+${e}:`,{color:"yellow",modifiers:["bold","underline","uppercase"]})},$=(e,t,n)=>{k(`  ${y(e.padEnd(n+1," "),{color:"green"})} ${t}`)};var _=require("enquirer"),A=e=>{let{key:t,label:n,defaultValue:r,type:o}=e;return async function(s,i){let a={name:t,initial:r,message:typeof n=="function"?n(s,i):n,type:o};if(e.type==="select"||e.type==="multiselect"){let u=e.type==="multiselect",f=e.options.map(m=>({title:m,value:m,...u&&{selected:(r||[]).includes(m)}}));a.choices=f}let l=await(0,_.prompt)(a);return{key:t,value:l[t]}}};var D=(e,{argv:t})=>n=>{let{key:r,name:o,description:c,defaultValue:s}=n,i=typeof o=="string"?[o]:[o.short,o.long],a=i.map((l,u)=>"-".repeat(i.length>1?u+1:2)+l).join(", ");return e.addOptionDescription(a,c),async function(){let u;for(let p of i)if(p in t.options){u=t.options[p];break}return Promise.resolve({key:r,value:u??s})}};var x=require("listr2"),F=e=>{let{key:t,label:n,handler:r}=e,o=n?new x.Listr([],{rendererOptions:{collapseErrors:!1,formatOutput:"wrap",showErrorMessage:!0,timer:x.PRESET_TIMER}}):null;return async function(s,i){let a;return o?(o.add({...n&&{title:typeof n=="function"?n(s,i):n},task:async()=>a=await r(s,i)}),await o.run()):a=await r(s,i),{key:t,value:a}}};var P=h(require("fs")),V=h(require("path")),G=e=>{let t=V.default.resolve(e,"package.json");return se(t)?require(t):G(V.default.resolve(e,".."))},se=e=>{try{return P.default.accessSync(e,P.default.constants.F_OK),!0}catch{return!1}},q=()=>{let e=require.main?.filename;if(!e)throw new Error("Termost was unable to retrieve automatically the package name and version. To fix it, use `termost({ name, description, version })` to define them manually.");return G(V.default.dirname(e))};var J=()=>{let e=process.argv.slice(2),t,n=[],r={},o,c=(i,a)=>{a?r[i]=typeof a=="string"?H(a):!0:o=i},s=()=>{o&&(r[o]=!0,o=void 0)};for(let i of e){let a=ae.exec(i)?.groups,l=ie.exec(i)?.groups;if(a?.name){s();let u=a.name.split(""),p=u.length-1;u.forEach((f,m)=>{c(f,p===m?void 0:!0)})}else l?.name?(s(),c(l.name,l.value)):o?(r[o]=H(i),o=void 0):t?n.push(i):t=i}return s(),{command:t,operands:n,options:r}},ae=/^-(?<name>(?!-).*)$/,ie=/^--(?<name>.*?)(?:=(?<value>.+))?$/,H=e=>{try{return JSON.parse(e)}catch{return e}};function Q(e,t={}){let{name:n,description:r,version:o}=me(e)?e:{name:void 0,description:e,version:void 0};if(n===void 0||r===void 0||o===void 0){let a=q();n??(n=a.name),r??(r=a.description),o??(o=a.version)}let{command:c=n,operands:s,options:i}=J();return le(t),ce({name:n,description:r,argv:{command:c,operands:s,options:i},version:o})}var ce=e=>{let{name:t,description:n,argv:r}=e,o=t,c=o,s=(a,l)=>{let u=a(l),p=g(c);p.addInstruction(async()=>{let{skip:f}=l,m=p.getContext(o);if(f?.(m,r))return;let d=await u(m,r);!d||!d.key||p.addValue(d.key,d.value)})},i={command(a){return c=S(a,e),this},input(a){return s(A,a),this},option(a){return s(D(g(c),e),a),this},task(a){return s(F,a),this}};return i.command({name:t,description:n}),i},le=({onException:e=()=>{},onShutdown:t=()=>{}})=>{process.on("SIGTERM",()=>{t(),process.exit(0)}),process.on("SIGINT",()=>{t(),process.exit(0)}),process.on("uncaughtException",n=>{e(n),process.exit(1)}),process.on("unhandledRejection",n=>{n instanceof Error&&e(n),process.exit(1)})},me=e=>e!==null&&typeof e=="object";var ue={exec:v,format:y,message:K};0&&(module.exports={helpers,termost});
 //# sourceMappingURL=index.cjs.map
diff --git a/node_modules/termost/dist/index.cjs.map b/node_modules/termost/dist/index.cjs.map
index 6ae5d95..3a2ae79 100644
--- a/node_modules/termost/dist/index.cjs.map
+++ b/node_modules/termost/dist/index.cjs.map
@@ -1,7 +1,7 @@
 {
   "version": 3,
-  "sources": ["../src/index.ts", "../src/helpers/process/index.ts", "../src/helpers/stdout/index.ts", "../src/helpers/package/index.ts", "../src/helpers/stdin/index.ts", "../src/api/command/controller/queue.ts", "../src/api/command/controller/index.ts", "../src/api/command/command.ts", "../src/api/input/index.ts", "../src/api/option/index.ts", "../src/api/task/index.ts", "../src/termost.ts"],
-  "sourcesContent": ["import { exec } from \"./helpers/process\";\nimport { format, message } from \"./helpers/stdout\";\n\nexport { termost } from \"./termost\";\nexport type { Termost } from \"./termost\";\nexport const helpers = {\n\texec,\n\tformat,\n\tmessage,\n};\n", "import { spawn } from \"child_process\";\n\nexport const exec = async (\n\tcommand: string,\n\toptions: ExecOptions = { hasLiveOutput: false },\n) => {\n\treturn new Promise<string>((resolve, reject) => {\n\t\tlet stdout = \"\";\n\t\tlet stderr = \"\";\n\t\tconst [bin, ...args] = command.split(\" \") as [string, ...string[]];\n\n\t\tconst childProcess = spawn(bin, args, {\n\t\t\tcwd: options.cwd,\n\t\t\tshell: true,\n\t\t\tstdio: options.hasLiveOutput ? \"inherit\" : \"pipe\",\n\t\t\tenv: {\n\t\t\t\t...process.env,\n\t\t\t\t// @note: make sure to force color display for spawned processes\n\t\t\t\tFORCE_COLOR: \"1\",\n\t\t\t},\n\t\t});\n\n\t\tchildProcess.stdout?.on(\"data\", (chunk) => {\n\t\t\tstdout += chunk;\n\t\t});\n\n\t\tchildProcess.stderr?.on(\"data\", (chunk) => {\n\t\t\tstderr += chunk;\n\t\t});\n\n\t\tchildProcess.on(\"close\", (exitCode) => {\n\t\t\tif (exitCode !== 0) {\n\t\t\t\tconst output = `${stderr}${stdout}`;\n\n\t\t\t\treject(output.trim());\n\t\t\t} else {\n\t\t\t\tresolve(stdout.trim());\n\t\t\t}\n\t\t});\n\t});\n};\n\ntype ExecOptions = {\n\tcwd?: string;\n\thasLiveOutput?: boolean;\n};\n", "import pico from \"picocolors\";\n\n/**\n * A helper to format an arbitrary text as a message input\n * @param message The text to display\n * @param options The configuration object to control the formatting properties\n * @returns The formatted text\n */\nexport const format = (\n\tmessage: string,\n\t{\n\t\tcolor,\n\t\tmodifiers,\n\t}: {\n\t\tcolor?: Color;\n\t\tmodifiers?: Modifier[];\n\t} = {\n\t\tcolor: \"white\",\n\t\tmodifiers: [],\n\t},\n) => {\n\tconst transformers: ((input: string) => string)[] = [];\n\n\ttransformers.push(pico[colorMapper[color ?? \"white\"]]);\n\n\t(modifiers ?? []).forEach((mod: Modifier) => {\n\t\tif (mod === \"uppercase\") {\n\t\t\tmessage = message.toUpperCase();\n\t\t} else if (mod === \"lowercase\") {\n\t\t\tmessage = message.toLowerCase();\n\t\t} else {\n\t\t\ttransformers.push(pico[modifierMapper[mod]]);\n\t\t}\n\t});\n\n\treturn compose(...transformers)(message);\n};\n\nconst compose = <T>(...fns: ((a: T) => T)[]) =>\n\tfns.reduce(\n\t\t(prevFn, nextFn) => (value) => prevFn(nextFn(value)),\n\t\tfns[0] as (a: T) => T,\n\t);\n\n/**\n * An opinionated helper to display arbitrary text on the console\n * @param message The text to display. Use an array if you need to display a message in several lines\n * @param options The configuration object to define the display type and/or override the default label\n */\nexport const message = (\n\tcontent: string[] | string,\n\t{\n\t\tlabel,\n\t\ttype = \"information\",\n\t}: { type?: MessageType; label?: string } = {},\n) => {\n\tconst { color, defaultLabel, icon, method } = formatPropertiesByType[type];\n\tconst messages = typeof content === \"string\" ? [content] : content;\n\n\tmethod(\n\t\tformat(`\\n${icon} ${label ?? defaultLabel}`, {\n\t\t\tcolor,\n\t\t\tmodifiers: [\"bold\"],\n\t\t}),\n\t);\n\n\tfor (const msg of messages) {\n\t\tmethod(format(`   ${msg}`, { color }));\n\t}\n};\n\nconst formatPropertiesByType = {\n\terror: {\n\t\tcolor: \"red\",\n\t\tdefaultLabel: \"Error\",\n\t\ticon: \"\u274C\",\n\t\tmethod: console.error,\n\t},\n\tinformation: {\n\t\tcolor: \"blue\",\n\t\tdefaultLabel: \"Information\",\n\t\ticon: \"\u2139\uFE0F \",\n\t\tmethod: console.info,\n\t},\n\tsuccess: {\n\t\tcolor: \"green\",\n\t\tdefaultLabel: \"Success\",\n\t\ticon: \"\u2705\",\n\t\tmethod: console.log,\n\t},\n\twarning: {\n\t\tcolor: \"yellow\",\n\t\tdefaultLabel: \"Warning\",\n\t\ticon: \"\u26A0\uFE0F \",\n\t\tmethod: console.warn,\n\t},\n} as const;\n\nconst colorMapper = {\n\tblack: \"black\",\n\tblue: \"blue\",\n\tcyan: \"cyan\",\n\tgreen: \"green\",\n\tgrey: \"gray\",\n\tmagenta: \"magenta\",\n\tred: \"red\",\n\twhite: \"white\",\n\tyellow: \"yellow\",\n} as const;\n\nconst modifierMapper = {\n\tbold: \"bold\",\n\titalic: \"italic\",\n\tstrikethrough: \"strikethrough\",\n\tunderline: \"underline\",\n} as const;\n\ntype MessageType = \"error\" | \"information\" | \"success\" | \"warning\";\n\ntype Color =\n\t| \"black\"\n\t| \"blue\"\n\t| \"cyan\"\n\t| \"green\"\n\t| \"grey\"\n\t| \"magenta\"\n\t| \"red\"\n\t| \"white\"\n\t| \"yellow\";\n\ntype Modifier =\n\t| \"bold\"\n\t| \"italic\"\n\t| \"lowercase\"\n\t| \"strikethrough\"\n\t| \"underline\"\n\t| \"uppercase\";\n", "import fs from \"fs\";\nimport path from \"path\";\n\nimport type { PackageMetadata } from \"../../types\";\n\nexport const findNearestPackageJson = (pathname: string): PackageMetadata => {\n\tconst packagePathname = path.resolve(pathname, \"package.json\");\n\n\tif (isFileExists(packagePathname)) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-var-requires\n\t\treturn require(packagePathname) as PackageMetadata;\n\t}\n\n\treturn findNearestPackageJson(path.resolve(pathname, \"..\"));\n};\n\nconst isFileExists = (pathname: string) => {\n\ttry {\n\t\tfs.accessSync(pathname, fs.constants.F_OK);\n\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const getPackageMetadata = () => {\n\tconst mainFilename = require.main?.filename;\n\n\tif (!mainFilename) {\n\t\tthrow new Error(\n\t\t\t\"Termost was unable to retrieve automatically the package name and version. To fix it, use `termost({ name, description, version })` to define them manually.\",\n\t\t);\n\t}\n\n\treturn findNearestPackageJson(path.dirname(mainFilename));\n};\n", "// eslint-disable-next-line sonarjs/cognitive-complexity\nexport const getArguments = () => {\n\tconst parameters = process.argv.slice(2);\n\tlet command: string | undefined;\n\tconst operands: string[] = [];\n\tconst options: Record<string, boolean | number | string> = {};\n\tlet currentOptionName: string | undefined;\n\n\tconst addOptimisticOption = (name: string, value?: boolean | string) => {\n\t\tif (value) {\n\t\t\toptions[name] = typeof value === \"string\" ? castValue(value) : true;\n\t\t} else {\n\t\t\tcurrentOptionName = name;\n\t\t}\n\t};\n\n\tconst flushOptimisticOption = () => {\n\t\tif (currentOptionName) {\n\t\t\toptions[currentOptionName] = true;\n\t\t\tcurrentOptionName = undefined;\n\t\t}\n\t};\n\n\tfor (const parameter of parameters) {\n\t\tconst shortFlagMatchResult = SHORT_FLAG_REGEX.exec(parameter)?.groups;\n\t\tconst longFlagMatchResult = LONG_FLAG_REGEX.exec(parameter)?.groups;\n\n\t\tif (shortFlagMatchResult?.name) {\n\t\t\tflushOptimisticOption();\n\n\t\t\tconst optionFlags = shortFlagMatchResult.name.split(\"\");\n\t\t\tconst lastIndex = optionFlags.length - 1;\n\n\t\t\toptionFlags.forEach((flag, index) => {\n\t\t\t\taddOptimisticOption(\n\t\t\t\t\tflag,\n\t\t\t\t\tlastIndex === index ? undefined : true,\n\t\t\t\t);\n\t\t\t});\n\t\t} else if (longFlagMatchResult?.name) {\n\t\t\tflushOptimisticOption();\n\t\t\taddOptimisticOption(\n\t\t\t\tlongFlagMatchResult.name,\n\t\t\t\tlongFlagMatchResult.value,\n\t\t\t);\n\t\t} else if (currentOptionName) {\n\t\t\toptions[currentOptionName] = castValue(parameter);\n\t\t\tcurrentOptionName = undefined;\n\t\t} else if (!command) {\n\t\t\tcommand = parameter;\n\t\t} else {\n\t\t\toperands.push(parameter);\n\t\t}\n\t}\n\n\tflushOptimisticOption();\n\n\treturn { command, operands, options };\n};\n\nconst SHORT_FLAG_REGEX = /^-(?<name>(?!-).*)$/;\nconst LONG_FLAG_REGEX = /^--(?<name>.*?)(?:=(?<value>.+))?$/;\n\nconst castValue = (value: string) => {\n\ttry {\n\t\treturn JSON.parse(value) as boolean | number | string;\n\t} catch {\n\t\treturn value;\n\t}\n};\n", "export const createQueue = <Item>() => {\n\tconst items: Item[] = [];\n\n\treturn {\n\t\tenqueue(item: Item) {\n\t\t\titems.push(item);\n\t\t},\n\t\tdequeue() {\n\t\t\treturn items.shift();\n\t\t},\n\t\tisEmpty() {\n\t\t\treturn items.length === 0;\n\t\t},\n\t};\n};\n", "import type {\n\tCommandName,\n\tContext,\n\tEmptyObject,\n\tObjectLikeConstraint,\n} from \"../../../types\";\n\nimport { createQueue } from \"./queue\";\n\nexport type CommandController<\n\tValues extends ObjectLikeConstraint = EmptyObject,\n> = {\n\taddValue: <Key extends keyof Values>(key: Key, value: Values[Key]) => void;\n\taddOptionDescription: (key: string, description: string) => void;\n\taddInstruction: (instruction: Instruction) => void;\n\t/**\n\t * Enables a command by iterating over instructions and executing them\n\t */\n\tenable: () => Promise<void>;\n\tgetContext: (rootCommandName: CommandName) => Context<Values>;\n\tgetMetadata: (rootCommandName: CommandName) => CommandMetadata;\n};\n\nexport const getCommandController = <Values extends ObjectLikeConstraint>(\n\tname: CommandName,\n) => {\n\tconst controller = commandControllerCollection[name];\n\n\tif (!controller) {\n\t\tthrow new Error(\n\t\t\t`No controller has been set for the \\`${name}\\` command.\\nHave you run the \\`termost\\` constructor?`,\n\t\t);\n\t}\n\n\treturn controller as CommandController<Values>;\n};\n\nexport const createCommandController = <Values extends ObjectLikeConstraint>(\n\tname: CommandName,\n\tdescription: CommandMetadata[\"description\"],\n) => {\n\tconst instructions = createQueue<Instruction>();\n\t// eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n\tlet context = {} as Context<Values>;\n\n\tconst metadata: CommandMetadata = {\n\t\tdescription,\n\t\toptions: {\n\t\t\t\"-h, --help\": \"Display the help center\",\n\t\t\t\"-v, --version\": \"Print the version\",\n\t\t},\n\t};\n\n\tconst controller: CommandController<Values> = {\n\t\taddOptionDescription(key, value) {\n\t\t\tmetadata.options[key] = value;\n\t\t},\n\t\taddValue(key, value) {\n\t\t\tcontext[key] = value;\n\t\t},\n\t\taddInstruction(instruction) {\n\t\t\tinstructions.enqueue(instruction);\n\t\t},\n\t\tasync enable() {\n\t\t\twhile (!instructions.isEmpty()) {\n\t\t\t\tconst task = instructions.dequeue();\n\n\t\t\t\tif (task) {\n\t\t\t\t\tawait task();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetContext(rootCommandName) {\n\t\t\t// @note: By design, global values are accessible to subcommands\n\t\t\t// Consequently, root command values are merged with the current command ones:\n\t\t\tif (name !== rootCommandName) {\n\t\t\t\tconst rootController = getCommandController(rootCommandName);\n\n\t\t\t\tconst globalContext =\n\t\t\t\t\trootController.getContext(rootCommandName);\n\n\t\t\t\tcontext = {\n\t\t\t\t\t...globalContext,\n\t\t\t\t\t...context,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn context;\n\t\t},\n\t\tgetMetadata(rootCommandName) {\n\t\t\tif (name !== rootCommandName) {\n\t\t\t\tconst globalMetadata =\n\t\t\t\t\tgetCommandController(rootCommandName).getMetadata(\n\t\t\t\t\t\trootCommandName,\n\t\t\t\t\t);\n\n\t\t\t\tmetadata.options = {\n\t\t\t\t\t...globalMetadata.options,\n\t\t\t\t\t...metadata.options,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn metadata;\n\t\t},\n\t};\n\n\tcommandDescriptionCollection[name] = description;\n\tcommandControllerCollection[name] = controller;\n\n\treturn controller;\n};\n\nexport const getCommandDescriptionCollection = () => {\n\treturn commandDescriptionCollection;\n};\n\ntype CommandMetadata = {\n\tdescription: string;\n\toptions: Record<string, string>;\n};\n\ntype Instruction = () => Promise<void>;\n\nconst commandControllerCollection: Record<\n\tCommandName,\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tCommandController<any>\n> = {};\n\nconst commandDescriptionCollection: Record<\n\tCommandName,\n\tCommandMetadata[\"description\"]\n> = {};\n", "/* eslint-disable sonarjs/cognitive-complexity */\nimport { format } from \"../../helpers/stdout\";\nimport type { ObjectLikeConstraint, ProgramMetadata } from \"../../types\";\n\nimport type { CommandController } from \"./controller\";\nimport {\n\tcreateCommandController,\n\tgetCommandController,\n\tgetCommandDescriptionCollection,\n} from \"./controller\";\n\nexport type CommandParameters = {\n\tname: string;\n\tdescription: string;\n};\n\nexport const createCommand = <Values extends ObjectLikeConstraint>(\n\t{ name, description }: CommandParameters,\n\t{ argv, name: rootCommandName, version }: ProgramMetadata,\n) => {\n\tconst isRootCommand = name === rootCommandName;\n\tconst isActiveCommand = argv.command === name;\n\tconst controller = createCommandController<Values>(name, description);\n\tconst rootController = getCommandController(rootCommandName);\n\n\tsetTimeout(() => {\n\t\t// @note: By design, the root command instructions are always executed\n\t\t// even with subcommands (to share options, messages...)\n\t\tif (isRootCommand && !isActiveCommand) {\n\t\t\tvoid rootController.enable();\n\t\t}\n\n\t\t// @note: enable the current active command instructions:\n\t\tif (isActiveCommand) {\n\t\t\t// @note: setTimeout 0 allows to run activation logic in the next event loop iteration.\n\t\t\t// It'll allow to make sure that the `metadata` is correctly filled with all commands\n\t\t\t// metadata (especially to let the global help option to display all available commands):\n\t\t\tconst optionKeys = Object.keys(argv.options);\n\n\t\t\tif (\n\t\t\t\toptionKeys.includes(OPTION_HELP_NAMES[0]) ||\n\t\t\t\toptionKeys.includes(OPTION_HELP_NAMES[1])\n\t\t\t) {\n\t\t\t\tshowHelp({\n\t\t\t\t\tcontroller,\n\t\t\t\t\tcurrentCommandName: name,\n\t\t\t\t\tisRootCommand,\n\t\t\t\t\trootCommandName,\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\toptionKeys.includes(OPTION_VERSION_NAMES[0]) ||\n\t\t\t\toptionKeys.includes(OPTION_VERSION_NAMES[1])\n\t\t\t) {\n\t\t\t\tconsole.info(version);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvoid controller.enable();\n\t\t}\n\t}, 0);\n\n\treturn name;\n};\n\nconst OPTION_HELP_NAMES = [\"help\", \"h\"] as const;\nconst OPTION_VERSION_NAMES = [\"version\", \"v\"] as const;\n\nconst showHelp = ({\n\trootCommandName,\n\tcurrentCommandName,\n\tisRootCommand,\n\tcontroller,\n}: {\n\trootCommandName: string;\n\tcurrentCommandName: string;\n\tisRootCommand: boolean;\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tcontroller: CommandController<any>;\n}) => {\n\tconst commandMetadata = controller.getMetadata(rootCommandName);\n\tconst { options, description } = commandMetadata;\n\tconst commands = getCommandDescriptionCollection();\n\tconst optionKeys = Object.keys(commandMetadata.options);\n\tconst commandKeys = Object.keys(commands);\n\tconst hasOptions = optionKeys.length > 0;\n\tconst hasCommands = isRootCommand && commandKeys.length > 1;\n\n\tprintTitle(\"Usage\");\n\tprint(\n\t\t`${format(\n\t\t\t`${rootCommandName}${\n\t\t\t\tisRootCommand ? \"\" : ` ${String(currentCommandName)}`\n\t\t\t}`,\n\t\t\t{\n\t\t\t\tcolor: \"green\",\n\t\t\t},\n\t\t)} ${hasCommands ? \"<command> \" : \"\"}${\n\t\t\thasOptions ? \"[...options]\" : \"\"\n\t\t}`,\n\t);\n\n\tif (description) {\n\t\tprintTitle(\"Description\");\n\t\tprint(description);\n\t}\n\n\tconst padding = [...commandKeys, ...optionKeys].reduce((value, item) => {\n\t\treturn Math.max(value, item.length);\n\t}, 0);\n\n\tif (hasCommands) {\n\t\tprintTitle(\"Commands\");\n\n\t\tfor (const name of commandKeys) {\n\t\t\tif (name === rootCommandName) continue;\n\n\t\t\tconst commandDescription = commands[name];\n\n\t\t\tif (commandDescription)\n\t\t\t\tprintLabelValue(name, commandDescription, padding);\n\t\t}\n\t}\n\n\tif (hasOptions) {\n\t\tprintTitle(\"Options\");\n\n\t\tfor (const key of optionKeys) {\n\t\t\tprintLabelValue(key, options[key] as string, padding);\n\t\t}\n\t}\n};\n\nconst print = (...parameters: Parameters<typeof format>) => {\n\tconsole.log(format(...parameters));\n};\n\nconst printTitle = (message: string) => {\n\tprint(`\\n${message}:`, {\n\t\tcolor: \"yellow\",\n\t\tmodifiers: [\"bold\", \"underline\", \"uppercase\"],\n\t});\n};\n\nconst printLabelValue = (label: string, value: string, padding: number) => {\n\tprint(\n\t\t`  ${format(label.padEnd(padding + 1, \" \"), {\n\t\t\tcolor: \"green\",\n\t\t})} ${value}`,\n\t);\n};\n", "/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { prompt } from \"enquirer\";\n\nimport type {\n\tCreateInstruction,\n\tInstructionKey,\n\tInstructionParameters,\n\tLabel,\n\tObjectLikeConstraint,\n} from \"../../types\";\n\nexport const createInput: CreateInstruction<\n\tInputParameters<ObjectLikeConstraint, keyof ObjectLikeConstraint>\n> = (parameters) => {\n\tconst { key, defaultValue, label, type } = parameters;\n\n\treturn async function execute(context, argv) {\n\t\tconst promptObject: Parameters<typeof prompt>[0] & {\n\t\t\tchoices?: { title: string; value: string; selected?: boolean }[];\n\t\t} = {\n\t\t\tinitial: defaultValue,\n\t\t\tmessage: typeof label === \"function\" ? label(context, argv) : label,\n\t\t\tname: key,\n\t\t\ttype,\n\t\t};\n\n\t\tif (parameters.type === \"select\" || parameters.type === \"multiselect\") {\n\t\t\tconst isMultiSelect = parameters.type === \"multiselect\";\n\t\t\tconst options = parameters.options as string[];\n\n\t\t\tconst choices = options.map((option) => ({\n\t\t\t\ttitle: option,\n\t\t\t\tvalue: option,\n\t\t\t\t...(isMultiSelect && {\n\t\t\t\t\tselected: ((defaultValue || []) as string[]).includes(\n\t\t\t\t\t\toption,\n\t\t\t\t\t),\n\t\t\t\t}),\n\t\t\t}));\n\n\t\t\tpromptObject.choices = choices;\n\t\t}\n\n\t\tconst data = await prompt<ObjectLikeConstraint>(promptObject);\n\n\t\treturn { key, value: data[key] };\n\t};\n};\n\nexport type InputParameters<\n\tValues extends ObjectLikeConstraint,\n\tKey extends keyof Values,\n> = InstructionParameters<\n\tValues,\n\tInstructionKey<Key> &\n\t\t(\n\t\t\t| {\n\t\t\t\t\ttype: \"confirm\";\n\t\t\t\t\tlabel: Label<Values>;\n\t\t\t\t\tdefaultValue?: Values[Key] extends boolean\n\t\t\t\t\t\t? Values[Key]\n\t\t\t\t\t\t: never;\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\ttype: \"multiselect\";\n\t\t\t\t\tlabel: Label<Values>;\n\t\t\t\t\toptions: Values[Key] extends string[] ? Values[Key] : never;\n\t\t\t\t\tdefaultValue?: Values[Key] extends string[]\n\t\t\t\t\t\t? Values[Key]\n\t\t\t\t\t\t: never;\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\ttype: \"select\";\n\t\t\t\t\tlabel: Label<Values>;\n\t\t\t\t\toptions: Values[Key] extends string ? Values[Key][] : never;\n\t\t\t\t\tdefaultValue?: Values[Key] extends string\n\t\t\t\t\t\t? Values[Key]\n\t\t\t\t\t\t: never;\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\ttype: \"text\";\n\t\t\t\t\tlabel: Label<Values>;\n\t\t\t\t\tdefaultValue?: Values[Key] extends string\n\t\t\t\t\t\t? Values[Key]\n\t\t\t\t\t\t: never;\n\t\t\t  }\n\t\t)\n>;\n", "/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport type { CommandController } from \"../command\";\nimport type {\n\tCreateInstruction,\n\tInstructionKey,\n\tInstructionParameters,\n\tObjectLikeConstraint,\n\tProgramMetadata,\n} from \"../../types\";\n\nexport const createOption =\n\t(\n\t\tcommandController: CommandController,\n\t\t{ argv }: ProgramMetadata,\n\t): CreateInstruction<\n\t\tOptionParameters<ObjectLikeConstraint, keyof ObjectLikeConstraint>\n\t> =>\n\t(parameters) => {\n\t\tconst { key, name, description, defaultValue } = parameters;\n\n\t\tconst aliases =\n\t\t\ttypeof name === \"string\" ? [name] : [name.short, name.long];\n\n\t\tconst metadataKey = aliases\n\t\t\t.map(\n\t\t\t\t(alias, index) =>\n\t\t\t\t\t\"-\".repeat(aliases.length > 1 ? index + 1 : 2) + alias,\n\t\t\t)\n\t\t\t.join(\", \");\n\n\t\tcommandController.addOptionDescription(metadataKey, description);\n\n\t\treturn async function execute() {\n\t\t\tlet value: unknown;\n\n\t\t\tfor (const alias of aliases) {\n\t\t\t\tif (alias in argv.options) {\n\t\t\t\t\tvalue = argv.options[alias];\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Promise.resolve({ key, value: value ?? defaultValue });\n\t\t};\n\t};\n\nexport type OptionParameters<\n\tValues extends ObjectLikeConstraint,\n\tKey extends keyof Values,\n> = InstructionParameters<\n\tValues,\n\tInstructionKey<Key> & {\n\t\tname: string | { long: string; short: string };\n\t\tdescription: string;\n\t\tdefaultValue?: Values[Key];\n\t}\n>;\n", "import { Listr, PRESET_TIMER } from \"listr2\";\n\nimport type {\n\tArgumentValues,\n\tContext,\n\tCreateInstruction,\n\tInstructionKey,\n\tInstructionParameters,\n\tLabel,\n\tObjectLikeConstraint,\n} from \"../../types\";\n\nexport const createTask: CreateInstruction<\n\tTaskParameters<ObjectLikeConstraint, keyof ObjectLikeConstraint>\n> = (parameters) => {\n\tconst { key, label, handler } = parameters;\n\n\tconst receiver = label\n\t\t? new Listr([], {\n\t\t\t\trendererOptions: {\n\t\t\t\t\tcollapseErrors: false,\n\t\t\t\t\tformatOutput: \"wrap\",\n\t\t\t\t\tshowErrorMessage: true,\n\t\t\t\t\ttimer: PRESET_TIMER,\n\t\t\t\t},\n\t\t  })\n\t\t: null;\n\n\treturn async function execute(context, argv) {\n\t\tlet value: unknown;\n\n\t\tif (!receiver) {\n\t\t\tvalue = await handler(context, argv);\n\t\t} else {\n\t\t\treceiver.add({\n\t\t\t\t...(label && {\n\t\t\t\t\ttitle:\n\t\t\t\t\t\ttypeof label === \"function\"\n\t\t\t\t\t\t\t? label(context, argv)\n\t\t\t\t\t\t\t: label,\n\t\t\t\t}),\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\t\t\t\ttask: async () => (value = await handler(context, argv)),\n\t\t\t});\n\n\t\t\tawait receiver.run();\n\t\t}\n\n\t\treturn { key, value };\n\t};\n};\n\nexport type TaskParameters<\n\tValues extends ObjectLikeConstraint,\n\tKey extends keyof Values | undefined = undefined,\n> = InstructionParameters<\n\tValues,\n\tPartial<InstructionKey<Key>> & {\n\t\tlabel?: Label<Values>;\n\t\thandler: (\n\t\t\tcontext: Context<Values>,\n\t\t\targv: ArgumentValues,\n\t\t) => Key extends keyof Values\n\t\t\t? Promise<Values[Key]> | Values[Key]\n\t\t\t: Promise<void> | void;\n\t}\n>;\n", "import { getPackageMetadata } from \"./helpers/package\";\nimport { getArguments } from \"./helpers/stdin\";\nimport type {\n\tCommandName,\n\tCreateInstruction,\n\tEmptyObject,\n\tInstructionParameters,\n\tObjectLikeConstraint,\n\tPackageMetadata,\n\tProgramMetadata,\n} from \"./types\";\nimport type { CommandParameters } from \"./api/command\";\nimport { createCommand, getCommandController } from \"./api/command\";\nimport type { InputParameters } from \"./api/input\";\nimport { createInput } from \"./api/input\";\nimport type { OptionParameters } from \"./api/option\";\nimport { createOption } from \"./api/option\";\nimport type { TaskParameters } from \"./api/task\";\nimport { createTask } from \"./api/task\";\n\n/**\n * The termost fluent interface API\n */\nexport type Termost<Values extends ObjectLikeConstraint = EmptyObject> = {\n\t/**\n\t * Allows to attach a new sub-command to the program\n\t * @param name - The CLI command name\n\t * @param description - The CLI command description\n\t * @returns The Command API\n\t */\n\tcommand: <CommandValues extends ObjectLikeConstraint = EmptyObject>(\n\t\tparams: CommandParameters,\n\t) => Termost<CommandValues & Values>;\n\tinput: <Key extends keyof Values>(\n\t\tparams: InputParameters<Values, Key>,\n\t) => Termost<Values>;\n\toption: <Key extends keyof Values>(\n\t\tparams: OptionParameters<Values, Key>,\n\t) => Termost<Values>;\n\ttask: <Key extends keyof Values | undefined = undefined>(\n\t\tparams: TaskParameters<Values, Key>,\n\t) => Termost<Values>;\n};\n\nexport function termost<Values extends ObjectLikeConstraint = EmptyObject>(\n\tmetadata: Partial<PackageMetadata> | string,\n\tcallbacks: TerminationCallbacks = {},\n) {\n\tconst paramsMetadata: Partial<PackageMetadata> = isObject(metadata)\n\t\t? metadata\n\t\t: { description: metadata };\n\n\tconst packageMetadata = getPackageMetadata();\n\tconst programName = paramsMetadata.name ?? packageMetadata.name;\n\tconst { command = programName, options, operands } = getArguments();\n\n\tsetGracefulListeners(callbacks);\n\n\treturn createProgram<Values>({\n\t\targv: { command, options, operands },\n\t\tdescription: paramsMetadata.description ?? packageMetadata.description,\n\t\tname: programName,\n\t\tversion: paramsMetadata.version ?? packageMetadata.version,\n\t});\n}\n\nexport const createProgram = <Values extends ObjectLikeConstraint>(\n\tmetadata: ProgramMetadata,\n): Termost<Values> => {\n\tconst { argv, name, description } = metadata;\n\tconst rootCommandName: CommandName = name;\n\tlet currentCommandName: CommandName = rootCommandName;\n\n\tconst createInstruction = <\n\t\tParameters extends InstructionParameters<ObjectLikeConstraint>,\n\t>(\n\t\tfactory: CreateInstruction<Parameters>,\n\t\tparams: InstructionParameters<Values>,\n\t) => {\n\t\tconst instruction = factory(params as Parameters);\n\t\tconst controller = getCommandController<Values>(currentCommandName);\n\n\t\tcontroller.addInstruction(async () => {\n\t\t\tconst { skip } = params;\n\t\t\tconst context = controller.getContext(rootCommandName);\n\n\t\t\tif (skip?.(context, argv)) return;\n\n\t\t\tconst output = await instruction(context, argv);\n\n\t\t\tif (!output || !output.key) return;\n\n\t\t\tcontroller.addValue(\n\t\t\t\toutput.key,\n\t\t\t\toutput.value as Values[keyof Values],\n\t\t\t);\n\t\t});\n\t};\n\n\tconst program: Termost<Values> = {\n\t\tcommand<CommandValues>(params: CommandParameters) {\n\t\t\tcurrentCommandName = createCommand(params, metadata);\n\n\t\t\treturn this as Termost<CommandValues & Values>;\n\t\t},\n\t\tinput(params) {\n\t\t\tcreateInstruction(createInput, params);\n\n\t\t\treturn this;\n\t\t},\n\t\toption(params) {\n\t\t\tcreateInstruction(\n\t\t\t\tcreateOption(\n\t\t\t\t\tgetCommandController(currentCommandName),\n\t\t\t\t\tmetadata,\n\t\t\t\t),\n\t\t\t\tparams,\n\t\t\t);\n\n\t\t\treturn this;\n\t\t},\n\t\ttask(params) {\n\t\t\tcreateInstruction(createTask, params);\n\n\t\t\treturn this;\n\t\t},\n\t};\n\n\t// @note: the root command is created by default\n\tprogram.command({\n\t\tname,\n\t\tdescription,\n\t});\n\n\treturn program;\n};\n\ntype TerminationCallbacks = Partial<{\n\tonShutdown: () => void;\n\tonException: (error: Error) => void;\n}>;\n\nconst setGracefulListeners = ({\n\tonShutdown = () => {\n\t\treturn;\n\t},\n\tonException = () => {\n\t\treturn;\n\t},\n}: TerminationCallbacks) => {\n\tprocess.on(\"SIGTERM\", () => {\n\t\tonShutdown();\n\t\tprocess.exit(0);\n\t});\n\n\tprocess.on(\"SIGINT\", () => {\n\t\tonShutdown();\n\t\tprocess.exit(0);\n\t});\n\n\tprocess.on(\"uncaughtException\", (error) => {\n\t\tonException(error);\n\t\tprocess.exit(1);\n\t});\n\n\tprocess.on(\"unhandledRejection\", (reason) => {\n\t\tif (reason instanceof Error) {\n\t\t\tonException(reason);\n\t\t}\n\n\t\tprocess.exit(1);\n\t});\n};\n\nconst isObject = (value: unknown): value is ObjectLikeConstraint => {\n\treturn value !== null && typeof value === \"object\";\n};\n"],
-  "mappings": "0jBAAA,IAAAA,GAAA,GAAAC,EAAAD,GAAA,aAAAE,GAAA,YAAAC,IAAA,eAAAC,EAAAJ,ICAA,IAAAK,EAAsB,yBAETC,EAAO,MACnBC,EACAC,EAAuB,CAAE,cAAe,EAAM,IAEvC,IAAI,QAAgB,CAACC,EAASC,IAAW,CAC/C,IAAIC,EAAS,GACTC,EAAS,GACP,CAACC,EAAK,GAAGC,CAAI,EAAIP,EAAQ,MAAM,GAAG,EAElCQ,KAAe,SAAMF,EAAKC,EAAM,CACrC,IAAKN,EAAQ,IACb,MAAO,GACP,MAAOA,EAAQ,cAAgB,UAAY,OAC3C,IAAK,CACJ,GAAG,QAAQ,IAEX,YAAa,GACd,CACD,CAAC,EAEDO,EAAa,QAAQ,GAAG,OAASC,GAAU,CAC1CL,GAAUK,CACX,CAAC,EAEDD,EAAa,QAAQ,GAAG,OAASC,GAAU,CAC1CJ,GAAUI,CACX,CAAC,EAEDD,EAAa,GAAG,QAAUE,GAAa,CACtC,GAAIA,IAAa,EAAG,CACnB,IAAMC,EAAS,GAAGN,IAASD,IAE3BD,EAAOQ,EAAO,KAAK,CAAC,OAEpBT,EAAQE,EAAO,KAAK,CAAC,CAEvB,CAAC,CACF,CAAC,ECvCF,IAAAQ,EAAiB,yBAQJC,EAAS,CACrBC,EACA,CACC,MAAAC,EACA,UAAAC,CACD,EAGI,CACH,MAAO,QACP,UAAW,CAAC,CACb,IACI,CACJ,IAAMC,EAA8C,CAAC,EAErD,OAAAA,EAAa,KAAK,EAAAC,QAAKC,GAAYJ,GAAS,OAAO,CAAC,CAAC,GAEpDC,GAAa,CAAC,GAAG,QAASI,GAAkB,CACxCA,IAAQ,YACXN,EAAUA,EAAQ,YAAY,EACpBM,IAAQ,YAClBN,EAAUA,EAAQ,YAAY,EAE9BG,EAAa,KAAK,EAAAC,QAAKG,GAAeD,CAAG,CAAC,CAAC,CAE7C,CAAC,EAEME,GAAQ,GAAGL,CAAY,EAAEH,CAAO,CACxC,EAEMQ,GAAU,IAAOC,IACtBA,EAAI,OACH,CAACC,EAAQC,IAAYC,GAAUF,EAAOC,EAAOC,CAAK,CAAC,EACnDH,EAAI,CAAC,CACN,EAOYT,EAAU,CACtBa,EACA,CACC,MAAAC,EACA,KAAAC,EAAO,aACR,EAA4C,CAAC,IACzC,CACJ,GAAM,CAAE,MAAAd,EAAO,aAAAe,EAAc,KAAAC,EAAM,OAAAC,CAAO,EAAIC,GAAuBJ,CAAI,EACnEK,EAAW,OAAOP,GAAY,SAAW,CAACA,CAAO,EAAIA,EAE3DK,EACCnB,EAAO;AAAA,EAAKkB,KAAQH,GAASE,IAAgB,CAC5C,MAAAf,EACA,UAAW,CAAC,MAAM,CACnB,CAAC,CACF,EAEA,QAAWoB,KAAOD,EACjBF,EAAOnB,EAAO,MAAMsB,IAAO,CAAE,MAAApB,CAAM,CAAC,CAAC,CAEvC,EAEMkB,GAAyB,CAC9B,MAAO,CACN,MAAO,MACP,aAAc,QACd,KAAM,SACN,OAAQ,QAAQ,KACjB,EACA,YAAa,CACZ,MAAO,OACP,aAAc,cACd,KAAM,gBACN,OAAQ,QAAQ,IACjB,EACA,QAAS,CACR,MAAO,QACP,aAAc,UACd,KAAM,SACN,OAAQ,QAAQ,GACjB,EACA,QAAS,CACR,MAAO,SACP,aAAc,UACd,KAAM,gBACN,OAAQ,QAAQ,IACjB,CACD,EAEMd,GAAc,CACnB,MAAO,QACP,KAAM,OACN,KAAM,OACN,MAAO,QACP,KAAM,OACN,QAAS,UACT,IAAK,MACL,MAAO,QACP,OAAQ,QACT,EAEME,GAAiB,CACtB,KAAM,OACN,OAAQ,SACR,cAAe,gBACf,UAAW,WACZ,ECnHA,IAAAe,EAAe,iBACfC,EAAiB,mBAIJC,EAA0BC,GAAsC,CAC5E,IAAMC,EAAkB,EAAAC,QAAK,QAAQF,EAAU,cAAc,EAE7D,OAAIG,GAAaF,CAAe,EAExB,QAAQA,CAAe,EAGxBF,EAAuB,EAAAG,QAAK,QAAQF,EAAU,IAAI,CAAC,CAC3D,EAEMG,GAAgBH,GAAqB,CAC1C,GAAI,CACH,SAAAI,QAAG,WAAWJ,EAAU,EAAAI,QAAG,UAAU,IAAI,EAElC,EACR,MAAE,CACD,MAAO,EACR,CACD,EAEaC,EAAqB,IAAM,CACvC,IAAMC,EAAe,QAAQ,MAAM,SAEnC,GAAI,CAACA,EACJ,MAAM,IAAI,MACT,8JACD,EAGD,OAAOP,EAAuB,EAAAG,QAAK,QAAQI,CAAY,CAAC,CACzD,ECnCO,IAAMC,EAAe,IAAM,CACjC,IAAMC,EAAa,QAAQ,KAAK,MAAM,CAAC,EACnCC,EACEC,EAAqB,CAAC,EACtBC,EAAqD,CAAC,EACxDC,EAEEC,EAAsB,CAACC,EAAcC,IAA6B,CACnEA,EACHJ,EAAQG,CAAI,EAAI,OAAOC,GAAU,SAAWC,EAAUD,CAAK,EAAI,GAE/DH,EAAoBE,CAEtB,EAEMG,EAAwB,IAAM,CAC/BL,IACHD,EAAQC,CAAiB,EAAI,GAC7BA,EAAoB,OAEtB,EAEA,QAAWM,KAAaV,EAAY,CACnC,IAAMW,EAAuBC,GAAiB,KAAKF,CAAS,GAAG,OACzDG,EAAsBC,GAAgB,KAAKJ,CAAS,GAAG,OAE7D,GAAIC,GAAsB,KAAM,CAC/BF,EAAsB,EAEtB,IAAMM,EAAcJ,EAAqB,KAAK,MAAM,EAAE,EAChDK,EAAYD,EAAY,OAAS,EAEvCA,EAAY,QAAQ,CAACE,EAAMC,IAAU,CACpCb,EACCY,EACAD,IAAcE,EAAQ,OAAY,EACnC,CACD,CAAC,OACSL,GAAqB,MAC/BJ,EAAsB,EACtBJ,EACCQ,EAAoB,KACpBA,EAAoB,KACrB,GACUT,GACVD,EAAQC,CAAiB,EAAII,EAAUE,CAAS,EAChDN,EAAoB,QACTH,EAGXC,EAAS,KAAKQ,CAAS,EAFvBT,EAAUS,EAMZ,OAAAD,EAAsB,EAEf,CAAE,QAAAR,EAAS,SAAAC,EAAU,QAAAC,CAAQ,CACrC,EAEMS,GAAmB,sBACnBE,GAAkB,qCAElBN,EAAaD,GAAkB,CACpC,GAAI,CACH,OAAO,KAAK,MAAMA,CAAK,CACxB,MAAE,CACD,OAAOA,CACR,CACD,ECrEO,IAAMY,EAAc,IAAY,CACtC,IAAMC,EAAgB,CAAC,EAEvB,MAAO,CACN,QAAQC,EAAY,CACnBD,EAAM,KAAKC,CAAI,CAChB,EACA,SAAU,CACT,OAAOD,EAAM,MAAM,CACpB,EACA,SAAU,CACT,OAAOA,EAAM,SAAW,CACzB,CACD,CACD,ECSO,IAAME,EACZC,GACI,CACJ,IAAMC,EAAaC,EAA4BF,CAAI,EAEnD,GAAI,CAACC,EACJ,MAAM,IAAI,MACT,wCAAwCD;AAAA,0CACzC,EAGD,OAAOC,CACR,EAEaE,EAA0B,CACtCH,EACAI,IACI,CACJ,IAAMC,EAAeC,EAAyB,EAE1CC,EAAU,CAAC,EAETC,EAA4B,CACjC,YAAAJ,EACA,QAAS,CACR,aAAc,0BACd,gBAAiB,mBAClB,CACD,EAEMH,EAAwC,CAC7C,qBAAqBQ,EAAKC,EAAO,CAChCF,EAAS,QAAQC,CAAG,EAAIC,CACzB,EACA,SAASD,EAAKC,EAAO,CACpBH,EAAQE,CAAG,EAAIC,CAChB,EACA,eAAeC,EAAa,CAC3BN,EAAa,QAAQM,CAAW,CACjC,EACA,MAAM,QAAS,CACd,KAAO,CAACN,EAAa,QAAQ,GAAG,CAC/B,IAAMO,EAAOP,EAAa,QAAQ,EAE9BO,GACH,MAAMA,EAAK,EAGd,EACA,WAAWC,EAAiB,CAG3B,OAAIb,IAASa,IAMZN,EAAU,CACT,GANsBR,EAAqBc,CAAe,EAG3C,WAAWA,CAAe,EAIzC,GAAGN,CACJ,GAGMA,CACR,EACA,YAAYM,EAAiB,CAC5B,GAAIb,IAASa,EAAiB,CAC7B,IAAMC,EACLf,EAAqBc,CAAe,EAAE,YACrCA,CACD,EAEDL,EAAS,QAAU,CAClB,GAAGM,EAAe,QAClB,GAAGN,EAAS,OACb,EAGD,OAAOA,CACR,CACD,EAEA,OAAAO,EAA6Bf,CAAI,EAAII,EACrCF,EAA4BF,CAAI,EAAIC,EAE7BA,CACR,EAEae,EAAkC,IACvCD,EAUFb,EAIF,CAAC,EAECa,EAGF,CAAC,ECpHE,IAAME,EAAgB,CAC5B,CAAE,KAAAC,EAAM,YAAAC,CAAY,EACpB,CAAE,KAAAC,EAAM,KAAMC,EAAiB,QAAAC,CAAQ,IACnC,CACJ,IAAMC,EAAgBL,IAASG,EACzBG,EAAkBJ,EAAK,UAAYF,EACnCO,EAAaC,EAAgCR,EAAMC,CAAW,EAC9DQ,EAAiBC,EAAqBP,CAAe,EAE3D,kBAAW,IAAM,CAQhB,GALIE,GAAiB,CAACC,GAChBG,EAAe,OAAO,EAIxBH,EAAiB,CAIpB,IAAMK,EAAa,OAAO,KAAKT,EAAK,OAAO,EAE3C,GACCS,EAAW,SAASC,EAAkB,CAAC,CAAC,GACxCD,EAAW,SAASC,EAAkB,CAAC,CAAC,EACvC,CACDC,GAAS,CACR,WAAAN,EACA,mBAAoBP,EACpB,cAAAK,EACA,gBAAAF,CACD,CAAC,EAED,OAGD,GACCQ,EAAW,SAASG,EAAqB,CAAC,CAAC,GAC3CH,EAAW,SAASG,EAAqB,CAAC,CAAC,EAC1C,CACD,QAAQ,KAAKV,CAAO,EAEpB,OAGIG,EAAW,OAAO,EAEzB,EAAG,CAAC,EAEGP,CACR,EAEMY,EAAoB,CAAC,OAAQ,GAAG,EAChCE,EAAuB,CAAC,UAAW,GAAG,EAEtCD,GAAW,CAAC,CACjB,gBAAAV,EACA,mBAAAY,EACA,cAAAV,EACA,WAAAE,CACD,IAMM,CACL,IAAMS,EAAkBT,EAAW,YAAYJ,CAAe,EACxD,CAAE,QAAAc,EAAS,YAAAhB,CAAY,EAAIe,EAC3BE,EAAWC,EAAgC,EAC3CR,EAAa,OAAO,KAAKK,EAAgB,OAAO,EAChDI,EAAc,OAAO,KAAKF,CAAQ,EAClCG,EAAaV,EAAW,OAAS,EACjCW,EAAcjB,GAAiBe,EAAY,OAAS,EAE1DG,EAAW,OAAO,EAClBC,EACC,GAAGC,EACF,GAAGtB,IACFE,EAAgB,GAAK,IAAI,OAAOU,CAAkB,MAEnD,CACC,MAAO,OACR,CACD,KAAKO,EAAc,aAAe,KACjCD,EAAa,eAAiB,IAEhC,EAEIpB,IACHsB,EAAW,aAAa,EACxBC,EAAMvB,CAAW,GAGlB,IAAMyB,EAAU,CAAC,GAAGN,EAAa,GAAGT,CAAU,EAAE,OAAO,CAACgB,EAAOC,IACvD,KAAK,IAAID,EAAOC,EAAK,MAAM,EAChC,CAAC,EAEJ,GAAIN,EAAa,CAChBC,EAAW,UAAU,EAErB,QAAWvB,KAAQoB,EAAa,CAC/B,GAAIpB,IAASG,EAAiB,SAE9B,IAAM0B,EAAqBX,EAASlB,CAAI,EAEpC6B,GACHC,EAAgB9B,EAAM6B,EAAoBH,CAAO,GAIpD,GAAIL,EAAY,CACfE,EAAW,SAAS,EAEpB,QAAWQ,KAAOpB,EACjBmB,EAAgBC,EAAKd,EAAQc,CAAG,EAAaL,CAAO,EAGvD,EAEMF,EAAQ,IAAIQ,IAA0C,CAC3D,QAAQ,IAAIP,EAAO,GAAGO,CAAU,CAAC,CAClC,EAEMT,EAAcU,GAAoB,CACvCT,EAAM;AAAA,EAAKS,KAAY,CACtB,MAAO,SACP,UAAW,CAAC,OAAQ,YAAa,WAAW,CAC7C,CAAC,CACF,EAEMH,EAAkB,CAACI,EAAeP,EAAeD,IAAoB,CAC1EF,EACC,KAAKC,EAAOS,EAAM,OAAOR,EAAU,EAAG,GAAG,EAAG,CAC3C,MAAO,OACR,CAAC,KAAKC,GACP,CACD,ECzJA,IAAAQ,EAAuB,oBAUVC,EAERC,GAAe,CACnB,GAAM,CAAE,IAAAC,EAAK,aAAAC,EAAc,MAAAC,EAAO,KAAAC,CAAK,EAAIJ,EAE3C,OAAO,eAAuBK,EAASC,EAAM,CAC5C,IAAMC,EAEF,CACH,QAASL,EACT,QAAS,OAAOC,GAAU,WAAaA,EAAME,EAASC,CAAI,EAAIH,EAC9D,KAAMF,EACN,KAAAG,CACD,EAEA,GAAIJ,EAAW,OAAS,UAAYA,EAAW,OAAS,cAAe,CACtE,IAAMQ,EAAgBR,EAAW,OAAS,cAGpCS,EAFUT,EAAW,QAEH,IAAKU,IAAY,CACxC,MAAOA,EACP,MAAOA,EACP,GAAIF,GAAiB,CACpB,UAAYN,GAAgB,CAAC,GAAgB,SAC5CQ,CACD,CACD,CACD,EAAE,EAEFH,EAAa,QAAUE,EAGxB,IAAME,EAAO,QAAM,UAA6BJ,CAAY,EAE5D,MAAO,CAAE,IAAAN,EAAK,MAAOU,EAAKV,CAAG,CAAE,CAChC,CACD,ECrCO,IAAMW,EACZ,CACCC,EACA,CAAE,KAAAC,CAAK,IAIPC,GAAe,CACf,GAAM,CAAE,IAAAC,EAAK,KAAAC,EAAM,YAAAC,EAAa,aAAAC,CAAa,EAAIJ,EAE3CK,EACL,OAAOH,GAAS,SAAW,CAACA,CAAI,EAAI,CAACA,EAAK,MAAOA,EAAK,IAAI,EAErDI,EAAcD,EAClB,IACA,CAACE,EAAOC,IACP,IAAI,OAAOH,EAAQ,OAAS,EAAIG,EAAQ,EAAI,CAAC,EAAID,CACnD,EACC,KAAK,IAAI,EAEX,OAAAT,EAAkB,qBAAqBQ,EAAaH,CAAW,EAExD,gBAAyB,CAC/B,IAAIM,EAEJ,QAAWF,KAASF,EACnB,GAAIE,KAASR,EAAK,QAAS,CAC1BU,EAAQV,EAAK,QAAQQ,CAAK,EAE1B,MAIF,OAAO,QAAQ,QAAQ,CAAE,IAAAN,EAAK,MAAOQ,GAASL,CAAa,CAAC,CAC7D,CACD,EC7CD,IAAAM,EAAoC,kBAYvBC,EAERC,GAAe,CACnB,GAAM,CAAE,IAAAC,EAAK,MAAAC,EAAO,QAAAC,CAAQ,EAAIH,EAE1BI,EAAWF,EACd,IAAI,QAAM,CAAC,EAAG,CACd,gBAAiB,CAChB,eAAgB,GAChB,aAAc,OACd,iBAAkB,GAClB,MAAO,cACR,CACA,CAAC,EACD,KAEH,OAAO,eAAuBG,EAASC,EAAM,CAC5C,IAAIC,EAEJ,OAAKH,GAGJA,EAAS,IAAI,CACZ,GAAIF,GAAS,CACZ,MACC,OAAOA,GAAU,WACdA,EAAMG,EAASC,CAAI,EACnBJ,CACL,EAEA,KAAM,SAAaK,EAAQ,MAAMJ,EAAQE,EAASC,CAAI,CACvD,CAAC,EAED,MAAMF,EAAS,IAAI,GAbnBG,EAAQ,MAAMJ,EAAQE,EAASC,CAAI,EAgB7B,CAAE,IAAAL,EAAK,MAAAM,CAAM,CACrB,CACD,ECNO,SAASC,EACfC,EACAC,EAAkC,CAAC,EAClC,CACD,IAAMC,EAA2CC,GAASH,CAAQ,EAC/DA,EACA,CAAE,YAAaA,CAAS,EAErBI,EAAkBC,EAAmB,EACrCC,EAAcJ,EAAe,MAAQE,EAAgB,KACrD,CAAE,QAAAG,EAAUD,EAAa,QAAAE,EAAS,SAAAC,CAAS,EAAIC,EAAa,EAElE,OAAAC,GAAqBV,CAAS,EAEvBW,GAAsB,CAC5B,KAAM,CAAE,QAAAL,EAAS,QAAAC,EAAS,SAAAC,CAAS,EACnC,YAAaP,EAAe,aAAeE,EAAgB,YAC3D,KAAME,EACN,QAASJ,EAAe,SAAWE,EAAgB,OACpD,CAAC,CACF,CAEO,IAAMQ,GACZZ,GACqB,CACrB,GAAM,CAAE,KAAAa,EAAM,KAAAC,EAAM,YAAAC,CAAY,EAAIf,EAC9BgB,EAA+BF,EACjCG,EAAkCD,EAEhCE,EAAoB,CAGzBC,EACAC,IACI,CACJ,IAAMC,EAAcF,EAAQC,CAAoB,EAC1CE,EAAaC,EAA6BN,CAAkB,EAElEK,EAAW,eAAe,SAAY,CACrC,GAAM,CAAE,KAAAE,CAAK,EAAIJ,EACXK,EAAUH,EAAW,WAAWN,CAAe,EAErD,GAAIQ,IAAOC,EAASZ,CAAI,EAAG,OAE3B,IAAMa,EAAS,MAAML,EAAYI,EAASZ,CAAI,EAE1C,CAACa,GAAU,CAACA,EAAO,KAEvBJ,EAAW,SACVI,EAAO,IACPA,EAAO,KACR,CACD,CAAC,CACF,EAEMC,EAA2B,CAChC,QAAuBP,EAA2B,CACjD,OAAAH,EAAqBW,EAAcR,EAAQpB,CAAQ,EAE5C,IACR,EACA,MAAMoB,EAAQ,CACb,OAAAF,EAAkBW,EAAaT,CAAM,EAE9B,IACR,EACA,OAAOA,EAAQ,CACd,OAAAF,EACCY,EACCP,EAAqBN,CAAkB,EACvCjB,CACD,EACAoB,CACD,EAEO,IACR,EACA,KAAKA,EAAQ,CACZ,OAAAF,EAAkBa,EAAYX,CAAM,EAE7B,IACR,CACD,EAGA,OAAAO,EAAQ,QAAQ,CACf,KAAAb,EACA,YAAAC,CACD,CAAC,EAEMY,CACR,EAOMhB,GAAuB,CAAC,CAC7B,WAAAqB,EAAa,IAAM,CAEnB,EACA,YAAAC,EAAc,IAAM,CAEpB,CACD,IAA4B,CAC3B,QAAQ,GAAG,UAAW,IAAM,CAC3BD,EAAW,EACX,QAAQ,KAAK,CAAC,CACf,CAAC,EAED,QAAQ,GAAG,SAAU,IAAM,CAC1BA,EAAW,EACX,QAAQ,KAAK,CAAC,CACf,CAAC,EAED,QAAQ,GAAG,oBAAsBE,GAAU,CAC1CD,EAAYC,CAAK,EACjB,QAAQ,KAAK,CAAC,CACf,CAAC,EAED,QAAQ,GAAG,qBAAuBC,GAAW,CACxCA,aAAkB,OACrBF,EAAYE,CAAM,EAGnB,QAAQ,KAAK,CAAC,CACf,CAAC,CACF,EAEMhC,GAAYiC,GACVA,IAAU,MAAQ,OAAOA,GAAU,SX1KpC,IAAMC,GAAU,CACtB,KAAAC,EACA,OAAAC,EACA,QAAAC,CACD",
-  "names": ["src_exports", "__export", "helpers", "termost", "__toCommonJS", "import_child_process", "exec", "command", "options", "resolve", "reject", "stdout", "stderr", "bin", "args", "childProcess", "chunk", "exitCode", "output", "import_picocolors", "format", "message", "color", "modifiers", "transformers", "pico", "colorMapper", "mod", "modifierMapper", "compose", "fns", "prevFn", "nextFn", "value", "content", "label", "type", "defaultLabel", "icon", "method", "formatPropertiesByType", "messages", "msg", "import_fs", "import_path", "findNearestPackageJson", "pathname", "packagePathname", "path", "isFileExists", "fs", "getPackageMetadata", "mainFilename", "getArguments", "parameters", "command", "operands", "options", "currentOptionName", "addOptimisticOption", "name", "value", "castValue", "flushOptimisticOption", "parameter", "shortFlagMatchResult", "SHORT_FLAG_REGEX", "longFlagMatchResult", "LONG_FLAG_REGEX", "optionFlags", "lastIndex", "flag", "index", "createQueue", "items", "item", "getCommandController", "name", "controller", "commandControllerCollection", "createCommandController", "description", "instructions", "createQueue", "context", "metadata", "key", "value", "instruction", "task", "rootCommandName", "globalMetadata", "commandDescriptionCollection", "getCommandDescriptionCollection", "createCommand", "name", "description", "argv", "rootCommandName", "version", "isRootCommand", "isActiveCommand", "controller", "createCommandController", "rootController", "getCommandController", "optionKeys", "OPTION_HELP_NAMES", "showHelp", "OPTION_VERSION_NAMES", "currentCommandName", "commandMetadata", "options", "commands", "getCommandDescriptionCollection", "commandKeys", "hasOptions", "hasCommands", "printTitle", "print", "format", "padding", "value", "item", "commandDescription", "printLabelValue", "key", "parameters", "message", "label", "import_enquirer", "createInput", "parameters", "key", "defaultValue", "label", "type", "context", "argv", "promptObject", "isMultiSelect", "choices", "option", "data", "createOption", "commandController", "argv", "parameters", "key", "name", "description", "defaultValue", "aliases", "metadataKey", "alias", "index", "value", "import_listr2", "createTask", "parameters", "key", "label", "handler", "receiver", "context", "argv", "value", "termost", "metadata", "callbacks", "paramsMetadata", "isObject", "packageMetadata", "getPackageMetadata", "programName", "command", "options", "operands", "getArguments", "setGracefulListeners", "createProgram", "argv", "name", "description", "rootCommandName", "currentCommandName", "createInstruction", "factory", "params", "instruction", "controller", "getCommandController", "skip", "context", "output", "program", "createCommand", "createInput", "createOption", "createTask", "onShutdown", "onException", "error", "reason", "value", "helpers", "exec", "format", "message"]
+  "sources": ["../src/index.ts", "../src/helpers/process/index.ts", "../src/helpers/stdout/index.ts", "../src/api/command/controller/queue.ts", "../src/api/command/controller/index.ts", "../src/api/command/command.ts", "../src/api/input/index.ts", "../src/api/option/index.ts", "../src/api/task/index.ts", "../src/helpers/package/index.ts", "../src/helpers/stdin/index.ts", "../src/termost.ts"],
+  "sourcesContent": ["import { exec } from \"./helpers/process\";\nimport { format, message } from \"./helpers/stdout\";\n\nexport { termost } from \"./termost\";\nexport type { Termost } from \"./termost\";\nexport const helpers = {\n\texec,\n\tformat,\n\tmessage,\n};\n", "import { spawn } from \"child_process\";\n\nexport const exec = async (\n\tcommand: string,\n\toptions: ExecOptions = { hasLiveOutput: false },\n) => {\n\treturn new Promise<string>((resolve, reject) => {\n\t\tlet stdout = \"\";\n\t\tlet stderr = \"\";\n\t\tconst [bin, ...args] = command.split(\" \") as [string, ...string[]];\n\n\t\tconst childProcess = spawn(bin, args, {\n\t\t\tcwd: options.cwd,\n\t\t\tenv: {\n\t\t\t\t...process.env,\n\t\t\t\t// @note: make sure to force color display for spawned processes\n\t\t\t\tFORCE_COLOR: \"1\",\n\t\t\t},\n\t\t\tshell: true,\n\t\t\tstdio: options.hasLiveOutput ? \"inherit\" : \"pipe\",\n\t\t});\n\n\t\tchildProcess.stdout?.on(\"data\", (chunk) => {\n\t\t\tstdout += chunk;\n\t\t});\n\n\t\tchildProcess.stderr?.on(\"data\", (chunk) => {\n\t\t\tstderr += chunk;\n\t\t});\n\n\t\tchildProcess.on(\"close\", (exitCode) => {\n\t\t\tif (exitCode !== 0) {\n\t\t\t\tconst output = `${stderr}${stdout}`;\n\n\t\t\t\treject(output.trim());\n\t\t\t} else {\n\t\t\t\tresolve(stdout.trim());\n\t\t\t}\n\t\t});\n\t});\n};\n\ntype ExecOptions = {\n\tcwd?: string;\n\thasLiveOutput?: boolean;\n};\n", "import pico from \"picocolors\";\n\n/**\n * A helper to format an arbitrary text as a message input\n * @param message The text to display\n * @param options The configuration object to control the formatting properties\n * @returns The formatted text\n */\nexport const format = (\n\tmessage: string,\n\t{\n\t\tcolor,\n\t\tmodifiers,\n\t}: {\n\t\tcolor?: Color;\n\t\tmodifiers?: Modifier[];\n\t} = {\n\t\tcolor: \"white\",\n\t\tmodifiers: [],\n\t},\n) => {\n\tconst transformers: ((input: string) => string)[] = [];\n\n\ttransformers.push(pico[colorMapper[color ?? \"white\"]]);\n\n\t(modifiers ?? []).forEach((mod: Modifier) => {\n\t\tif (mod === \"uppercase\") {\n\t\t\tmessage = message.toUpperCase();\n\t\t} else if (mod === \"lowercase\") {\n\t\t\tmessage = message.toLowerCase();\n\t\t} else {\n\t\t\ttransformers.push(pico[modifierMapper[mod]]);\n\t\t}\n\t});\n\n\treturn compose(...transformers)(message);\n};\n\nconst compose = <T>(...fns: ((a: T) => T)[]) =>\n\tfns.reduce(\n\t\t(prevFn, nextFn) => (value) => prevFn(nextFn(value)),\n\t\tfns[0] as (a: T) => T,\n\t);\n\n/**\n * An opinionated helper to display arbitrary text on the console\n * @param message The text to display. Use an array if you need to display a message in several lines\n * @param options The configuration object to define the display type and/or override the default label\n */\nexport const message = (\n\tcontent: string[] | string,\n\t{\n\t\tlabel,\n\t\ttype = \"information\",\n\t}: { label?: string; type?: MessageType } = {},\n) => {\n\tconst { color, defaultLabel, icon, method } = formatPropertiesByType[type];\n\tconst messages = typeof content === \"string\" ? [content] : content;\n\n\tmethod(\n\t\tformat(`\\n${icon} ${label ?? defaultLabel}`, {\n\t\t\tcolor,\n\t\t\tmodifiers: [\"bold\"],\n\t\t}),\n\t);\n\n\tfor (const msg of messages) {\n\t\tmethod(format(`   ${msg}`, { color }));\n\t}\n};\n\nconst formatPropertiesByType = {\n\terror: {\n\t\tcolor: \"red\",\n\t\tdefaultLabel: \"Error\",\n\t\ticon: \"\u274C\",\n\t\tmethod: console.error,\n\t},\n\tinformation: {\n\t\tcolor: \"blue\",\n\t\tdefaultLabel: \"Information\",\n\t\ticon: \"\u2139\uFE0F \",\n\t\tmethod: console.info,\n\t},\n\tsuccess: {\n\t\tcolor: \"green\",\n\t\tdefaultLabel: \"Success\",\n\t\ticon: \"\u2705\",\n\t\tmethod: console.log,\n\t},\n\twarning: {\n\t\tcolor: \"yellow\",\n\t\tdefaultLabel: \"Warning\",\n\t\ticon: \"\u26A0\uFE0F \",\n\t\tmethod: console.warn,\n\t},\n} as const;\n\nconst colorMapper = {\n\tblack: \"black\",\n\tblue: \"blue\",\n\tcyan: \"cyan\",\n\tgreen: \"green\",\n\tgrey: \"gray\",\n\tmagenta: \"magenta\",\n\tred: \"red\",\n\twhite: \"white\",\n\tyellow: \"yellow\",\n} as const;\n\nconst modifierMapper = {\n\tbold: \"bold\",\n\titalic: \"italic\",\n\tstrikethrough: \"strikethrough\",\n\tunderline: \"underline\",\n} as const;\n\ntype MessageType = \"error\" | \"information\" | \"success\" | \"warning\";\n\ntype Color =\n\t| \"black\"\n\t| \"blue\"\n\t| \"cyan\"\n\t| \"green\"\n\t| \"grey\"\n\t| \"magenta\"\n\t| \"red\"\n\t| \"white\"\n\t| \"yellow\";\n\ntype Modifier =\n\t| \"bold\"\n\t| \"italic\"\n\t| \"lowercase\"\n\t| \"strikethrough\"\n\t| \"underline\"\n\t| \"uppercase\";\n", "export const createQueue = <Item>() => {\n\tconst items: Item[] = [];\n\n\treturn {\n\t\tdequeue() {\n\t\t\treturn items.shift();\n\t\t},\n\t\tenqueue(item: Item) {\n\t\t\titems.push(item);\n\t\t},\n\t\tisEmpty() {\n\t\t\treturn items.length === 0;\n\t\t},\n\t};\n};\n", "import type {\n\tCommandName,\n\tContext,\n\tEmptyObject,\n\tObjectLikeConstraint,\n} from \"../../../types\";\n\nimport { createQueue } from \"./queue\";\n\nexport type CommandController<\n\tValues extends ObjectLikeConstraint = EmptyObject,\n> = {\n\taddInstruction: (instruction: Instruction) => void;\n\taddOptionDescription: (key: string, description: string) => void;\n\taddValue: <Key extends keyof Values>(key: Key, value: Values[Key]) => void;\n\t/**\n\t * Enables a command by iterating over instructions and executing them\n\t */\n\tenable: () => Promise<void>;\n\tgetContext: (rootCommandName: CommandName) => Context<Values>;\n\tgetMetadata: (rootCommandName: CommandName) => CommandMetadata;\n};\n\nexport const getCommandController = <Values extends ObjectLikeConstraint>(\n\tname: CommandName,\n) => {\n\tconst controller = commandControllerCollection[name];\n\n\tif (!controller) {\n\t\tthrow new Error(\n\t\t\t`No controller has been set for the \\`${name}\\` command.\\nHave you run the \\`termost\\` constructor?`,\n\t\t);\n\t}\n\n\treturn controller as CommandController<Values>;\n};\n\nexport const createCommandController = <Values extends ObjectLikeConstraint>(\n\tname: CommandName,\n\tdescription: CommandMetadata[\"description\"],\n) => {\n\tconst instructions = createQueue<Instruction>();\n\t// eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n\tlet context = {} as Context<Values>;\n\n\tconst metadata: CommandMetadata = {\n\t\tdescription,\n\t\toptions: {\n\t\t\t\"-h, --help\": \"Display the help center\",\n\t\t\t\"-v, --version\": \"Print the version\",\n\t\t},\n\t};\n\n\tconst controller: CommandController<Values> = {\n\t\taddInstruction(instruction) {\n\t\t\tinstructions.enqueue(instruction);\n\t\t},\n\t\taddOptionDescription(key, value) {\n\t\t\tmetadata.options[key] = value;\n\t\t},\n\t\taddValue(key, value) {\n\t\t\tcontext[key] = value;\n\t\t},\n\t\tasync enable() {\n\t\t\twhile (!instructions.isEmpty()) {\n\t\t\t\tconst task = instructions.dequeue();\n\n\t\t\t\tif (task) {\n\t\t\t\t\tawait task();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetContext(rootCommandName) {\n\t\t\t// @note: By design, global values are accessible to subcommands\n\t\t\t// Consequently, root command values are merged with the current command ones:\n\t\t\tif (name !== rootCommandName) {\n\t\t\t\tconst rootController = getCommandController(rootCommandName);\n\n\t\t\t\tconst globalContext =\n\t\t\t\t\trootController.getContext(rootCommandName);\n\n\t\t\t\tcontext = {\n\t\t\t\t\t...globalContext,\n\t\t\t\t\t...context,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn context;\n\t\t},\n\t\tgetMetadata(rootCommandName) {\n\t\t\tif (name !== rootCommandName) {\n\t\t\t\tconst globalMetadata =\n\t\t\t\t\tgetCommandController(rootCommandName).getMetadata(\n\t\t\t\t\t\trootCommandName,\n\t\t\t\t\t);\n\n\t\t\t\tmetadata.options = {\n\t\t\t\t\t...globalMetadata.options,\n\t\t\t\t\t...metadata.options,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn metadata;\n\t\t},\n\t};\n\n\tcommandDescriptionCollection[name] = description;\n\tcommandControllerCollection[name] = controller;\n\n\treturn controller;\n};\n\nexport const getCommandDescriptionCollection = () => {\n\treturn commandDescriptionCollection;\n};\n\ntype CommandMetadata = {\n\tdescription: string;\n\toptions: Record<string, string>;\n};\n\ntype Instruction = () => Promise<void>;\n\nconst commandControllerCollection: Record<\n\tCommandName,\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tCommandController<any>\n> = {};\n\nconst commandDescriptionCollection: Record<\n\tCommandName,\n\tCommandMetadata[\"description\"]\n> = {};\n", "/* eslint-disable sonarjs/cognitive-complexity */\nimport { format } from \"../../helpers/stdout\";\nimport type { ObjectLikeConstraint, ProgramMetadata } from \"../../types\";\n\nimport {\n\tcreateCommandController,\n\tgetCommandController,\n\tgetCommandDescriptionCollection,\n} from \"./controller\";\nimport type { CommandController } from \"./controller\";\n\nexport type CommandParameters = {\n\tname: string;\n\tdescription: string;\n};\n\nexport const createCommand = <Values extends ObjectLikeConstraint>(\n\t{ name, description }: CommandParameters,\n\t{ name: rootCommandName, argv, version }: ProgramMetadata,\n) => {\n\tconst isRootCommand = name === rootCommandName;\n\tconst isActiveCommand = argv.command === name;\n\tconst controller = createCommandController<Values>(name, description);\n\tconst rootController = getCommandController(rootCommandName);\n\n\tsetTimeout(() => {\n\t\t// @note: By design, the root command instructions are always executed\n\t\t// even with subcommands (to share options, messages...)\n\t\tif (isRootCommand && !isActiveCommand) {\n\t\t\tvoid rootController.enable();\n\t\t}\n\n\t\t// @note: enable the current active command instructions:\n\t\tif (isActiveCommand) {\n\t\t\t// @note: setTimeout 0 allows to run activation logic in the next event loop iteration.\n\t\t\t// It'll allow to make sure that the `metadata` is correctly filled with all commands\n\t\t\t// metadata (especially to let the global help option to display all available commands):\n\t\t\tconst optionKeys = Object.keys(argv.options);\n\n\t\t\tif (\n\t\t\t\toptionKeys.includes(OPTION_HELP_NAMES[0]) ||\n\t\t\t\toptionKeys.includes(OPTION_HELP_NAMES[1])\n\t\t\t) {\n\t\t\t\tshowHelp({\n\t\t\t\t\tcontroller,\n\t\t\t\t\tcurrentCommandName: name,\n\t\t\t\t\tisRootCommand,\n\t\t\t\t\trootCommandName,\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\toptionKeys.includes(OPTION_VERSION_NAMES[0]) ||\n\t\t\t\toptionKeys.includes(OPTION_VERSION_NAMES[1])\n\t\t\t) {\n\t\t\t\tconsole.info(version);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvoid controller.enable();\n\t\t}\n\t}, 0);\n\n\treturn name;\n};\n\nconst OPTION_HELP_NAMES = [\"help\", \"h\"] as const;\nconst OPTION_VERSION_NAMES = [\"version\", \"v\"] as const;\n\nconst showHelp = ({\n\tcontroller,\n\tcurrentCommandName,\n\tisRootCommand,\n\trootCommandName,\n}: {\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tcontroller: CommandController<any>;\n\tcurrentCommandName: string;\n\tisRootCommand: boolean;\n\trootCommandName: string;\n}) => {\n\tconst commandMetadata = controller.getMetadata(rootCommandName);\n\tconst { description, options } = commandMetadata;\n\tconst commands = getCommandDescriptionCollection();\n\tconst optionKeys = Object.keys(commandMetadata.options);\n\tconst commandKeys = Object.keys(commands);\n\tconst hasOptions = optionKeys.length > 0;\n\tconst hasCommands = isRootCommand && commandKeys.length > 1;\n\n\tprintTitle(\"Usage\");\n\tprint(\n\t\t`${format(\n\t\t\t`${rootCommandName}${\n\t\t\t\tisRootCommand ? \"\" : ` ${String(currentCommandName)}`\n\t\t\t}`,\n\t\t\t{\n\t\t\t\tcolor: \"green\",\n\t\t\t},\n\t\t)} ${hasCommands ? \"<command> \" : \"\"}${\n\t\t\thasOptions ? \"[...options]\" : \"\"\n\t\t}`,\n\t);\n\n\tif (description) {\n\t\tprintTitle(\"Description\");\n\t\tprint(description);\n\t}\n\n\tconst padding = [...commandKeys, ...optionKeys].reduce((value, item) => {\n\t\treturn Math.max(value, item.length);\n\t}, 0);\n\n\tif (hasCommands) {\n\t\tprintTitle(\"Commands\");\n\n\t\tfor (const name of commandKeys) {\n\t\t\tif (name === rootCommandName) continue;\n\n\t\t\tconst commandDescription = commands[name];\n\n\t\t\tif (commandDescription)\n\t\t\t\tprintLabelValue(name, commandDescription, padding);\n\t\t}\n\t}\n\n\tif (hasOptions) {\n\t\tprintTitle(\"Options\");\n\n\t\tfor (const key of optionKeys) {\n\t\t\tprintLabelValue(key, options[key] as string, padding);\n\t\t}\n\t}\n};\n\nconst print = (...parameters: Parameters<typeof format>) => {\n\tconsole.log(format(...parameters));\n};\n\nconst printTitle = (message: string) => {\n\tprint(`\\n${message}:`, {\n\t\tcolor: \"yellow\",\n\t\tmodifiers: [\"bold\", \"underline\", \"uppercase\"],\n\t});\n};\n\nconst printLabelValue = (label: string, value: string, padding: number) => {\n\tprint(\n\t\t`  ${format(label.padEnd(padding + 1, \" \"), {\n\t\t\tcolor: \"green\",\n\t\t})} ${value}`,\n\t);\n};\n", "/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { prompt } from \"enquirer\";\n\nimport type {\n\tCreateInstruction,\n\tInstructionKey,\n\tInstructionParameters,\n\tLabel,\n\tObjectLikeConstraint,\n} from \"../../types\";\n\nexport const createInput: CreateInstruction<\n\tInputParameters<ObjectLikeConstraint, keyof ObjectLikeConstraint>\n> = (parameters) => {\n\tconst { key, label, defaultValue, type } = parameters;\n\n\treturn async function execute(context, argv) {\n\t\tconst promptObject: Parameters<typeof prompt>[0] & {\n\t\t\tchoices?: { title: string; selected?: boolean; value: string }[];\n\t\t} = {\n\t\t\tname: key,\n\t\t\tinitial: defaultValue,\n\t\t\tmessage: typeof label === \"function\" ? label(context, argv) : label,\n\t\t\ttype,\n\t\t};\n\n\t\tif (parameters.type === \"select\" || parameters.type === \"multiselect\") {\n\t\t\tconst isMultiSelect = parameters.type === \"multiselect\";\n\t\t\tconst options = parameters.options as string[];\n\n\t\t\tconst choices = options.map((option) => ({\n\t\t\t\ttitle: option,\n\t\t\t\tvalue: option,\n\t\t\t\t...(isMultiSelect && {\n\t\t\t\t\tselected: ((defaultValue || []) as string[]).includes(\n\t\t\t\t\t\toption,\n\t\t\t\t\t),\n\t\t\t\t}),\n\t\t\t}));\n\n\t\t\tpromptObject.choices = choices;\n\t\t}\n\n\t\tconst data = await prompt<ObjectLikeConstraint>(promptObject);\n\n\t\treturn { key, value: data[key] };\n\t};\n};\n\nexport type InputParameters<\n\tValues extends ObjectLikeConstraint,\n\tKey extends keyof Values,\n> = InstructionParameters<\n\tValues,\n\tInstructionKey<Key> &\n\t\t(\n\t\t\t| {\n\t\t\t\t\tlabel: Label<Values>;\n\t\t\t\t\tdefaultValue?: Values[Key] extends boolean\n\t\t\t\t\t\t? Values[Key]\n\t\t\t\t\t\t: never;\n\t\t\t\t\ttype: \"confirm\";\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\tlabel: Label<Values>;\n\t\t\t\t\tdefaultValue?: Values[Key] extends string\n\t\t\t\t\t\t? Values[Key]\n\t\t\t\t\t\t: never;\n\t\t\t\t\toptions: Values[Key] extends string ? Values[Key][] : never;\n\t\t\t\t\ttype: \"select\";\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\tlabel: Label<Values>;\n\t\t\t\t\tdefaultValue?: Values[Key] extends string\n\t\t\t\t\t\t? Values[Key]\n\t\t\t\t\t\t: never;\n\t\t\t\t\ttype: \"text\";\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\tlabel: Label<Values>;\n\t\t\t\t\tdefaultValue?: Values[Key] extends string[]\n\t\t\t\t\t\t? Values[Key]\n\t\t\t\t\t\t: never;\n\t\t\t\t\toptions: Values[Key] extends string[] ? Values[Key] : never;\n\t\t\t\t\ttype: \"multiselect\";\n\t\t\t  }\n\t\t)\n>;\n", "/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport type {\n\tCreateInstruction,\n\tInstructionKey,\n\tInstructionParameters,\n\tObjectLikeConstraint,\n\tProgramMetadata,\n} from \"../../types\";\nimport type { CommandController } from \"../command\";\n\nexport const createOption =\n\t(\n\t\tcommandController: CommandController,\n\t\t{ argv }: ProgramMetadata,\n\t): CreateInstruction<\n\t\tOptionParameters<ObjectLikeConstraint, keyof ObjectLikeConstraint>\n\t> =>\n\t(parameters) => {\n\t\tconst { key, name, description, defaultValue } = parameters;\n\n\t\tconst aliases =\n\t\t\ttypeof name === \"string\" ? [name] : [name.short, name.long];\n\n\t\tconst metadataKey = aliases\n\t\t\t.map(\n\t\t\t\t(alias, index) =>\n\t\t\t\t\t\"-\".repeat(aliases.length > 1 ? index + 1 : 2) + alias,\n\t\t\t)\n\t\t\t.join(\", \");\n\n\t\tcommandController.addOptionDescription(metadataKey, description);\n\n\t\treturn async function execute() {\n\t\t\tlet value: unknown;\n\n\t\t\tfor (const alias of aliases) {\n\t\t\t\tif (alias in argv.options) {\n\t\t\t\t\tvalue = argv.options[alias];\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Promise.resolve({ key, value: value ?? defaultValue });\n\t\t};\n\t};\n\nexport type OptionParameters<\n\tValues extends ObjectLikeConstraint,\n\tKey extends keyof Values,\n> = InstructionParameters<\n\tValues,\n\tInstructionKey<Key> & {\n\t\tname: string | { long: string; short: string };\n\t\tdescription: string;\n\t\tdefaultValue?: Values[Key];\n\t}\n>;\n", "import { Listr, PRESET_TIMER } from \"listr2\";\n\nimport type {\n\tArgumentValues,\n\tContext,\n\tCreateInstruction,\n\tInstructionKey,\n\tInstructionParameters,\n\tLabel,\n\tObjectLikeConstraint,\n} from \"../../types\";\n\nexport const createTask: CreateInstruction<\n\tTaskParameters<ObjectLikeConstraint, keyof ObjectLikeConstraint>\n> = (parameters) => {\n\tconst { key, label, handler } = parameters;\n\n\tconst receiver = label\n\t\t? new Listr([], {\n\t\t\t\trendererOptions: {\n\t\t\t\t\tcollapseErrors: false,\n\t\t\t\t\tformatOutput: \"wrap\",\n\t\t\t\t\tshowErrorMessage: true,\n\t\t\t\t\ttimer: PRESET_TIMER,\n\t\t\t\t},\n\t\t  })\n\t\t: null;\n\n\treturn async function execute(context, argv) {\n\t\tlet value: unknown;\n\n\t\tif (!receiver) {\n\t\t\tvalue = await handler(context, argv);\n\t\t} else {\n\t\t\treceiver.add({\n\t\t\t\t...(label && {\n\t\t\t\t\ttitle:\n\t\t\t\t\t\ttypeof label === \"function\"\n\t\t\t\t\t\t\t? label(context, argv)\n\t\t\t\t\t\t\t: label,\n\t\t\t\t}),\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\t\t\t\ttask: async () => (value = await handler(context, argv)),\n\t\t\t});\n\n\t\t\tawait receiver.run();\n\t\t}\n\n\t\treturn { key, value };\n\t};\n};\n\nexport type TaskParameters<\n\tValues extends ObjectLikeConstraint,\n\tKey extends keyof Values | undefined = undefined,\n> = InstructionParameters<\n\tValues,\n\tPartial<InstructionKey<Key>> & {\n\t\tlabel?: Label<Values>;\n\t\thandler: (\n\t\t\tcontext: Context<Values>,\n\t\t\targv: ArgumentValues,\n\t\t) => Key extends keyof Values\n\t\t\t? Promise<Values[Key]> | Values[Key]\n\t\t\t: Promise<void> | void;\n\t}\n>;\n", "import fs from \"fs\";\nimport path from \"path\";\n\nimport type { PackageMetadata } from \"../../types\";\n\nexport const findNearestPackageJson = (pathname: string): PackageMetadata => {\n\tconst packagePathname = path.resolve(pathname, \"package.json\");\n\n\tif (isFileExists(packagePathname)) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-var-requires\n\t\treturn require(packagePathname) as PackageMetadata;\n\t}\n\n\treturn findNearestPackageJson(path.resolve(pathname, \"..\"));\n};\n\nconst isFileExists = (pathname: string) => {\n\ttry {\n\t\tfs.accessSync(pathname, fs.constants.F_OK);\n\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const getPackageMetadata = () => {\n\tconst mainFilename = require.main?.filename;\n\n\tif (!mainFilename) {\n\t\tthrow new Error(\n\t\t\t\"Termost was unable to retrieve automatically the package name and version. To fix it, use `termost({ name, description, version })` to define them manually.\",\n\t\t);\n\t}\n\n\treturn findNearestPackageJson(path.dirname(mainFilename));\n};\n", "// eslint-disable-next-line sonarjs/cognitive-complexity\nexport const getArguments = () => {\n\tconst parameters = process.argv.slice(2);\n\tlet command: string | undefined;\n\tconst operands: string[] = [];\n\tconst options: Record<string, boolean | number | string> = {};\n\tlet currentOptionName: string | undefined;\n\n\tconst addOptimisticOption = (name: string, value?: boolean | string) => {\n\t\tif (value) {\n\t\t\toptions[name] = typeof value === \"string\" ? castValue(value) : true;\n\t\t} else {\n\t\t\tcurrentOptionName = name;\n\t\t}\n\t};\n\n\tconst flushOptimisticOption = () => {\n\t\tif (currentOptionName) {\n\t\t\toptions[currentOptionName] = true;\n\t\t\tcurrentOptionName = undefined;\n\t\t}\n\t};\n\n\tfor (const parameter of parameters) {\n\t\tconst shortFlagMatchResult = SHORT_FLAG_REGEX.exec(parameter)?.groups;\n\t\tconst longFlagMatchResult = LONG_FLAG_REGEX.exec(parameter)?.groups;\n\n\t\tif (shortFlagMatchResult?.name) {\n\t\t\tflushOptimisticOption();\n\n\t\t\tconst optionFlags = shortFlagMatchResult.name.split(\"\");\n\t\t\tconst lastIndex = optionFlags.length - 1;\n\n\t\t\toptionFlags.forEach((flag, index) => {\n\t\t\t\taddOptimisticOption(\n\t\t\t\t\tflag,\n\t\t\t\t\tlastIndex === index ? undefined : true,\n\t\t\t\t);\n\t\t\t});\n\t\t} else if (longFlagMatchResult?.name) {\n\t\t\tflushOptimisticOption();\n\t\t\taddOptimisticOption(\n\t\t\t\tlongFlagMatchResult.name,\n\t\t\t\tlongFlagMatchResult.value,\n\t\t\t);\n\t\t} else if (currentOptionName) {\n\t\t\toptions[currentOptionName] = castValue(parameter);\n\t\t\tcurrentOptionName = undefined;\n\t\t} else if (!command) {\n\t\t\tcommand = parameter;\n\t\t} else {\n\t\t\toperands.push(parameter);\n\t\t}\n\t}\n\n\tflushOptimisticOption();\n\n\treturn { command, operands, options };\n};\n\nconst SHORT_FLAG_REGEX = /^-(?<name>(?!-).*)$/;\nconst LONG_FLAG_REGEX = /^--(?<name>.*?)(?:=(?<value>.+))?$/;\n\nconst castValue = (value: string) => {\n\ttry {\n\t\treturn JSON.parse(value) as boolean | number | string;\n\t} catch {\n\t\treturn value;\n\t}\n};\n", "import { createCommand, getCommandController } from \"./api/command\";\nimport type { CommandParameters } from \"./api/command\";\nimport { createInput } from \"./api/input\";\nimport type { InputParameters } from \"./api/input\";\nimport { createOption } from \"./api/option\";\nimport type { OptionParameters } from \"./api/option\";\nimport { createTask } from \"./api/task\";\nimport type { TaskParameters } from \"./api/task\";\nimport { getPackageMetadata } from \"./helpers/package\";\nimport { getArguments } from \"./helpers/stdin\";\nimport type {\n\tCommandName,\n\tCreateInstruction,\n\tEmptyObject,\n\tInstructionParameters,\n\tObjectLikeConstraint,\n\tPackageMetadata,\n\tProgramMetadata,\n} from \"./types\";\n\n/**\n * The termost fluent interface API\n */\nexport type Termost<Values extends ObjectLikeConstraint = EmptyObject> = {\n\t/**\n\t * Allows to attach a new sub-command to the program\n\t * @param name - The CLI command name\n\t * @param description - The CLI command description\n\t * @returns The Command API\n\t */\n\tcommand: <CommandValues extends ObjectLikeConstraint = EmptyObject>(\n\t\tparams: CommandParameters,\n\t) => Termost<CommandValues & Values>;\n\tinput: <Key extends keyof Values>(\n\t\tparams: InputParameters<Values, Key>,\n\t) => Termost<Values>;\n\toption: <Key extends keyof Values>(\n\t\tparams: OptionParameters<Values, Key>,\n\t) => Termost<Values>;\n\ttask: <Key extends keyof Values | undefined = undefined>(\n\t\tparams: TaskParameters<Values, Key>,\n\t) => Termost<Values>;\n};\n\nexport function termost<Values extends ObjectLikeConstraint = EmptyObject>(\n\tmetadata: Partial<PackageMetadata> | string,\n\tcallbacks: TerminationCallbacks = {},\n) {\n\tlet { name, description, version } = isObject(metadata)\n\t\t? metadata\n\t\t: {\n\t\t\t\tname: undefined,\n\t\t\t\tdescription: metadata,\n\t\t\t\tversion: undefined,\n\t\t  };\n\n\tif (\n\t\tname === undefined ||\n\t\tdescription === undefined ||\n\t\tversion === undefined\n\t) {\n\t\tconst packageMetadata = getPackageMetadata();\n\n\t\tname ??= packageMetadata.name;\n\t\tdescription ??= packageMetadata.description;\n\t\tversion ??= packageMetadata.version;\n\t}\n\n\tconst { command = name, operands, options } = getArguments();\n\n\tsetGracefulListeners(callbacks);\n\n\treturn createProgram<Values>({\n\t\tname,\n\t\tdescription,\n\t\targv: { command, operands, options },\n\t\tversion,\n\t});\n}\n\nexport const createProgram = <Values extends ObjectLikeConstraint>(\n\tmetadata: ProgramMetadata,\n): Termost<Values> => {\n\tconst { name, description, argv } = metadata;\n\tconst rootCommandName: CommandName = name;\n\tlet currentCommandName: CommandName = rootCommandName;\n\n\tconst createInstruction = <\n\t\tParameters extends InstructionParameters<ObjectLikeConstraint>,\n\t>(\n\t\tfactory: CreateInstruction<Parameters>,\n\t\tparams: InstructionParameters<Values>,\n\t) => {\n\t\tconst instruction = factory(params as Parameters);\n\t\tconst controller = getCommandController<Values>(currentCommandName);\n\n\t\tcontroller.addInstruction(async () => {\n\t\t\tconst { skip } = params;\n\t\t\tconst context = controller.getContext(rootCommandName);\n\n\t\t\tif (skip?.(context, argv)) return;\n\n\t\t\tconst output = await instruction(context, argv);\n\n\t\t\tif (!output || !output.key) return;\n\n\t\t\tcontroller.addValue(\n\t\t\t\toutput.key,\n\t\t\t\toutput.value as Values[keyof Values],\n\t\t\t);\n\t\t});\n\t};\n\n\tconst program: Termost<Values> = {\n\t\tcommand<CommandValues>(params: CommandParameters) {\n\t\t\tcurrentCommandName = createCommand(params, metadata);\n\n\t\t\treturn this as Termost<CommandValues & Values>;\n\t\t},\n\t\tinput(params) {\n\t\t\tcreateInstruction(createInput, params);\n\n\t\t\treturn this;\n\t\t},\n\t\toption(params) {\n\t\t\tcreateInstruction(\n\t\t\t\tcreateOption(\n\t\t\t\t\tgetCommandController(currentCommandName),\n\t\t\t\t\tmetadata,\n\t\t\t\t),\n\t\t\t\tparams,\n\t\t\t);\n\n\t\t\treturn this;\n\t\t},\n\t\ttask(params) {\n\t\t\tcreateInstruction(createTask, params);\n\n\t\t\treturn this;\n\t\t},\n\t};\n\n\t// @note: the root command is created by default\n\tprogram.command({\n\t\tname,\n\t\tdescription,\n\t});\n\n\treturn program;\n};\n\ntype TerminationCallbacks = Partial<{\n\tonException: (error: Error) => void;\n\tonShutdown: () => void;\n}>;\n\nconst setGracefulListeners = ({\n\tonException = () => {\n\t\treturn;\n\t},\n\tonShutdown = () => {\n\t\treturn;\n\t},\n}: TerminationCallbacks) => {\n\tprocess.on(\"SIGTERM\", () => {\n\t\tonShutdown();\n\t\tprocess.exit(0);\n\t});\n\n\tprocess.on(\"SIGINT\", () => {\n\t\tonShutdown();\n\t\tprocess.exit(0);\n\t});\n\n\tprocess.on(\"uncaughtException\", (error) => {\n\t\tonException(error);\n\t\tprocess.exit(1);\n\t});\n\n\tprocess.on(\"unhandledRejection\", (reason) => {\n\t\tif (reason instanceof Error) {\n\t\t\tonException(reason);\n\t\t}\n\n\t\tprocess.exit(1);\n\t});\n};\n\nconst isObject = (value: unknown): value is ObjectLikeConstraint => {\n\treturn value !== null && typeof value === \"object\";\n};\n"],
+  "mappings": "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",
+  "names": ["src_exports", "__export", "helpers", "termost", "__toCommonJS", "import_child_process", "exec", "command", "options", "resolve", "reject", "stdout", "stderr", "bin", "args", "childProcess", "chunk", "exitCode", "output", "import_picocolors", "format", "message", "color", "modifiers", "transformers", "pico", "colorMapper", "mod", "modifierMapper", "compose", "fns", "prevFn", "nextFn", "value", "content", "label", "type", "defaultLabel", "icon", "method", "formatPropertiesByType", "messages", "msg", "createQueue", "items", "item", "getCommandController", "name", "controller", "commandControllerCollection", "createCommandController", "description", "instructions", "createQueue", "context", "metadata", "instruction", "key", "value", "task", "rootCommandName", "globalMetadata", "commandDescriptionCollection", "getCommandDescriptionCollection", "createCommand", "name", "description", "rootCommandName", "argv", "version", "isRootCommand", "isActiveCommand", "controller", "createCommandController", "rootController", "getCommandController", "optionKeys", "OPTION_HELP_NAMES", "showHelp", "OPTION_VERSION_NAMES", "currentCommandName", "commandMetadata", "options", "commands", "getCommandDescriptionCollection", "commandKeys", "hasOptions", "hasCommands", "printTitle", "print", "format", "padding", "value", "item", "commandDescription", "printLabelValue", "key", "parameters", "message", "label", "import_enquirer", "createInput", "parameters", "key", "label", "defaultValue", "type", "context", "argv", "promptObject", "isMultiSelect", "choices", "option", "data", "createOption", "commandController", "argv", "parameters", "key", "name", "description", "defaultValue", "aliases", "metadataKey", "alias", "index", "value", "import_listr2", "createTask", "parameters", "key", "label", "handler", "receiver", "context", "argv", "value", "import_fs", "import_path", "findNearestPackageJson", "pathname", "packagePathname", "path", "isFileExists", "fs", "getPackageMetadata", "mainFilename", "getArguments", "parameters", "command", "operands", "options", "currentOptionName", "addOptimisticOption", "name", "value", "castValue", "flushOptimisticOption", "parameter", "shortFlagMatchResult", "SHORT_FLAG_REGEX", "longFlagMatchResult", "LONG_FLAG_REGEX", "optionFlags", "lastIndex", "flag", "index", "termost", "metadata", "callbacks", "name", "description", "version", "isObject", "packageMetadata", "getPackageMetadata", "command", "operands", "options", "getArguments", "setGracefulListeners", "createProgram", "argv", "rootCommandName", "currentCommandName", "createInstruction", "factory", "params", "instruction", "controller", "getCommandController", "skip", "context", "output", "program", "createCommand", "createInput", "createOption", "createTask", "onException", "onShutdown", "error", "reason", "value", "helpers", "exec", "format", "message"]
 }
diff --git a/node_modules/termost/dist/index.d.ts b/node_modules/termost/dist/index.d.ts
index 4fc7d15..c8befdd 100644
--- a/node_modules/termost/dist/index.d.ts
+++ b/node_modules/termost/dist/index.d.ts
@@ -6,13 +6,13 @@ export type EmptyObject = {};
  */
 export type ArgumentValues = {
 	command: CommandName;
-	options: Record<string, boolean | number | string>;
 	operands: string[];
+	options: Record<string, boolean | number | string>;
 };
 export type PackageMetadata = {
 	name: string;
-	version: string;
 	description: string;
+	version: string;
 };
 export type Context<Values extends ObjectLikeConstraint> = Values;
 export type InstructionParameters<Values extends ObjectLikeConstraint, ExtraParameters extends ObjectLikeConstraint = EmptyObject> = ExtraParameters & {
@@ -31,23 +31,23 @@ export type CommandParameters = {
 	description: string;
 };
 export type InputParameters<Values extends ObjectLikeConstraint, Key extends keyof Values> = InstructionParameters<Values, InstructionKey<Key> & ({
-	type: "confirm";
 	label: Label<Values>;
 	defaultValue?: Values[Key] extends boolean ? Values[Key] : never;
+	type: "confirm";
 } | {
-	type: "multiselect";
 	label: Label<Values>;
-	options: Values[Key] extends string[] ? Values[Key] : never;
-	defaultValue?: Values[Key] extends string[] ? Values[Key] : never;
-} | {
+	defaultValue?: Values[Key] extends string ? Values[Key] : never;
+	options: Values[Key] extends string ? Values[Key][] : never;
 	type: "select";
+} | {
 	label: Label<Values>;
-	options: Values[Key] extends string ? Values[Key][] : never;
 	defaultValue?: Values[Key] extends string ? Values[Key] : never;
-} | {
 	type: "text";
+} | {
 	label: Label<Values>;
-	defaultValue?: Values[Key] extends string ? Values[Key] : never;
+	defaultValue?: Values[Key] extends string[] ? Values[Key] : never;
+	options: Values[Key] extends string[] ? Values[Key] : never;
+	type: "multiselect";
 })>;
 export type OptionParameters<Values extends ObjectLikeConstraint, Key extends keyof Values> = InstructionParameters<Values, InstructionKey<Key> & {
 	name: string | {
@@ -78,8 +78,8 @@ export type Termost<Values extends ObjectLikeConstraint = EmptyObject> = {
 };
 export declare function termost<Values extends ObjectLikeConstraint = EmptyObject>(metadata: Partial<PackageMetadata> | string, callbacks?: TerminationCallbacks): Termost<Values>;
 export type TerminationCallbacks = Partial<{
-	onShutdown: () => void;
 	onException: (error: Error) => void;
+	onShutdown: () => void;
 }>;
 export declare const helpers: {
 	exec: (command: string, options?: {
@@ -91,8 +91,8 @@ export declare const helpers: {
 		modifiers?: ("bold" | "italic" | "lowercase" | "strikethrough" | "underline" | "uppercase")[];
 	}) => string;
 	message: (content: string | string[], { label, type, }?: {
-		type?: "error" | "information" | "success" | "warning";
 		label?: string;
+		type?: "error" | "information" | "success" | "warning";
 	}) => void;
 };
 
diff --git a/node_modules/termost/dist/index.mjs b/node_modules/termost/dist/index.mjs
index ae1fb10..28fbfac 100644
--- a/node_modules/termost/dist/index.mjs
+++ b/node_modules/termost/dist/index.mjs
@@ -1,5 +1,5 @@
-var k=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,o)=>(typeof require<"u"?require:t)[o]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});import{spawn as F}from"child_process";var V=async(e,t={hasLiveOutput:!1})=>new Promise((o,s)=>{let r="",l="",[n,...a]=e.split(" "),i=F(n,a,{cwd:t.cwd,shell:!0,stdio:t.hasLiveOutput?"inherit":"pipe",env:{...process.env,FORCE_COLOR:"1"}});i.stdout?.on("data",c=>{r+=c}),i.stderr?.on("data",c=>{l+=c}),i.on("close",c=>{if(c!==0){let u=`${l}${r}`;s(u.trim())}else o(r.trim())})});import h from"picocolors";var y=(e,{color:t,modifiers:o}={color:"white",modifiers:[]})=>{let s=[];return s.push(h[H[t??"white"]]),(o??[]).forEach(r=>{r==="uppercase"?e=e.toUpperCase():r==="lowercase"?e=e.toLowerCase():s.push(h[J[r]])}),G(...s)(e)},G=(...e)=>e.reduce((t,o)=>s=>t(o(s)),e[0]),O=(e,{label:t,type:o="information"}={})=>{let{color:s,defaultLabel:r,icon:l,method:n}=q[o],a=typeof e=="string"?[e]:e;n(y(`
-${l} ${t??r}`,{color:s,modifiers:["bold"]}));for(let i of a)n(y(`   ${i}`,{color:s}))},q={error:{color:"red",defaultLabel:"Error",icon:"\u274C",method:console.error},information:{color:"blue",defaultLabel:"Information",icon:"\u2139\uFE0F ",method:console.info},success:{color:"green",defaultLabel:"Success",icon:"\u2705",method:console.log},warning:{color:"yellow",defaultLabel:"Warning",icon:"\u26A0\uFE0F ",method:console.warn}},H={black:"black",blue:"blue",cyan:"cyan",green:"green",grey:"gray",magenta:"magenta",red:"red",white:"white",yellow:"yellow"},J={bold:"bold",italic:"italic",strikethrough:"strikethrough",underline:"underline"};import P from"fs";import x from"path";var L=e=>{let t=x.resolve(e,"package.json");return Q(t)?k(t):L(x.resolve(e,".."))},Q=e=>{try{return P.accessSync(e,P.constants.F_OK),!0}catch{return!1}},I=()=>{let e=k.main?.filename;if(!e)throw new Error("Termost was unable to retrieve automatically the package name and version. To fix it, use `termost({ name, description, version })` to define them manually.");return L(x.dirname(e))};var M=()=>{let e=process.argv.slice(2),t,o=[],s={},r,l=(a,i)=>{i?s[a]=typeof i=="string"?v(i):!0:r=a},n=()=>{r&&(s[r]=!0,r=void 0)};for(let a of e){let i=U.exec(a)?.groups,c=X.exec(a)?.groups;if(i?.name){n();let u=i.name.split(""),p=u.length-1;u.forEach((f,m)=>{l(f,p===m?void 0:!0)})}else c?.name?(n(),l(c.name,c.value)):r?(s[r]=v(a),r=void 0):t?o.push(a):t=a}return n(),{command:t,operands:o,options:s}},U=/^-(?<name>(?!-).*)$/,X=/^--(?<name>.*?)(?:=(?<value>.+))?$/,v=e=>{try{return JSON.parse(e)}catch{return e}};var K=()=>{let e=[];return{enqueue(t){e.push(t)},dequeue(){return e.shift()},isEmpty(){return e.length===0}}};var g=e=>{let t=T[e];if(!t)throw new Error(`No controller has been set for the \`${e}\` command.
-Have you run the \`termost\` constructor?`);return t},j=(e,t)=>{let o=K(),s={},r={description:t,options:{"-h, --help":"Display the help center","-v, --version":"Print the version"}},l={addOptionDescription(n,a){r.options[n]=a},addValue(n,a){s[n]=a},addInstruction(n){o.enqueue(n)},async enable(){for(;!o.isEmpty();){let n=o.dequeue();n&&await n()}},getContext(n){return e!==n&&(s={...g(n).getContext(n),...s}),s},getMetadata(n){if(e!==n){let a=g(n).getMetadata(n);r.options={...a.options,...r.options}}return r}};return E[e]=t,T[e]=l,l},w=()=>E,T={},E={};var S=({name:e,description:t},{argv:o,name:s,version:r})=>{let l=e===s,n=o.command===e,a=j(e,t),i=g(s);return setTimeout(()=>{if(l&&!n&&i.enable(),n){let c=Object.keys(o.options);if(c.includes(N[0])||c.includes(N[1])){B({controller:a,currentCommandName:e,isRootCommand:l,rootCommandName:s});return}if(c.includes(R[0])||c.includes(R[1])){console.info(r);return}a.enable()}},0),e},N=["help","h"],R=["version","v"],B=({rootCommandName:e,currentCommandName:t,isRootCommand:o,controller:s})=>{let r=s.getMetadata(e),{options:l,description:n}=r,a=w(),i=Object.keys(r.options),c=Object.keys(a),u=i.length>0,p=o&&c.length>1;C("Usage"),b(`${y(`${e}${o?"":` ${String(t)}`}`,{color:"green"})} ${p?"<command> ":""}${u?"[...options]":""}`),n&&(C("Description"),b(n));let f=[...c,...i].reduce((m,d)=>Math.max(m,d.length),0);if(p){C("Commands");for(let m of c){if(m===e)continue;let d=a[m];d&&$(m,d,f)}}if(u){C("Options");for(let m of i)$(m,l[m],f)}},b=(...e)=>{console.log(y(...e))},C=e=>{b(`
-${e}:`,{color:"yellow",modifiers:["bold","underline","uppercase"]})},$=(e,t,o)=>{b(`  ${y(e.padEnd(o+1," "),{color:"green"})} ${t}`)};import{prompt as W}from"enquirer";var _=e=>{let{key:t,defaultValue:o,label:s,type:r}=e;return async function(n,a){let i={initial:o,message:typeof s=="function"?s(n,a):s,name:t,type:r};if(e.type==="select"||e.type==="multiselect"){let u=e.type==="multiselect",f=e.options.map(m=>({title:m,value:m,...u&&{selected:(o||[]).includes(m)}}));i.choices=f}let c=await W(i);return{key:t,value:c[t]}}};var A=(e,{argv:t})=>o=>{let{key:s,name:r,description:l,defaultValue:n}=o,a=typeof r=="string"?[r]:[r.short,r.long],i=a.map((c,u)=>"-".repeat(a.length>1?u+1:2)+c).join(", ");return e.addOptionDescription(i,l),async function(){let u;for(let p of a)if(p in t.options){u=t.options[p];break}return Promise.resolve({key:s,value:u??n})}};import{Listr as z,PRESET_TIMER as Y}from"listr2";var D=e=>{let{key:t,label:o,handler:s}=e,r=o?new z([],{rendererOptions:{collapseErrors:!1,formatOutput:"wrap",showErrorMessage:!0,timer:Y}}):null;return async function(n,a){let i;return r?(r.add({...o&&{title:typeof o=="function"?o(n,a):o},task:async()=>i=await s(n,a)}),await r.run()):i=await s(n,a),{key:t,value:i}}};function Z(e,t={}){let o=oe(e)?e:{description:e},s=I(),r=o.name??s.name,{command:l=r,options:n,operands:a}=M();return te(t),ee({argv:{command:l,options:n,operands:a},description:o.description??s.description,name:r,version:o.version??s.version})}var ee=e=>{let{argv:t,name:o,description:s}=e,r=o,l=r,n=(i,c)=>{let u=i(c),p=g(l);p.addInstruction(async()=>{let{skip:f}=c,m=p.getContext(r);if(f?.(m,t))return;let d=await u(m,t);!d||!d.key||p.addValue(d.key,d.value)})},a={command(i){return l=S(i,e),this},input(i){return n(_,i),this},option(i){return n(A(g(l),e),i),this},task(i){return n(D,i),this}};return a.command({name:o,description:s}),a},te=({onShutdown:e=()=>{},onException:t=()=>{}})=>{process.on("SIGTERM",()=>{e(),process.exit(0)}),process.on("SIGINT",()=>{e(),process.exit(0)}),process.on("uncaughtException",o=>{t(o),process.exit(1)}),process.on("unhandledRejection",o=>{o instanceof Error&&t(o),process.exit(1)})},oe=e=>e!==null&&typeof e=="object";var Ee={exec:V,format:y,message:O};export{Ee as helpers,Z as termost};
+var k=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(n,t)=>(typeof require<"u"?require:n)[t]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});import{spawn as F}from"child_process";var V=async(e,n={hasLiveOutput:!1})=>new Promise((t,s)=>{let o="",c="",[r,...i]=e.split(" "),a=F(r,i,{cwd:n.cwd,env:{...process.env,FORCE_COLOR:"1"},shell:!0,stdio:n.hasLiveOutput?"inherit":"pipe"});a.stdout?.on("data",l=>{o+=l}),a.stderr?.on("data",l=>{c+=l}),a.on("close",l=>{if(l!==0){let u=`${c}${o}`;s(u.trim())}else t(o.trim())})});import h from"picocolors";var y=(e,{color:n,modifiers:t}={color:"white",modifiers:[]})=>{let s=[];return s.push(h[H[n??"white"]]),(t??[]).forEach(o=>{o==="uppercase"?e=e.toUpperCase():o==="lowercase"?e=e.toLowerCase():s.push(h[J[o]])}),G(...s)(e)},G=(...e)=>e.reduce((n,t)=>s=>n(t(s)),e[0]),O=(e,{label:n,type:t="information"}={})=>{let{color:s,defaultLabel:o,icon:c,method:r}=q[t],i=typeof e=="string"?[e]:e;r(y(`
+${c} ${n??o}`,{color:s,modifiers:["bold"]}));for(let a of i)r(y(`   ${a}`,{color:s}))},q={error:{color:"red",defaultLabel:"Error",icon:"\u274C",method:console.error},information:{color:"blue",defaultLabel:"Information",icon:"\u2139\uFE0F ",method:console.info},success:{color:"green",defaultLabel:"Success",icon:"\u2705",method:console.log},warning:{color:"yellow",defaultLabel:"Warning",icon:"\u26A0\uFE0F ",method:console.warn}},H={black:"black",blue:"blue",cyan:"cyan",green:"green",grey:"gray",magenta:"magenta",red:"red",white:"white",yellow:"yellow"},J={bold:"bold",italic:"italic",strikethrough:"strikethrough",underline:"underline"};var P=()=>{let e=[];return{dequeue(){return e.shift()},enqueue(n){e.push(n)},isEmpty(){return e.length===0}}};var g=e=>{let n=v[e];if(!n)throw new Error(`No controller has been set for the \`${e}\` command.
+Have you run the \`termost\` constructor?`);return n},L=(e,n)=>{let t=P(),s={},o={description:n,options:{"-h, --help":"Display the help center","-v, --version":"Print the version"}},c={addInstruction(r){t.enqueue(r)},addOptionDescription(r,i){o.options[r]=i},addValue(r,i){s[r]=i},async enable(){for(;!t.isEmpty();){let r=t.dequeue();r&&await r()}},getContext(r){return e!==r&&(s={...g(r).getContext(r),...s}),s},getMetadata(r){if(e!==r){let i=g(r).getMetadata(r);o.options={...i.options,...o.options}}return o}};return K[e]=n,v[e]=c,c},I=()=>K,v={},K={};var T=({name:e,description:n},{name:t,argv:s,version:o})=>{let c=e===t,r=s.command===e,i=L(e,n),a=g(t);return setTimeout(()=>{if(c&&!r&&a.enable(),r){let l=Object.keys(s.options);if(l.includes(j[0])||l.includes(j[1])){Q({controller:i,currentCommandName:e,isRootCommand:c,rootCommandName:t});return}if(l.includes(M[0])||l.includes(M[1])){console.info(o);return}i.enable()}},0),e},j=["help","h"],M=["version","v"],Q=({controller:e,currentCommandName:n,isRootCommand:t,rootCommandName:s})=>{let o=e.getMetadata(s),{description:c,options:r}=o,i=I(),a=Object.keys(o.options),l=Object.keys(i),u=a.length>0,p=t&&l.length>1;C("Usage"),b(`${y(`${s}${t?"":` ${String(n)}`}`,{color:"green"})} ${p?"<command> ":""}${u?"[...options]":""}`),c&&(C("Description"),b(c));let f=[...l,...a].reduce((m,d)=>Math.max(m,d.length),0);if(p){C("Commands");for(let m of l){if(m===s)continue;let d=i[m];d&&w(m,d,f)}}if(u){C("Options");for(let m of a)w(m,r[m],f)}},b=(...e)=>{console.log(y(...e))},C=e=>{b(`
+${e}:`,{color:"yellow",modifiers:["bold","underline","uppercase"]})},w=(e,n,t)=>{b(`  ${y(e.padEnd(t+1," "),{color:"green"})} ${n}`)};import{prompt as U}from"enquirer";var E=e=>{let{key:n,label:t,defaultValue:s,type:o}=e;return async function(r,i){let a={name:n,initial:s,message:typeof t=="function"?t(r,i):t,type:o};if(e.type==="select"||e.type==="multiselect"){let u=e.type==="multiselect",f=e.options.map(m=>({title:m,value:m,...u&&{selected:(s||[]).includes(m)}}));a.choices=f}let l=await U(a);return{key:n,value:l[n]}}};var N=(e,{argv:n})=>t=>{let{key:s,name:o,description:c,defaultValue:r}=t,i=typeof o=="string"?[o]:[o.short,o.long],a=i.map((l,u)=>"-".repeat(i.length>1?u+1:2)+l).join(", ");return e.addOptionDescription(a,c),async function(){let u;for(let p of i)if(p in n.options){u=n.options[p];break}return Promise.resolve({key:s,value:u??r})}};import{Listr as X,PRESET_TIMER as B}from"listr2";var R=e=>{let{key:n,label:t,handler:s}=e,o=t?new X([],{rendererOptions:{collapseErrors:!1,formatOutput:"wrap",showErrorMessage:!0,timer:B}}):null;return async function(r,i){let a;return o?(o.add({...t&&{title:typeof t=="function"?t(r,i):t},task:async()=>a=await s(r,i)}),await o.run()):a=await s(r,i),{key:n,value:a}}};import $ from"fs";import x from"path";var S=e=>{let n=x.resolve(e,"package.json");return W(n)?k(n):S(x.resolve(e,".."))},W=e=>{try{return $.accessSync(e,$.constants.F_OK),!0}catch{return!1}},_=()=>{let e=k.main?.filename;if(!e)throw new Error("Termost was unable to retrieve automatically the package name and version. To fix it, use `termost({ name, description, version })` to define them manually.");return S(x.dirname(e))};var D=()=>{let e=process.argv.slice(2),n,t=[],s={},o,c=(i,a)=>{a?s[i]=typeof a=="string"?A(a):!0:o=i},r=()=>{o&&(s[o]=!0,o=void 0)};for(let i of e){let a=z.exec(i)?.groups,l=Y.exec(i)?.groups;if(a?.name){r();let u=a.name.split(""),p=u.length-1;u.forEach((f,m)=>{c(f,p===m?void 0:!0)})}else l?.name?(r(),c(l.name,l.value)):o?(s[o]=A(i),o=void 0):n?t.push(i):n=i}return r(),{command:n,operands:t,options:s}},z=/^-(?<name>(?!-).*)$/,Y=/^--(?<name>.*?)(?:=(?<value>.+))?$/,A=e=>{try{return JSON.parse(e)}catch{return e}};function Z(e,n={}){let{name:t,description:s,version:o}=ne(e)?e:{name:void 0,description:e,version:void 0};if(t===void 0||s===void 0||o===void 0){let a=_();t??(t=a.name),s??(s=a.description),o??(o=a.version)}let{command:c=t,operands:r,options:i}=D();return te(n),ee({name:t,description:s,argv:{command:c,operands:r,options:i},version:o})}var ee=e=>{let{name:n,description:t,argv:s}=e,o=n,c=o,r=(a,l)=>{let u=a(l),p=g(c);p.addInstruction(async()=>{let{skip:f}=l,m=p.getContext(o);if(f?.(m,s))return;let d=await u(m,s);!d||!d.key||p.addValue(d.key,d.value)})},i={command(a){return c=T(a,e),this},input(a){return r(E,a),this},option(a){return r(N(g(c),e),a),this},task(a){return r(R,a),this}};return i.command({name:n,description:t}),i},te=({onException:e=()=>{},onShutdown:n=()=>{}})=>{process.on("SIGTERM",()=>{n(),process.exit(0)}),process.on("SIGINT",()=>{n(),process.exit(0)}),process.on("uncaughtException",t=>{e(t),process.exit(1)}),process.on("unhandledRejection",t=>{t instanceof Error&&e(t),process.exit(1)})},ne=e=>e!==null&&typeof e=="object";var Ee={exec:V,format:y,message:O};export{Ee as helpers,Z as termost};
 //# sourceMappingURL=index.mjs.map
diff --git a/node_modules/termost/dist/index.mjs.map b/node_modules/termost/dist/index.mjs.map
index bfe0ab9..9901423 100644
--- a/node_modules/termost/dist/index.mjs.map
+++ b/node_modules/termost/dist/index.mjs.map
@@ -1,7 +1,7 @@
 {
   "version": 3,
-  "sources": ["../src/helpers/process/index.ts", "../src/helpers/stdout/index.ts", "../src/helpers/package/index.ts", "../src/helpers/stdin/index.ts", "../src/api/command/controller/queue.ts", "../src/api/command/controller/index.ts", "../src/api/command/command.ts", "../src/api/input/index.ts", "../src/api/option/index.ts", "../src/api/task/index.ts", "../src/termost.ts", "../src/index.ts"],
-  "sourcesContent": ["import { spawn } from \"child_process\";\n\nexport const exec = async (\n\tcommand: string,\n\toptions: ExecOptions = { hasLiveOutput: false },\n) => {\n\treturn new Promise<string>((resolve, reject) => {\n\t\tlet stdout = \"\";\n\t\tlet stderr = \"\";\n\t\tconst [bin, ...args] = command.split(\" \") as [string, ...string[]];\n\n\t\tconst childProcess = spawn(bin, args, {\n\t\t\tcwd: options.cwd,\n\t\t\tshell: true,\n\t\t\tstdio: options.hasLiveOutput ? \"inherit\" : \"pipe\",\n\t\t\tenv: {\n\t\t\t\t...process.env,\n\t\t\t\t// @note: make sure to force color display for spawned processes\n\t\t\t\tFORCE_COLOR: \"1\",\n\t\t\t},\n\t\t});\n\n\t\tchildProcess.stdout?.on(\"data\", (chunk) => {\n\t\t\tstdout += chunk;\n\t\t});\n\n\t\tchildProcess.stderr?.on(\"data\", (chunk) => {\n\t\t\tstderr += chunk;\n\t\t});\n\n\t\tchildProcess.on(\"close\", (exitCode) => {\n\t\t\tif (exitCode !== 0) {\n\t\t\t\tconst output = `${stderr}${stdout}`;\n\n\t\t\t\treject(output.trim());\n\t\t\t} else {\n\t\t\t\tresolve(stdout.trim());\n\t\t\t}\n\t\t});\n\t});\n};\n\ntype ExecOptions = {\n\tcwd?: string;\n\thasLiveOutput?: boolean;\n};\n", "import pico from \"picocolors\";\n\n/**\n * A helper to format an arbitrary text as a message input\n * @param message The text to display\n * @param options The configuration object to control the formatting properties\n * @returns The formatted text\n */\nexport const format = (\n\tmessage: string,\n\t{\n\t\tcolor,\n\t\tmodifiers,\n\t}: {\n\t\tcolor?: Color;\n\t\tmodifiers?: Modifier[];\n\t} = {\n\t\tcolor: \"white\",\n\t\tmodifiers: [],\n\t},\n) => {\n\tconst transformers: ((input: string) => string)[] = [];\n\n\ttransformers.push(pico[colorMapper[color ?? \"white\"]]);\n\n\t(modifiers ?? []).forEach((mod: Modifier) => {\n\t\tif (mod === \"uppercase\") {\n\t\t\tmessage = message.toUpperCase();\n\t\t} else if (mod === \"lowercase\") {\n\t\t\tmessage = message.toLowerCase();\n\t\t} else {\n\t\t\ttransformers.push(pico[modifierMapper[mod]]);\n\t\t}\n\t});\n\n\treturn compose(...transformers)(message);\n};\n\nconst compose = <T>(...fns: ((a: T) => T)[]) =>\n\tfns.reduce(\n\t\t(prevFn, nextFn) => (value) => prevFn(nextFn(value)),\n\t\tfns[0] as (a: T) => T,\n\t);\n\n/**\n * An opinionated helper to display arbitrary text on the console\n * @param message The text to display. Use an array if you need to display a message in several lines\n * @param options The configuration object to define the display type and/or override the default label\n */\nexport const message = (\n\tcontent: string[] | string,\n\t{\n\t\tlabel,\n\t\ttype = \"information\",\n\t}: { type?: MessageType; label?: string } = {},\n) => {\n\tconst { color, defaultLabel, icon, method } = formatPropertiesByType[type];\n\tconst messages = typeof content === \"string\" ? [content] : content;\n\n\tmethod(\n\t\tformat(`\\n${icon} ${label ?? defaultLabel}`, {\n\t\t\tcolor,\n\t\t\tmodifiers: [\"bold\"],\n\t\t}),\n\t);\n\n\tfor (const msg of messages) {\n\t\tmethod(format(`   ${msg}`, { color }));\n\t}\n};\n\nconst formatPropertiesByType = {\n\terror: {\n\t\tcolor: \"red\",\n\t\tdefaultLabel: \"Error\",\n\t\ticon: \"\u274C\",\n\t\tmethod: console.error,\n\t},\n\tinformation: {\n\t\tcolor: \"blue\",\n\t\tdefaultLabel: \"Information\",\n\t\ticon: \"\u2139\uFE0F \",\n\t\tmethod: console.info,\n\t},\n\tsuccess: {\n\t\tcolor: \"green\",\n\t\tdefaultLabel: \"Success\",\n\t\ticon: \"\u2705\",\n\t\tmethod: console.log,\n\t},\n\twarning: {\n\t\tcolor: \"yellow\",\n\t\tdefaultLabel: \"Warning\",\n\t\ticon: \"\u26A0\uFE0F \",\n\t\tmethod: console.warn,\n\t},\n} as const;\n\nconst colorMapper = {\n\tblack: \"black\",\n\tblue: \"blue\",\n\tcyan: \"cyan\",\n\tgreen: \"green\",\n\tgrey: \"gray\",\n\tmagenta: \"magenta\",\n\tred: \"red\",\n\twhite: \"white\",\n\tyellow: \"yellow\",\n} as const;\n\nconst modifierMapper = {\n\tbold: \"bold\",\n\titalic: \"italic\",\n\tstrikethrough: \"strikethrough\",\n\tunderline: \"underline\",\n} as const;\n\ntype MessageType = \"error\" | \"information\" | \"success\" | \"warning\";\n\ntype Color =\n\t| \"black\"\n\t| \"blue\"\n\t| \"cyan\"\n\t| \"green\"\n\t| \"grey\"\n\t| \"magenta\"\n\t| \"red\"\n\t| \"white\"\n\t| \"yellow\";\n\ntype Modifier =\n\t| \"bold\"\n\t| \"italic\"\n\t| \"lowercase\"\n\t| \"strikethrough\"\n\t| \"underline\"\n\t| \"uppercase\";\n", "import fs from \"fs\";\nimport path from \"path\";\n\nimport type { PackageMetadata } from \"../../types\";\n\nexport const findNearestPackageJson = (pathname: string): PackageMetadata => {\n\tconst packagePathname = path.resolve(pathname, \"package.json\");\n\n\tif (isFileExists(packagePathname)) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-var-requires\n\t\treturn require(packagePathname) as PackageMetadata;\n\t}\n\n\treturn findNearestPackageJson(path.resolve(pathname, \"..\"));\n};\n\nconst isFileExists = (pathname: string) => {\n\ttry {\n\t\tfs.accessSync(pathname, fs.constants.F_OK);\n\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const getPackageMetadata = () => {\n\tconst mainFilename = require.main?.filename;\n\n\tif (!mainFilename) {\n\t\tthrow new Error(\n\t\t\t\"Termost was unable to retrieve automatically the package name and version. To fix it, use `termost({ name, description, version })` to define them manually.\",\n\t\t);\n\t}\n\n\treturn findNearestPackageJson(path.dirname(mainFilename));\n};\n", "// eslint-disable-next-line sonarjs/cognitive-complexity\nexport const getArguments = () => {\n\tconst parameters = process.argv.slice(2);\n\tlet command: string | undefined;\n\tconst operands: string[] = [];\n\tconst options: Record<string, boolean | number | string> = {};\n\tlet currentOptionName: string | undefined;\n\n\tconst addOptimisticOption = (name: string, value?: boolean | string) => {\n\t\tif (value) {\n\t\t\toptions[name] = typeof value === \"string\" ? castValue(value) : true;\n\t\t} else {\n\t\t\tcurrentOptionName = name;\n\t\t}\n\t};\n\n\tconst flushOptimisticOption = () => {\n\t\tif (currentOptionName) {\n\t\t\toptions[currentOptionName] = true;\n\t\t\tcurrentOptionName = undefined;\n\t\t}\n\t};\n\n\tfor (const parameter of parameters) {\n\t\tconst shortFlagMatchResult = SHORT_FLAG_REGEX.exec(parameter)?.groups;\n\t\tconst longFlagMatchResult = LONG_FLAG_REGEX.exec(parameter)?.groups;\n\n\t\tif (shortFlagMatchResult?.name) {\n\t\t\tflushOptimisticOption();\n\n\t\t\tconst optionFlags = shortFlagMatchResult.name.split(\"\");\n\t\t\tconst lastIndex = optionFlags.length - 1;\n\n\t\t\toptionFlags.forEach((flag, index) => {\n\t\t\t\taddOptimisticOption(\n\t\t\t\t\tflag,\n\t\t\t\t\tlastIndex === index ? undefined : true,\n\t\t\t\t);\n\t\t\t});\n\t\t} else if (longFlagMatchResult?.name) {\n\t\t\tflushOptimisticOption();\n\t\t\taddOptimisticOption(\n\t\t\t\tlongFlagMatchResult.name,\n\t\t\t\tlongFlagMatchResult.value,\n\t\t\t);\n\t\t} else if (currentOptionName) {\n\t\t\toptions[currentOptionName] = castValue(parameter);\n\t\t\tcurrentOptionName = undefined;\n\t\t} else if (!command) {\n\t\t\tcommand = parameter;\n\t\t} else {\n\t\t\toperands.push(parameter);\n\t\t}\n\t}\n\n\tflushOptimisticOption();\n\n\treturn { command, operands, options };\n};\n\nconst SHORT_FLAG_REGEX = /^-(?<name>(?!-).*)$/;\nconst LONG_FLAG_REGEX = /^--(?<name>.*?)(?:=(?<value>.+))?$/;\n\nconst castValue = (value: string) => {\n\ttry {\n\t\treturn JSON.parse(value) as boolean | number | string;\n\t} catch {\n\t\treturn value;\n\t}\n};\n", "export const createQueue = <Item>() => {\n\tconst items: Item[] = [];\n\n\treturn {\n\t\tenqueue(item: Item) {\n\t\t\titems.push(item);\n\t\t},\n\t\tdequeue() {\n\t\t\treturn items.shift();\n\t\t},\n\t\tisEmpty() {\n\t\t\treturn items.length === 0;\n\t\t},\n\t};\n};\n", "import type {\n\tCommandName,\n\tContext,\n\tEmptyObject,\n\tObjectLikeConstraint,\n} from \"../../../types\";\n\nimport { createQueue } from \"./queue\";\n\nexport type CommandController<\n\tValues extends ObjectLikeConstraint = EmptyObject,\n> = {\n\taddValue: <Key extends keyof Values>(key: Key, value: Values[Key]) => void;\n\taddOptionDescription: (key: string, description: string) => void;\n\taddInstruction: (instruction: Instruction) => void;\n\t/**\n\t * Enables a command by iterating over instructions and executing them\n\t */\n\tenable: () => Promise<void>;\n\tgetContext: (rootCommandName: CommandName) => Context<Values>;\n\tgetMetadata: (rootCommandName: CommandName) => CommandMetadata;\n};\n\nexport const getCommandController = <Values extends ObjectLikeConstraint>(\n\tname: CommandName,\n) => {\n\tconst controller = commandControllerCollection[name];\n\n\tif (!controller) {\n\t\tthrow new Error(\n\t\t\t`No controller has been set for the \\`${name}\\` command.\\nHave you run the \\`termost\\` constructor?`,\n\t\t);\n\t}\n\n\treturn controller as CommandController<Values>;\n};\n\nexport const createCommandController = <Values extends ObjectLikeConstraint>(\n\tname: CommandName,\n\tdescription: CommandMetadata[\"description\"],\n) => {\n\tconst instructions = createQueue<Instruction>();\n\t// eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n\tlet context = {} as Context<Values>;\n\n\tconst metadata: CommandMetadata = {\n\t\tdescription,\n\t\toptions: {\n\t\t\t\"-h, --help\": \"Display the help center\",\n\t\t\t\"-v, --version\": \"Print the version\",\n\t\t},\n\t};\n\n\tconst controller: CommandController<Values> = {\n\t\taddOptionDescription(key, value) {\n\t\t\tmetadata.options[key] = value;\n\t\t},\n\t\taddValue(key, value) {\n\t\t\tcontext[key] = value;\n\t\t},\n\t\taddInstruction(instruction) {\n\t\t\tinstructions.enqueue(instruction);\n\t\t},\n\t\tasync enable() {\n\t\t\twhile (!instructions.isEmpty()) {\n\t\t\t\tconst task = instructions.dequeue();\n\n\t\t\t\tif (task) {\n\t\t\t\t\tawait task();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetContext(rootCommandName) {\n\t\t\t// @note: By design, global values are accessible to subcommands\n\t\t\t// Consequently, root command values are merged with the current command ones:\n\t\t\tif (name !== rootCommandName) {\n\t\t\t\tconst rootController = getCommandController(rootCommandName);\n\n\t\t\t\tconst globalContext =\n\t\t\t\t\trootController.getContext(rootCommandName);\n\n\t\t\t\tcontext = {\n\t\t\t\t\t...globalContext,\n\t\t\t\t\t...context,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn context;\n\t\t},\n\t\tgetMetadata(rootCommandName) {\n\t\t\tif (name !== rootCommandName) {\n\t\t\t\tconst globalMetadata =\n\t\t\t\t\tgetCommandController(rootCommandName).getMetadata(\n\t\t\t\t\t\trootCommandName,\n\t\t\t\t\t);\n\n\t\t\t\tmetadata.options = {\n\t\t\t\t\t...globalMetadata.options,\n\t\t\t\t\t...metadata.options,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn metadata;\n\t\t},\n\t};\n\n\tcommandDescriptionCollection[name] = description;\n\tcommandControllerCollection[name] = controller;\n\n\treturn controller;\n};\n\nexport const getCommandDescriptionCollection = () => {\n\treturn commandDescriptionCollection;\n};\n\ntype CommandMetadata = {\n\tdescription: string;\n\toptions: Record<string, string>;\n};\n\ntype Instruction = () => Promise<void>;\n\nconst commandControllerCollection: Record<\n\tCommandName,\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tCommandController<any>\n> = {};\n\nconst commandDescriptionCollection: Record<\n\tCommandName,\n\tCommandMetadata[\"description\"]\n> = {};\n", "/* eslint-disable sonarjs/cognitive-complexity */\nimport { format } from \"../../helpers/stdout\";\nimport type { ObjectLikeConstraint, ProgramMetadata } from \"../../types\";\n\nimport type { CommandController } from \"./controller\";\nimport {\n\tcreateCommandController,\n\tgetCommandController,\n\tgetCommandDescriptionCollection,\n} from \"./controller\";\n\nexport type CommandParameters = {\n\tname: string;\n\tdescription: string;\n};\n\nexport const createCommand = <Values extends ObjectLikeConstraint>(\n\t{ name, description }: CommandParameters,\n\t{ argv, name: rootCommandName, version }: ProgramMetadata,\n) => {\n\tconst isRootCommand = name === rootCommandName;\n\tconst isActiveCommand = argv.command === name;\n\tconst controller = createCommandController<Values>(name, description);\n\tconst rootController = getCommandController(rootCommandName);\n\n\tsetTimeout(() => {\n\t\t// @note: By design, the root command instructions are always executed\n\t\t// even with subcommands (to share options, messages...)\n\t\tif (isRootCommand && !isActiveCommand) {\n\t\t\tvoid rootController.enable();\n\t\t}\n\n\t\t// @note: enable the current active command instructions:\n\t\tif (isActiveCommand) {\n\t\t\t// @note: setTimeout 0 allows to run activation logic in the next event loop iteration.\n\t\t\t// It'll allow to make sure that the `metadata` is correctly filled with all commands\n\t\t\t// metadata (especially to let the global help option to display all available commands):\n\t\t\tconst optionKeys = Object.keys(argv.options);\n\n\t\t\tif (\n\t\t\t\toptionKeys.includes(OPTION_HELP_NAMES[0]) ||\n\t\t\t\toptionKeys.includes(OPTION_HELP_NAMES[1])\n\t\t\t) {\n\t\t\t\tshowHelp({\n\t\t\t\t\tcontroller,\n\t\t\t\t\tcurrentCommandName: name,\n\t\t\t\t\tisRootCommand,\n\t\t\t\t\trootCommandName,\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\toptionKeys.includes(OPTION_VERSION_NAMES[0]) ||\n\t\t\t\toptionKeys.includes(OPTION_VERSION_NAMES[1])\n\t\t\t) {\n\t\t\t\tconsole.info(version);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvoid controller.enable();\n\t\t}\n\t}, 0);\n\n\treturn name;\n};\n\nconst OPTION_HELP_NAMES = [\"help\", \"h\"] as const;\nconst OPTION_VERSION_NAMES = [\"version\", \"v\"] as const;\n\nconst showHelp = ({\n\trootCommandName,\n\tcurrentCommandName,\n\tisRootCommand,\n\tcontroller,\n}: {\n\trootCommandName: string;\n\tcurrentCommandName: string;\n\tisRootCommand: boolean;\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tcontroller: CommandController<any>;\n}) => {\n\tconst commandMetadata = controller.getMetadata(rootCommandName);\n\tconst { options, description } = commandMetadata;\n\tconst commands = getCommandDescriptionCollection();\n\tconst optionKeys = Object.keys(commandMetadata.options);\n\tconst commandKeys = Object.keys(commands);\n\tconst hasOptions = optionKeys.length > 0;\n\tconst hasCommands = isRootCommand && commandKeys.length > 1;\n\n\tprintTitle(\"Usage\");\n\tprint(\n\t\t`${format(\n\t\t\t`${rootCommandName}${\n\t\t\t\tisRootCommand ? \"\" : ` ${String(currentCommandName)}`\n\t\t\t}`,\n\t\t\t{\n\t\t\t\tcolor: \"green\",\n\t\t\t},\n\t\t)} ${hasCommands ? \"<command> \" : \"\"}${\n\t\t\thasOptions ? \"[...options]\" : \"\"\n\t\t}`,\n\t);\n\n\tif (description) {\n\t\tprintTitle(\"Description\");\n\t\tprint(description);\n\t}\n\n\tconst padding = [...commandKeys, ...optionKeys].reduce((value, item) => {\n\t\treturn Math.max(value, item.length);\n\t}, 0);\n\n\tif (hasCommands) {\n\t\tprintTitle(\"Commands\");\n\n\t\tfor (const name of commandKeys) {\n\t\t\tif (name === rootCommandName) continue;\n\n\t\t\tconst commandDescription = commands[name];\n\n\t\t\tif (commandDescription)\n\t\t\t\tprintLabelValue(name, commandDescription, padding);\n\t\t}\n\t}\n\n\tif (hasOptions) {\n\t\tprintTitle(\"Options\");\n\n\t\tfor (const key of optionKeys) {\n\t\t\tprintLabelValue(key, options[key] as string, padding);\n\t\t}\n\t}\n};\n\nconst print = (...parameters: Parameters<typeof format>) => {\n\tconsole.log(format(...parameters));\n};\n\nconst printTitle = (message: string) => {\n\tprint(`\\n${message}:`, {\n\t\tcolor: \"yellow\",\n\t\tmodifiers: [\"bold\", \"underline\", \"uppercase\"],\n\t});\n};\n\nconst printLabelValue = (label: string, value: string, padding: number) => {\n\tprint(\n\t\t`  ${format(label.padEnd(padding + 1, \" \"), {\n\t\t\tcolor: \"green\",\n\t\t})} ${value}`,\n\t);\n};\n", "/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { prompt } from \"enquirer\";\n\nimport type {\n\tCreateInstruction,\n\tInstructionKey,\n\tInstructionParameters,\n\tLabel,\n\tObjectLikeConstraint,\n} from \"../../types\";\n\nexport const createInput: CreateInstruction<\n\tInputParameters<ObjectLikeConstraint, keyof ObjectLikeConstraint>\n> = (parameters) => {\n\tconst { key, defaultValue, label, type } = parameters;\n\n\treturn async function execute(context, argv) {\n\t\tconst promptObject: Parameters<typeof prompt>[0] & {\n\t\t\tchoices?: { title: string; value: string; selected?: boolean }[];\n\t\t} = {\n\t\t\tinitial: defaultValue,\n\t\t\tmessage: typeof label === \"function\" ? label(context, argv) : label,\n\t\t\tname: key,\n\t\t\ttype,\n\t\t};\n\n\t\tif (parameters.type === \"select\" || parameters.type === \"multiselect\") {\n\t\t\tconst isMultiSelect = parameters.type === \"multiselect\";\n\t\t\tconst options = parameters.options as string[];\n\n\t\t\tconst choices = options.map((option) => ({\n\t\t\t\ttitle: option,\n\t\t\t\tvalue: option,\n\t\t\t\t...(isMultiSelect && {\n\t\t\t\t\tselected: ((defaultValue || []) as string[]).includes(\n\t\t\t\t\t\toption,\n\t\t\t\t\t),\n\t\t\t\t}),\n\t\t\t}));\n\n\t\t\tpromptObject.choices = choices;\n\t\t}\n\n\t\tconst data = await prompt<ObjectLikeConstraint>(promptObject);\n\n\t\treturn { key, value: data[key] };\n\t};\n};\n\nexport type InputParameters<\n\tValues extends ObjectLikeConstraint,\n\tKey extends keyof Values,\n> = InstructionParameters<\n\tValues,\n\tInstructionKey<Key> &\n\t\t(\n\t\t\t| {\n\t\t\t\t\ttype: \"confirm\";\n\t\t\t\t\tlabel: Label<Values>;\n\t\t\t\t\tdefaultValue?: Values[Key] extends boolean\n\t\t\t\t\t\t? Values[Key]\n\t\t\t\t\t\t: never;\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\ttype: \"multiselect\";\n\t\t\t\t\tlabel: Label<Values>;\n\t\t\t\t\toptions: Values[Key] extends string[] ? Values[Key] : never;\n\t\t\t\t\tdefaultValue?: Values[Key] extends string[]\n\t\t\t\t\t\t? Values[Key]\n\t\t\t\t\t\t: never;\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\ttype: \"select\";\n\t\t\t\t\tlabel: Label<Values>;\n\t\t\t\t\toptions: Values[Key] extends string ? Values[Key][] : never;\n\t\t\t\t\tdefaultValue?: Values[Key] extends string\n\t\t\t\t\t\t? Values[Key]\n\t\t\t\t\t\t: never;\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\ttype: \"text\";\n\t\t\t\t\tlabel: Label<Values>;\n\t\t\t\t\tdefaultValue?: Values[Key] extends string\n\t\t\t\t\t\t? Values[Key]\n\t\t\t\t\t\t: never;\n\t\t\t  }\n\t\t)\n>;\n", "/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport type { CommandController } from \"../command\";\nimport type {\n\tCreateInstruction,\n\tInstructionKey,\n\tInstructionParameters,\n\tObjectLikeConstraint,\n\tProgramMetadata,\n} from \"../../types\";\n\nexport const createOption =\n\t(\n\t\tcommandController: CommandController,\n\t\t{ argv }: ProgramMetadata,\n\t): CreateInstruction<\n\t\tOptionParameters<ObjectLikeConstraint, keyof ObjectLikeConstraint>\n\t> =>\n\t(parameters) => {\n\t\tconst { key, name, description, defaultValue } = parameters;\n\n\t\tconst aliases =\n\t\t\ttypeof name === \"string\" ? [name] : [name.short, name.long];\n\n\t\tconst metadataKey = aliases\n\t\t\t.map(\n\t\t\t\t(alias, index) =>\n\t\t\t\t\t\"-\".repeat(aliases.length > 1 ? index + 1 : 2) + alias,\n\t\t\t)\n\t\t\t.join(\", \");\n\n\t\tcommandController.addOptionDescription(metadataKey, description);\n\n\t\treturn async function execute() {\n\t\t\tlet value: unknown;\n\n\t\t\tfor (const alias of aliases) {\n\t\t\t\tif (alias in argv.options) {\n\t\t\t\t\tvalue = argv.options[alias];\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Promise.resolve({ key, value: value ?? defaultValue });\n\t\t};\n\t};\n\nexport type OptionParameters<\n\tValues extends ObjectLikeConstraint,\n\tKey extends keyof Values,\n> = InstructionParameters<\n\tValues,\n\tInstructionKey<Key> & {\n\t\tname: string | { long: string; short: string };\n\t\tdescription: string;\n\t\tdefaultValue?: Values[Key];\n\t}\n>;\n", "import { Listr, PRESET_TIMER } from \"listr2\";\n\nimport type {\n\tArgumentValues,\n\tContext,\n\tCreateInstruction,\n\tInstructionKey,\n\tInstructionParameters,\n\tLabel,\n\tObjectLikeConstraint,\n} from \"../../types\";\n\nexport const createTask: CreateInstruction<\n\tTaskParameters<ObjectLikeConstraint, keyof ObjectLikeConstraint>\n> = (parameters) => {\n\tconst { key, label, handler } = parameters;\n\n\tconst receiver = label\n\t\t? new Listr([], {\n\t\t\t\trendererOptions: {\n\t\t\t\t\tcollapseErrors: false,\n\t\t\t\t\tformatOutput: \"wrap\",\n\t\t\t\t\tshowErrorMessage: true,\n\t\t\t\t\ttimer: PRESET_TIMER,\n\t\t\t\t},\n\t\t  })\n\t\t: null;\n\n\treturn async function execute(context, argv) {\n\t\tlet value: unknown;\n\n\t\tif (!receiver) {\n\t\t\tvalue = await handler(context, argv);\n\t\t} else {\n\t\t\treceiver.add({\n\t\t\t\t...(label && {\n\t\t\t\t\ttitle:\n\t\t\t\t\t\ttypeof label === \"function\"\n\t\t\t\t\t\t\t? label(context, argv)\n\t\t\t\t\t\t\t: label,\n\t\t\t\t}),\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\t\t\t\ttask: async () => (value = await handler(context, argv)),\n\t\t\t});\n\n\t\t\tawait receiver.run();\n\t\t}\n\n\t\treturn { key, value };\n\t};\n};\n\nexport type TaskParameters<\n\tValues extends ObjectLikeConstraint,\n\tKey extends keyof Values | undefined = undefined,\n> = InstructionParameters<\n\tValues,\n\tPartial<InstructionKey<Key>> & {\n\t\tlabel?: Label<Values>;\n\t\thandler: (\n\t\t\tcontext: Context<Values>,\n\t\t\targv: ArgumentValues,\n\t\t) => Key extends keyof Values\n\t\t\t? Promise<Values[Key]> | Values[Key]\n\t\t\t: Promise<void> | void;\n\t}\n>;\n", "import { getPackageMetadata } from \"./helpers/package\";\nimport { getArguments } from \"./helpers/stdin\";\nimport type {\n\tCommandName,\n\tCreateInstruction,\n\tEmptyObject,\n\tInstructionParameters,\n\tObjectLikeConstraint,\n\tPackageMetadata,\n\tProgramMetadata,\n} from \"./types\";\nimport type { CommandParameters } from \"./api/command\";\nimport { createCommand, getCommandController } from \"./api/command\";\nimport type { InputParameters } from \"./api/input\";\nimport { createInput } from \"./api/input\";\nimport type { OptionParameters } from \"./api/option\";\nimport { createOption } from \"./api/option\";\nimport type { TaskParameters } from \"./api/task\";\nimport { createTask } from \"./api/task\";\n\n/**\n * The termost fluent interface API\n */\nexport type Termost<Values extends ObjectLikeConstraint = EmptyObject> = {\n\t/**\n\t * Allows to attach a new sub-command to the program\n\t * @param name - The CLI command name\n\t * @param description - The CLI command description\n\t * @returns The Command API\n\t */\n\tcommand: <CommandValues extends ObjectLikeConstraint = EmptyObject>(\n\t\tparams: CommandParameters,\n\t) => Termost<CommandValues & Values>;\n\tinput: <Key extends keyof Values>(\n\t\tparams: InputParameters<Values, Key>,\n\t) => Termost<Values>;\n\toption: <Key extends keyof Values>(\n\t\tparams: OptionParameters<Values, Key>,\n\t) => Termost<Values>;\n\ttask: <Key extends keyof Values | undefined = undefined>(\n\t\tparams: TaskParameters<Values, Key>,\n\t) => Termost<Values>;\n};\n\nexport function termost<Values extends ObjectLikeConstraint = EmptyObject>(\n\tmetadata: Partial<PackageMetadata> | string,\n\tcallbacks: TerminationCallbacks = {},\n) {\n\tconst paramsMetadata: Partial<PackageMetadata> = isObject(metadata)\n\t\t? metadata\n\t\t: { description: metadata };\n\n\tconst packageMetadata = getPackageMetadata();\n\tconst programName = paramsMetadata.name ?? packageMetadata.name;\n\tconst { command = programName, options, operands } = getArguments();\n\n\tsetGracefulListeners(callbacks);\n\n\treturn createProgram<Values>({\n\t\targv: { command, options, operands },\n\t\tdescription: paramsMetadata.description ?? packageMetadata.description,\n\t\tname: programName,\n\t\tversion: paramsMetadata.version ?? packageMetadata.version,\n\t});\n}\n\nexport const createProgram = <Values extends ObjectLikeConstraint>(\n\tmetadata: ProgramMetadata,\n): Termost<Values> => {\n\tconst { argv, name, description } = metadata;\n\tconst rootCommandName: CommandName = name;\n\tlet currentCommandName: CommandName = rootCommandName;\n\n\tconst createInstruction = <\n\t\tParameters extends InstructionParameters<ObjectLikeConstraint>,\n\t>(\n\t\tfactory: CreateInstruction<Parameters>,\n\t\tparams: InstructionParameters<Values>,\n\t) => {\n\t\tconst instruction = factory(params as Parameters);\n\t\tconst controller = getCommandController<Values>(currentCommandName);\n\n\t\tcontroller.addInstruction(async () => {\n\t\t\tconst { skip } = params;\n\t\t\tconst context = controller.getContext(rootCommandName);\n\n\t\t\tif (skip?.(context, argv)) return;\n\n\t\t\tconst output = await instruction(context, argv);\n\n\t\t\tif (!output || !output.key) return;\n\n\t\t\tcontroller.addValue(\n\t\t\t\toutput.key,\n\t\t\t\toutput.value as Values[keyof Values],\n\t\t\t);\n\t\t});\n\t};\n\n\tconst program: Termost<Values> = {\n\t\tcommand<CommandValues>(params: CommandParameters) {\n\t\t\tcurrentCommandName = createCommand(params, metadata);\n\n\t\t\treturn this as Termost<CommandValues & Values>;\n\t\t},\n\t\tinput(params) {\n\t\t\tcreateInstruction(createInput, params);\n\n\t\t\treturn this;\n\t\t},\n\t\toption(params) {\n\t\t\tcreateInstruction(\n\t\t\t\tcreateOption(\n\t\t\t\t\tgetCommandController(currentCommandName),\n\t\t\t\t\tmetadata,\n\t\t\t\t),\n\t\t\t\tparams,\n\t\t\t);\n\n\t\t\treturn this;\n\t\t},\n\t\ttask(params) {\n\t\t\tcreateInstruction(createTask, params);\n\n\t\t\treturn this;\n\t\t},\n\t};\n\n\t// @note: the root command is created by default\n\tprogram.command({\n\t\tname,\n\t\tdescription,\n\t});\n\n\treturn program;\n};\n\ntype TerminationCallbacks = Partial<{\n\tonShutdown: () => void;\n\tonException: (error: Error) => void;\n}>;\n\nconst setGracefulListeners = ({\n\tonShutdown = () => {\n\t\treturn;\n\t},\n\tonException = () => {\n\t\treturn;\n\t},\n}: TerminationCallbacks) => {\n\tprocess.on(\"SIGTERM\", () => {\n\t\tonShutdown();\n\t\tprocess.exit(0);\n\t});\n\n\tprocess.on(\"SIGINT\", () => {\n\t\tonShutdown();\n\t\tprocess.exit(0);\n\t});\n\n\tprocess.on(\"uncaughtException\", (error) => {\n\t\tonException(error);\n\t\tprocess.exit(1);\n\t});\n\n\tprocess.on(\"unhandledRejection\", (reason) => {\n\t\tif (reason instanceof Error) {\n\t\t\tonException(reason);\n\t\t}\n\n\t\tprocess.exit(1);\n\t});\n};\n\nconst isObject = (value: unknown): value is ObjectLikeConstraint => {\n\treturn value !== null && typeof value === \"object\";\n};\n", "import { exec } from \"./helpers/process\";\nimport { format, message } from \"./helpers/stdout\";\n\nexport { termost } from \"./termost\";\nexport type { Termost } from \"./termost\";\nexport const helpers = {\n\texec,\n\tformat,\n\tmessage,\n};\n"],
-  "mappings": "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",
-  "names": ["spawn", "exec", "command", "options", "resolve", "reject", "stdout", "stderr", "bin", "args", "childProcess", "chunk", "exitCode", "output", "pico", "format", "message", "color", "modifiers", "transformers", "colorMapper", "mod", "modifierMapper", "compose", "fns", "prevFn", "nextFn", "value", "content", "label", "type", "defaultLabel", "icon", "method", "formatPropertiesByType", "messages", "msg", "fs", "path", "findNearestPackageJson", "pathname", "packagePathname", "path", "isFileExists", "__require", "fs", "getPackageMetadata", "mainFilename", "getArguments", "parameters", "command", "operands", "options", "currentOptionName", "addOptimisticOption", "name", "value", "castValue", "flushOptimisticOption", "parameter", "shortFlagMatchResult", "SHORT_FLAG_REGEX", "longFlagMatchResult", "LONG_FLAG_REGEX", "optionFlags", "lastIndex", "flag", "index", "createQueue", "items", "item", "getCommandController", "name", "controller", "commandControllerCollection", "createCommandController", "description", "instructions", "createQueue", "context", "metadata", "key", "value", "instruction", "task", "rootCommandName", "globalMetadata", "commandDescriptionCollection", "getCommandDescriptionCollection", "createCommand", "name", "description", "argv", "rootCommandName", "version", "isRootCommand", "isActiveCommand", "controller", "createCommandController", "rootController", "getCommandController", "optionKeys", "OPTION_HELP_NAMES", "showHelp", "OPTION_VERSION_NAMES", "currentCommandName", "commandMetadata", "options", "commands", "getCommandDescriptionCollection", "commandKeys", "hasOptions", "hasCommands", "printTitle", "print", "format", "padding", "value", "item", "commandDescription", "printLabelValue", "key", "parameters", "message", "label", "prompt", "createInput", "parameters", "key", "defaultValue", "label", "type", "context", "argv", "promptObject", "isMultiSelect", "choices", "option", "data", "createOption", "commandController", "argv", "parameters", "key", "name", "description", "defaultValue", "aliases", "metadataKey", "alias", "index", "value", "Listr", "PRESET_TIMER", "createTask", "parameters", "key", "label", "handler", "receiver", "context", "argv", "value", "termost", "metadata", "callbacks", "paramsMetadata", "isObject", "packageMetadata", "getPackageMetadata", "programName", "command", "options", "operands", "getArguments", "setGracefulListeners", "createProgram", "argv", "name", "description", "rootCommandName", "currentCommandName", "createInstruction", "factory", "params", "instruction", "controller", "getCommandController", "skip", "context", "output", "program", "createCommand", "createInput", "createOption", "createTask", "onShutdown", "onException", "error", "reason", "value", "helpers", "exec", "format", "message"]
+  "sources": ["../src/helpers/process/index.ts", "../src/helpers/stdout/index.ts", "../src/api/command/controller/queue.ts", "../src/api/command/controller/index.ts", "../src/api/command/command.ts", "../src/api/input/index.ts", "../src/api/option/index.ts", "../src/api/task/index.ts", "../src/helpers/package/index.ts", "../src/helpers/stdin/index.ts", "../src/termost.ts", "../src/index.ts"],
+  "sourcesContent": ["import { spawn } from \"child_process\";\n\nexport const exec = async (\n\tcommand: string,\n\toptions: ExecOptions = { hasLiveOutput: false },\n) => {\n\treturn new Promise<string>((resolve, reject) => {\n\t\tlet stdout = \"\";\n\t\tlet stderr = \"\";\n\t\tconst [bin, ...args] = command.split(\" \") as [string, ...string[]];\n\n\t\tconst childProcess = spawn(bin, args, {\n\t\t\tcwd: options.cwd,\n\t\t\tenv: {\n\t\t\t\t...process.env,\n\t\t\t\t// @note: make sure to force color display for spawned processes\n\t\t\t\tFORCE_COLOR: \"1\",\n\t\t\t},\n\t\t\tshell: true,\n\t\t\tstdio: options.hasLiveOutput ? \"inherit\" : \"pipe\",\n\t\t});\n\n\t\tchildProcess.stdout?.on(\"data\", (chunk) => {\n\t\t\tstdout += chunk;\n\t\t});\n\n\t\tchildProcess.stderr?.on(\"data\", (chunk) => {\n\t\t\tstderr += chunk;\n\t\t});\n\n\t\tchildProcess.on(\"close\", (exitCode) => {\n\t\t\tif (exitCode !== 0) {\n\t\t\t\tconst output = `${stderr}${stdout}`;\n\n\t\t\t\treject(output.trim());\n\t\t\t} else {\n\t\t\t\tresolve(stdout.trim());\n\t\t\t}\n\t\t});\n\t});\n};\n\ntype ExecOptions = {\n\tcwd?: string;\n\thasLiveOutput?: boolean;\n};\n", "import pico from \"picocolors\";\n\n/**\n * A helper to format an arbitrary text as a message input\n * @param message The text to display\n * @param options The configuration object to control the formatting properties\n * @returns The formatted text\n */\nexport const format = (\n\tmessage: string,\n\t{\n\t\tcolor,\n\t\tmodifiers,\n\t}: {\n\t\tcolor?: Color;\n\t\tmodifiers?: Modifier[];\n\t} = {\n\t\tcolor: \"white\",\n\t\tmodifiers: [],\n\t},\n) => {\n\tconst transformers: ((input: string) => string)[] = [];\n\n\ttransformers.push(pico[colorMapper[color ?? \"white\"]]);\n\n\t(modifiers ?? []).forEach((mod: Modifier) => {\n\t\tif (mod === \"uppercase\") {\n\t\t\tmessage = message.toUpperCase();\n\t\t} else if (mod === \"lowercase\") {\n\t\t\tmessage = message.toLowerCase();\n\t\t} else {\n\t\t\ttransformers.push(pico[modifierMapper[mod]]);\n\t\t}\n\t});\n\n\treturn compose(...transformers)(message);\n};\n\nconst compose = <T>(...fns: ((a: T) => T)[]) =>\n\tfns.reduce(\n\t\t(prevFn, nextFn) => (value) => prevFn(nextFn(value)),\n\t\tfns[0] as (a: T) => T,\n\t);\n\n/**\n * An opinionated helper to display arbitrary text on the console\n * @param message The text to display. Use an array if you need to display a message in several lines\n * @param options The configuration object to define the display type and/or override the default label\n */\nexport const message = (\n\tcontent: string[] | string,\n\t{\n\t\tlabel,\n\t\ttype = \"information\",\n\t}: { label?: string; type?: MessageType } = {},\n) => {\n\tconst { color, defaultLabel, icon, method } = formatPropertiesByType[type];\n\tconst messages = typeof content === \"string\" ? [content] : content;\n\n\tmethod(\n\t\tformat(`\\n${icon} ${label ?? defaultLabel}`, {\n\t\t\tcolor,\n\t\t\tmodifiers: [\"bold\"],\n\t\t}),\n\t);\n\n\tfor (const msg of messages) {\n\t\tmethod(format(`   ${msg}`, { color }));\n\t}\n};\n\nconst formatPropertiesByType = {\n\terror: {\n\t\tcolor: \"red\",\n\t\tdefaultLabel: \"Error\",\n\t\ticon: \"\u274C\",\n\t\tmethod: console.error,\n\t},\n\tinformation: {\n\t\tcolor: \"blue\",\n\t\tdefaultLabel: \"Information\",\n\t\ticon: \"\u2139\uFE0F \",\n\t\tmethod: console.info,\n\t},\n\tsuccess: {\n\t\tcolor: \"green\",\n\t\tdefaultLabel: \"Success\",\n\t\ticon: \"\u2705\",\n\t\tmethod: console.log,\n\t},\n\twarning: {\n\t\tcolor: \"yellow\",\n\t\tdefaultLabel: \"Warning\",\n\t\ticon: \"\u26A0\uFE0F \",\n\t\tmethod: console.warn,\n\t},\n} as const;\n\nconst colorMapper = {\n\tblack: \"black\",\n\tblue: \"blue\",\n\tcyan: \"cyan\",\n\tgreen: \"green\",\n\tgrey: \"gray\",\n\tmagenta: \"magenta\",\n\tred: \"red\",\n\twhite: \"white\",\n\tyellow: \"yellow\",\n} as const;\n\nconst modifierMapper = {\n\tbold: \"bold\",\n\titalic: \"italic\",\n\tstrikethrough: \"strikethrough\",\n\tunderline: \"underline\",\n} as const;\n\ntype MessageType = \"error\" | \"information\" | \"success\" | \"warning\";\n\ntype Color =\n\t| \"black\"\n\t| \"blue\"\n\t| \"cyan\"\n\t| \"green\"\n\t| \"grey\"\n\t| \"magenta\"\n\t| \"red\"\n\t| \"white\"\n\t| \"yellow\";\n\ntype Modifier =\n\t| \"bold\"\n\t| \"italic\"\n\t| \"lowercase\"\n\t| \"strikethrough\"\n\t| \"underline\"\n\t| \"uppercase\";\n", "export const createQueue = <Item>() => {\n\tconst items: Item[] = [];\n\n\treturn {\n\t\tdequeue() {\n\t\t\treturn items.shift();\n\t\t},\n\t\tenqueue(item: Item) {\n\t\t\titems.push(item);\n\t\t},\n\t\tisEmpty() {\n\t\t\treturn items.length === 0;\n\t\t},\n\t};\n};\n", "import type {\n\tCommandName,\n\tContext,\n\tEmptyObject,\n\tObjectLikeConstraint,\n} from \"../../../types\";\n\nimport { createQueue } from \"./queue\";\n\nexport type CommandController<\n\tValues extends ObjectLikeConstraint = EmptyObject,\n> = {\n\taddInstruction: (instruction: Instruction) => void;\n\taddOptionDescription: (key: string, description: string) => void;\n\taddValue: <Key extends keyof Values>(key: Key, value: Values[Key]) => void;\n\t/**\n\t * Enables a command by iterating over instructions and executing them\n\t */\n\tenable: () => Promise<void>;\n\tgetContext: (rootCommandName: CommandName) => Context<Values>;\n\tgetMetadata: (rootCommandName: CommandName) => CommandMetadata;\n};\n\nexport const getCommandController = <Values extends ObjectLikeConstraint>(\n\tname: CommandName,\n) => {\n\tconst controller = commandControllerCollection[name];\n\n\tif (!controller) {\n\t\tthrow new Error(\n\t\t\t`No controller has been set for the \\`${name}\\` command.\\nHave you run the \\`termost\\` constructor?`,\n\t\t);\n\t}\n\n\treturn controller as CommandController<Values>;\n};\n\nexport const createCommandController = <Values extends ObjectLikeConstraint>(\n\tname: CommandName,\n\tdescription: CommandMetadata[\"description\"],\n) => {\n\tconst instructions = createQueue<Instruction>();\n\t// eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n\tlet context = {} as Context<Values>;\n\n\tconst metadata: CommandMetadata = {\n\t\tdescription,\n\t\toptions: {\n\t\t\t\"-h, --help\": \"Display the help center\",\n\t\t\t\"-v, --version\": \"Print the version\",\n\t\t},\n\t};\n\n\tconst controller: CommandController<Values> = {\n\t\taddInstruction(instruction) {\n\t\t\tinstructions.enqueue(instruction);\n\t\t},\n\t\taddOptionDescription(key, value) {\n\t\t\tmetadata.options[key] = value;\n\t\t},\n\t\taddValue(key, value) {\n\t\t\tcontext[key] = value;\n\t\t},\n\t\tasync enable() {\n\t\t\twhile (!instructions.isEmpty()) {\n\t\t\t\tconst task = instructions.dequeue();\n\n\t\t\t\tif (task) {\n\t\t\t\t\tawait task();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetContext(rootCommandName) {\n\t\t\t// @note: By design, global values are accessible to subcommands\n\t\t\t// Consequently, root command values are merged with the current command ones:\n\t\t\tif (name !== rootCommandName) {\n\t\t\t\tconst rootController = getCommandController(rootCommandName);\n\n\t\t\t\tconst globalContext =\n\t\t\t\t\trootController.getContext(rootCommandName);\n\n\t\t\t\tcontext = {\n\t\t\t\t\t...globalContext,\n\t\t\t\t\t...context,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn context;\n\t\t},\n\t\tgetMetadata(rootCommandName) {\n\t\t\tif (name !== rootCommandName) {\n\t\t\t\tconst globalMetadata =\n\t\t\t\t\tgetCommandController(rootCommandName).getMetadata(\n\t\t\t\t\t\trootCommandName,\n\t\t\t\t\t);\n\n\t\t\t\tmetadata.options = {\n\t\t\t\t\t...globalMetadata.options,\n\t\t\t\t\t...metadata.options,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn metadata;\n\t\t},\n\t};\n\n\tcommandDescriptionCollection[name] = description;\n\tcommandControllerCollection[name] = controller;\n\n\treturn controller;\n};\n\nexport const getCommandDescriptionCollection = () => {\n\treturn commandDescriptionCollection;\n};\n\ntype CommandMetadata = {\n\tdescription: string;\n\toptions: Record<string, string>;\n};\n\ntype Instruction = () => Promise<void>;\n\nconst commandControllerCollection: Record<\n\tCommandName,\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tCommandController<any>\n> = {};\n\nconst commandDescriptionCollection: Record<\n\tCommandName,\n\tCommandMetadata[\"description\"]\n> = {};\n", "/* eslint-disable sonarjs/cognitive-complexity */\nimport { format } from \"../../helpers/stdout\";\nimport type { ObjectLikeConstraint, ProgramMetadata } from \"../../types\";\n\nimport {\n\tcreateCommandController,\n\tgetCommandController,\n\tgetCommandDescriptionCollection,\n} from \"./controller\";\nimport type { CommandController } from \"./controller\";\n\nexport type CommandParameters = {\n\tname: string;\n\tdescription: string;\n};\n\nexport const createCommand = <Values extends ObjectLikeConstraint>(\n\t{ name, description }: CommandParameters,\n\t{ name: rootCommandName, argv, version }: ProgramMetadata,\n) => {\n\tconst isRootCommand = name === rootCommandName;\n\tconst isActiveCommand = argv.command === name;\n\tconst controller = createCommandController<Values>(name, description);\n\tconst rootController = getCommandController(rootCommandName);\n\n\tsetTimeout(() => {\n\t\t// @note: By design, the root command instructions are always executed\n\t\t// even with subcommands (to share options, messages...)\n\t\tif (isRootCommand && !isActiveCommand) {\n\t\t\tvoid rootController.enable();\n\t\t}\n\n\t\t// @note: enable the current active command instructions:\n\t\tif (isActiveCommand) {\n\t\t\t// @note: setTimeout 0 allows to run activation logic in the next event loop iteration.\n\t\t\t// It'll allow to make sure that the `metadata` is correctly filled with all commands\n\t\t\t// metadata (especially to let the global help option to display all available commands):\n\t\t\tconst optionKeys = Object.keys(argv.options);\n\n\t\t\tif (\n\t\t\t\toptionKeys.includes(OPTION_HELP_NAMES[0]) ||\n\t\t\t\toptionKeys.includes(OPTION_HELP_NAMES[1])\n\t\t\t) {\n\t\t\t\tshowHelp({\n\t\t\t\t\tcontroller,\n\t\t\t\t\tcurrentCommandName: name,\n\t\t\t\t\tisRootCommand,\n\t\t\t\t\trootCommandName,\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\toptionKeys.includes(OPTION_VERSION_NAMES[0]) ||\n\t\t\t\toptionKeys.includes(OPTION_VERSION_NAMES[1])\n\t\t\t) {\n\t\t\t\tconsole.info(version);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvoid controller.enable();\n\t\t}\n\t}, 0);\n\n\treturn name;\n};\n\nconst OPTION_HELP_NAMES = [\"help\", \"h\"] as const;\nconst OPTION_VERSION_NAMES = [\"version\", \"v\"] as const;\n\nconst showHelp = ({\n\tcontroller,\n\tcurrentCommandName,\n\tisRootCommand,\n\trootCommandName,\n}: {\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tcontroller: CommandController<any>;\n\tcurrentCommandName: string;\n\tisRootCommand: boolean;\n\trootCommandName: string;\n}) => {\n\tconst commandMetadata = controller.getMetadata(rootCommandName);\n\tconst { description, options } = commandMetadata;\n\tconst commands = getCommandDescriptionCollection();\n\tconst optionKeys = Object.keys(commandMetadata.options);\n\tconst commandKeys = Object.keys(commands);\n\tconst hasOptions = optionKeys.length > 0;\n\tconst hasCommands = isRootCommand && commandKeys.length > 1;\n\n\tprintTitle(\"Usage\");\n\tprint(\n\t\t`${format(\n\t\t\t`${rootCommandName}${\n\t\t\t\tisRootCommand ? \"\" : ` ${String(currentCommandName)}`\n\t\t\t}`,\n\t\t\t{\n\t\t\t\tcolor: \"green\",\n\t\t\t},\n\t\t)} ${hasCommands ? \"<command> \" : \"\"}${\n\t\t\thasOptions ? \"[...options]\" : \"\"\n\t\t}`,\n\t);\n\n\tif (description) {\n\t\tprintTitle(\"Description\");\n\t\tprint(description);\n\t}\n\n\tconst padding = [...commandKeys, ...optionKeys].reduce((value, item) => {\n\t\treturn Math.max(value, item.length);\n\t}, 0);\n\n\tif (hasCommands) {\n\t\tprintTitle(\"Commands\");\n\n\t\tfor (const name of commandKeys) {\n\t\t\tif (name === rootCommandName) continue;\n\n\t\t\tconst commandDescription = commands[name];\n\n\t\t\tif (commandDescription)\n\t\t\t\tprintLabelValue(name, commandDescription, padding);\n\t\t}\n\t}\n\n\tif (hasOptions) {\n\t\tprintTitle(\"Options\");\n\n\t\tfor (const key of optionKeys) {\n\t\t\tprintLabelValue(key, options[key] as string, padding);\n\t\t}\n\t}\n};\n\nconst print = (...parameters: Parameters<typeof format>) => {\n\tconsole.log(format(...parameters));\n};\n\nconst printTitle = (message: string) => {\n\tprint(`\\n${message}:`, {\n\t\tcolor: \"yellow\",\n\t\tmodifiers: [\"bold\", \"underline\", \"uppercase\"],\n\t});\n};\n\nconst printLabelValue = (label: string, value: string, padding: number) => {\n\tprint(\n\t\t`  ${format(label.padEnd(padding + 1, \" \"), {\n\t\t\tcolor: \"green\",\n\t\t})} ${value}`,\n\t);\n};\n", "/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { prompt } from \"enquirer\";\n\nimport type {\n\tCreateInstruction,\n\tInstructionKey,\n\tInstructionParameters,\n\tLabel,\n\tObjectLikeConstraint,\n} from \"../../types\";\n\nexport const createInput: CreateInstruction<\n\tInputParameters<ObjectLikeConstraint, keyof ObjectLikeConstraint>\n> = (parameters) => {\n\tconst { key, label, defaultValue, type } = parameters;\n\n\treturn async function execute(context, argv) {\n\t\tconst promptObject: Parameters<typeof prompt>[0] & {\n\t\t\tchoices?: { title: string; selected?: boolean; value: string }[];\n\t\t} = {\n\t\t\tname: key,\n\t\t\tinitial: defaultValue,\n\t\t\tmessage: typeof label === \"function\" ? label(context, argv) : label,\n\t\t\ttype,\n\t\t};\n\n\t\tif (parameters.type === \"select\" || parameters.type === \"multiselect\") {\n\t\t\tconst isMultiSelect = parameters.type === \"multiselect\";\n\t\t\tconst options = parameters.options as string[];\n\n\t\t\tconst choices = options.map((option) => ({\n\t\t\t\ttitle: option,\n\t\t\t\tvalue: option,\n\t\t\t\t...(isMultiSelect && {\n\t\t\t\t\tselected: ((defaultValue || []) as string[]).includes(\n\t\t\t\t\t\toption,\n\t\t\t\t\t),\n\t\t\t\t}),\n\t\t\t}));\n\n\t\t\tpromptObject.choices = choices;\n\t\t}\n\n\t\tconst data = await prompt<ObjectLikeConstraint>(promptObject);\n\n\t\treturn { key, value: data[key] };\n\t};\n};\n\nexport type InputParameters<\n\tValues extends ObjectLikeConstraint,\n\tKey extends keyof Values,\n> = InstructionParameters<\n\tValues,\n\tInstructionKey<Key> &\n\t\t(\n\t\t\t| {\n\t\t\t\t\tlabel: Label<Values>;\n\t\t\t\t\tdefaultValue?: Values[Key] extends boolean\n\t\t\t\t\t\t? Values[Key]\n\t\t\t\t\t\t: never;\n\t\t\t\t\ttype: \"confirm\";\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\tlabel: Label<Values>;\n\t\t\t\t\tdefaultValue?: Values[Key] extends string\n\t\t\t\t\t\t? Values[Key]\n\t\t\t\t\t\t: never;\n\t\t\t\t\toptions: Values[Key] extends string ? Values[Key][] : never;\n\t\t\t\t\ttype: \"select\";\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\tlabel: Label<Values>;\n\t\t\t\t\tdefaultValue?: Values[Key] extends string\n\t\t\t\t\t\t? Values[Key]\n\t\t\t\t\t\t: never;\n\t\t\t\t\ttype: \"text\";\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\tlabel: Label<Values>;\n\t\t\t\t\tdefaultValue?: Values[Key] extends string[]\n\t\t\t\t\t\t? Values[Key]\n\t\t\t\t\t\t: never;\n\t\t\t\t\toptions: Values[Key] extends string[] ? Values[Key] : never;\n\t\t\t\t\ttype: \"multiselect\";\n\t\t\t  }\n\t\t)\n>;\n", "/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport type {\n\tCreateInstruction,\n\tInstructionKey,\n\tInstructionParameters,\n\tObjectLikeConstraint,\n\tProgramMetadata,\n} from \"../../types\";\nimport type { CommandController } from \"../command\";\n\nexport const createOption =\n\t(\n\t\tcommandController: CommandController,\n\t\t{ argv }: ProgramMetadata,\n\t): CreateInstruction<\n\t\tOptionParameters<ObjectLikeConstraint, keyof ObjectLikeConstraint>\n\t> =>\n\t(parameters) => {\n\t\tconst { key, name, description, defaultValue } = parameters;\n\n\t\tconst aliases =\n\t\t\ttypeof name === \"string\" ? [name] : [name.short, name.long];\n\n\t\tconst metadataKey = aliases\n\t\t\t.map(\n\t\t\t\t(alias, index) =>\n\t\t\t\t\t\"-\".repeat(aliases.length > 1 ? index + 1 : 2) + alias,\n\t\t\t)\n\t\t\t.join(\", \");\n\n\t\tcommandController.addOptionDescription(metadataKey, description);\n\n\t\treturn async function execute() {\n\t\t\tlet value: unknown;\n\n\t\t\tfor (const alias of aliases) {\n\t\t\t\tif (alias in argv.options) {\n\t\t\t\t\tvalue = argv.options[alias];\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Promise.resolve({ key, value: value ?? defaultValue });\n\t\t};\n\t};\n\nexport type OptionParameters<\n\tValues extends ObjectLikeConstraint,\n\tKey extends keyof Values,\n> = InstructionParameters<\n\tValues,\n\tInstructionKey<Key> & {\n\t\tname: string | { long: string; short: string };\n\t\tdescription: string;\n\t\tdefaultValue?: Values[Key];\n\t}\n>;\n", "import { Listr, PRESET_TIMER } from \"listr2\";\n\nimport type {\n\tArgumentValues,\n\tContext,\n\tCreateInstruction,\n\tInstructionKey,\n\tInstructionParameters,\n\tLabel,\n\tObjectLikeConstraint,\n} from \"../../types\";\n\nexport const createTask: CreateInstruction<\n\tTaskParameters<ObjectLikeConstraint, keyof ObjectLikeConstraint>\n> = (parameters) => {\n\tconst { key, label, handler } = parameters;\n\n\tconst receiver = label\n\t\t? new Listr([], {\n\t\t\t\trendererOptions: {\n\t\t\t\t\tcollapseErrors: false,\n\t\t\t\t\tformatOutput: \"wrap\",\n\t\t\t\t\tshowErrorMessage: true,\n\t\t\t\t\ttimer: PRESET_TIMER,\n\t\t\t\t},\n\t\t  })\n\t\t: null;\n\n\treturn async function execute(context, argv) {\n\t\tlet value: unknown;\n\n\t\tif (!receiver) {\n\t\t\tvalue = await handler(context, argv);\n\t\t} else {\n\t\t\treceiver.add({\n\t\t\t\t...(label && {\n\t\t\t\t\ttitle:\n\t\t\t\t\t\ttypeof label === \"function\"\n\t\t\t\t\t\t\t? label(context, argv)\n\t\t\t\t\t\t\t: label,\n\t\t\t\t}),\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\t\t\t\ttask: async () => (value = await handler(context, argv)),\n\t\t\t});\n\n\t\t\tawait receiver.run();\n\t\t}\n\n\t\treturn { key, value };\n\t};\n};\n\nexport type TaskParameters<\n\tValues extends ObjectLikeConstraint,\n\tKey extends keyof Values | undefined = undefined,\n> = InstructionParameters<\n\tValues,\n\tPartial<InstructionKey<Key>> & {\n\t\tlabel?: Label<Values>;\n\t\thandler: (\n\t\t\tcontext: Context<Values>,\n\t\t\targv: ArgumentValues,\n\t\t) => Key extends keyof Values\n\t\t\t? Promise<Values[Key]> | Values[Key]\n\t\t\t: Promise<void> | void;\n\t}\n>;\n", "import fs from \"fs\";\nimport path from \"path\";\n\nimport type { PackageMetadata } from \"../../types\";\n\nexport const findNearestPackageJson = (pathname: string): PackageMetadata => {\n\tconst packagePathname = path.resolve(pathname, \"package.json\");\n\n\tif (isFileExists(packagePathname)) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-var-requires\n\t\treturn require(packagePathname) as PackageMetadata;\n\t}\n\n\treturn findNearestPackageJson(path.resolve(pathname, \"..\"));\n};\n\nconst isFileExists = (pathname: string) => {\n\ttry {\n\t\tfs.accessSync(pathname, fs.constants.F_OK);\n\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport const getPackageMetadata = () => {\n\tconst mainFilename = require.main?.filename;\n\n\tif (!mainFilename) {\n\t\tthrow new Error(\n\t\t\t\"Termost was unable to retrieve automatically the package name and version. To fix it, use `termost({ name, description, version })` to define them manually.\",\n\t\t);\n\t}\n\n\treturn findNearestPackageJson(path.dirname(mainFilename));\n};\n", "// eslint-disable-next-line sonarjs/cognitive-complexity\nexport const getArguments = () => {\n\tconst parameters = process.argv.slice(2);\n\tlet command: string | undefined;\n\tconst operands: string[] = [];\n\tconst options: Record<string, boolean | number | string> = {};\n\tlet currentOptionName: string | undefined;\n\n\tconst addOptimisticOption = (name: string, value?: boolean | string) => {\n\t\tif (value) {\n\t\t\toptions[name] = typeof value === \"string\" ? castValue(value) : true;\n\t\t} else {\n\t\t\tcurrentOptionName = name;\n\t\t}\n\t};\n\n\tconst flushOptimisticOption = () => {\n\t\tif (currentOptionName) {\n\t\t\toptions[currentOptionName] = true;\n\t\t\tcurrentOptionName = undefined;\n\t\t}\n\t};\n\n\tfor (const parameter of parameters) {\n\t\tconst shortFlagMatchResult = SHORT_FLAG_REGEX.exec(parameter)?.groups;\n\t\tconst longFlagMatchResult = LONG_FLAG_REGEX.exec(parameter)?.groups;\n\n\t\tif (shortFlagMatchResult?.name) {\n\t\t\tflushOptimisticOption();\n\n\t\t\tconst optionFlags = shortFlagMatchResult.name.split(\"\");\n\t\t\tconst lastIndex = optionFlags.length - 1;\n\n\t\t\toptionFlags.forEach((flag, index) => {\n\t\t\t\taddOptimisticOption(\n\t\t\t\t\tflag,\n\t\t\t\t\tlastIndex === index ? undefined : true,\n\t\t\t\t);\n\t\t\t});\n\t\t} else if (longFlagMatchResult?.name) {\n\t\t\tflushOptimisticOption();\n\t\t\taddOptimisticOption(\n\t\t\t\tlongFlagMatchResult.name,\n\t\t\t\tlongFlagMatchResult.value,\n\t\t\t);\n\t\t} else if (currentOptionName) {\n\t\t\toptions[currentOptionName] = castValue(parameter);\n\t\t\tcurrentOptionName = undefined;\n\t\t} else if (!command) {\n\t\t\tcommand = parameter;\n\t\t} else {\n\t\t\toperands.push(parameter);\n\t\t}\n\t}\n\n\tflushOptimisticOption();\n\n\treturn { command, operands, options };\n};\n\nconst SHORT_FLAG_REGEX = /^-(?<name>(?!-).*)$/;\nconst LONG_FLAG_REGEX = /^--(?<name>.*?)(?:=(?<value>.+))?$/;\n\nconst castValue = (value: string) => {\n\ttry {\n\t\treturn JSON.parse(value) as boolean | number | string;\n\t} catch {\n\t\treturn value;\n\t}\n};\n", "import { createCommand, getCommandController } from \"./api/command\";\nimport type { CommandParameters } from \"./api/command\";\nimport { createInput } from \"./api/input\";\nimport type { InputParameters } from \"./api/input\";\nimport { createOption } from \"./api/option\";\nimport type { OptionParameters } from \"./api/option\";\nimport { createTask } from \"./api/task\";\nimport type { TaskParameters } from \"./api/task\";\nimport { getPackageMetadata } from \"./helpers/package\";\nimport { getArguments } from \"./helpers/stdin\";\nimport type {\n\tCommandName,\n\tCreateInstruction,\n\tEmptyObject,\n\tInstructionParameters,\n\tObjectLikeConstraint,\n\tPackageMetadata,\n\tProgramMetadata,\n} from \"./types\";\n\n/**\n * The termost fluent interface API\n */\nexport type Termost<Values extends ObjectLikeConstraint = EmptyObject> = {\n\t/**\n\t * Allows to attach a new sub-command to the program\n\t * @param name - The CLI command name\n\t * @param description - The CLI command description\n\t * @returns The Command API\n\t */\n\tcommand: <CommandValues extends ObjectLikeConstraint = EmptyObject>(\n\t\tparams: CommandParameters,\n\t) => Termost<CommandValues & Values>;\n\tinput: <Key extends keyof Values>(\n\t\tparams: InputParameters<Values, Key>,\n\t) => Termost<Values>;\n\toption: <Key extends keyof Values>(\n\t\tparams: OptionParameters<Values, Key>,\n\t) => Termost<Values>;\n\ttask: <Key extends keyof Values | undefined = undefined>(\n\t\tparams: TaskParameters<Values, Key>,\n\t) => Termost<Values>;\n};\n\nexport function termost<Values extends ObjectLikeConstraint = EmptyObject>(\n\tmetadata: Partial<PackageMetadata> | string,\n\tcallbacks: TerminationCallbacks = {},\n) {\n\tlet { name, description, version } = isObject(metadata)\n\t\t? metadata\n\t\t: {\n\t\t\t\tname: undefined,\n\t\t\t\tdescription: metadata,\n\t\t\t\tversion: undefined,\n\t\t  };\n\n\tif (\n\t\tname === undefined ||\n\t\tdescription === undefined ||\n\t\tversion === undefined\n\t) {\n\t\tconst packageMetadata = getPackageMetadata();\n\n\t\tname ??= packageMetadata.name;\n\t\tdescription ??= packageMetadata.description;\n\t\tversion ??= packageMetadata.version;\n\t}\n\n\tconst { command = name, operands, options } = getArguments();\n\n\tsetGracefulListeners(callbacks);\n\n\treturn createProgram<Values>({\n\t\tname,\n\t\tdescription,\n\t\targv: { command, operands, options },\n\t\tversion,\n\t});\n}\n\nexport const createProgram = <Values extends ObjectLikeConstraint>(\n\tmetadata: ProgramMetadata,\n): Termost<Values> => {\n\tconst { name, description, argv } = metadata;\n\tconst rootCommandName: CommandName = name;\n\tlet currentCommandName: CommandName = rootCommandName;\n\n\tconst createInstruction = <\n\t\tParameters extends InstructionParameters<ObjectLikeConstraint>,\n\t>(\n\t\tfactory: CreateInstruction<Parameters>,\n\t\tparams: InstructionParameters<Values>,\n\t) => {\n\t\tconst instruction = factory(params as Parameters);\n\t\tconst controller = getCommandController<Values>(currentCommandName);\n\n\t\tcontroller.addInstruction(async () => {\n\t\t\tconst { skip } = params;\n\t\t\tconst context = controller.getContext(rootCommandName);\n\n\t\t\tif (skip?.(context, argv)) return;\n\n\t\t\tconst output = await instruction(context, argv);\n\n\t\t\tif (!output || !output.key) return;\n\n\t\t\tcontroller.addValue(\n\t\t\t\toutput.key,\n\t\t\t\toutput.value as Values[keyof Values],\n\t\t\t);\n\t\t});\n\t};\n\n\tconst program: Termost<Values> = {\n\t\tcommand<CommandValues>(params: CommandParameters) {\n\t\t\tcurrentCommandName = createCommand(params, metadata);\n\n\t\t\treturn this as Termost<CommandValues & Values>;\n\t\t},\n\t\tinput(params) {\n\t\t\tcreateInstruction(createInput, params);\n\n\t\t\treturn this;\n\t\t},\n\t\toption(params) {\n\t\t\tcreateInstruction(\n\t\t\t\tcreateOption(\n\t\t\t\t\tgetCommandController(currentCommandName),\n\t\t\t\t\tmetadata,\n\t\t\t\t),\n\t\t\t\tparams,\n\t\t\t);\n\n\t\t\treturn this;\n\t\t},\n\t\ttask(params) {\n\t\t\tcreateInstruction(createTask, params);\n\n\t\t\treturn this;\n\t\t},\n\t};\n\n\t// @note: the root command is created by default\n\tprogram.command({\n\t\tname,\n\t\tdescription,\n\t});\n\n\treturn program;\n};\n\ntype TerminationCallbacks = Partial<{\n\tonException: (error: Error) => void;\n\tonShutdown: () => void;\n}>;\n\nconst setGracefulListeners = ({\n\tonException = () => {\n\t\treturn;\n\t},\n\tonShutdown = () => {\n\t\treturn;\n\t},\n}: TerminationCallbacks) => {\n\tprocess.on(\"SIGTERM\", () => {\n\t\tonShutdown();\n\t\tprocess.exit(0);\n\t});\n\n\tprocess.on(\"SIGINT\", () => {\n\t\tonShutdown();\n\t\tprocess.exit(0);\n\t});\n\n\tprocess.on(\"uncaughtException\", (error) => {\n\t\tonException(error);\n\t\tprocess.exit(1);\n\t});\n\n\tprocess.on(\"unhandledRejection\", (reason) => {\n\t\tif (reason instanceof Error) {\n\t\t\tonException(reason);\n\t\t}\n\n\t\tprocess.exit(1);\n\t});\n};\n\nconst isObject = (value: unknown): value is ObjectLikeConstraint => {\n\treturn value !== null && typeof value === \"object\";\n};\n", "import { exec } from \"./helpers/process\";\nimport { format, message } from \"./helpers/stdout\";\n\nexport { termost } from \"./termost\";\nexport type { Termost } from \"./termost\";\nexport const helpers = {\n\texec,\n\tformat,\n\tmessage,\n};\n"],
+  "mappings": "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",
+  "names": ["spawn", "exec", "command", "options", "resolve", "reject", "stdout", "stderr", "bin", "args", "childProcess", "chunk", "exitCode", "output", "pico", "format", "message", "color", "modifiers", "transformers", "colorMapper", "mod", "modifierMapper", "compose", "fns", "prevFn", "nextFn", "value", "content", "label", "type", "defaultLabel", "icon", "method", "formatPropertiesByType", "messages", "msg", "createQueue", "items", "item", "getCommandController", "name", "controller", "commandControllerCollection", "createCommandController", "description", "instructions", "createQueue", "context", "metadata", "instruction", "key", "value", "task", "rootCommandName", "globalMetadata", "commandDescriptionCollection", "getCommandDescriptionCollection", "createCommand", "name", "description", "rootCommandName", "argv", "version", "isRootCommand", "isActiveCommand", "controller", "createCommandController", "rootController", "getCommandController", "optionKeys", "OPTION_HELP_NAMES", "showHelp", "OPTION_VERSION_NAMES", "currentCommandName", "commandMetadata", "options", "commands", "getCommandDescriptionCollection", "commandKeys", "hasOptions", "hasCommands", "printTitle", "print", "format", "padding", "value", "item", "commandDescription", "printLabelValue", "key", "parameters", "message", "label", "prompt", "createInput", "parameters", "key", "label", "defaultValue", "type", "context", "argv", "promptObject", "isMultiSelect", "choices", "option", "data", "createOption", "commandController", "argv", "parameters", "key", "name", "description", "defaultValue", "aliases", "metadataKey", "alias", "index", "value", "Listr", "PRESET_TIMER", "createTask", "parameters", "key", "label", "handler", "receiver", "context", "argv", "value", "fs", "path", "findNearestPackageJson", "pathname", "packagePathname", "path", "isFileExists", "__require", "fs", "getPackageMetadata", "mainFilename", "getArguments", "parameters", "command", "operands", "options", "currentOptionName", "addOptimisticOption", "name", "value", "castValue", "flushOptimisticOption", "parameter", "shortFlagMatchResult", "SHORT_FLAG_REGEX", "longFlagMatchResult", "LONG_FLAG_REGEX", "optionFlags", "lastIndex", "flag", "index", "termost", "metadata", "callbacks", "name", "description", "version", "isObject", "packageMetadata", "getPackageMetadata", "command", "operands", "options", "getArguments", "setGracefulListeners", "createProgram", "argv", "rootCommandName", "currentCommandName", "createInstruction", "factory", "params", "instruction", "controller", "getCommandController", "skip", "context", "output", "program", "createCommand", "createInput", "createOption", "createTask", "onException", "onShutdown", "error", "reason", "value", "helpers", "exec", "format", "message"]
 }
